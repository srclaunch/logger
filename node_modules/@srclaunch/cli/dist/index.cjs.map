{
  "version": 3,
  "sources": ["../src/index.ts", "../src/lib/command.ts", "../src/lib/build/esbuild.ts", "../src/lib/build/types.ts", "../node_modules/@srclaunch/types/src/activity/index.ts", "../node_modules/@srclaunch/types/src/business/commerce/payment-method/index.ts", "../node_modules/@srclaunch/types/src/business/commerce/subscription/index.ts", "../node_modules/@srclaunch/types/src/communications/chat.ts", "../node_modules/@srclaunch/types/src/communications/medium.ts", "../node_modules/@srclaunch/types/src/engineering/logging/level.ts", "../node_modules/@srclaunch/types/src/engineering/networking/http/index.ts", "../node_modules/@srclaunch/types/src/i18n/locale/country.ts", "../node_modules/@srclaunch/types/src/i18n/currency/index.ts", "../node_modules/@srclaunch/types/src/i18n/language/index.ts", "../node_modules/@srclaunch/types/src/i18n/locale/index.ts", "../node_modules/@srclaunch/types/src/i18n/time/region.ts", "../node_modules/@srclaunch/types/src/i18n/time/timezone.ts", "../node_modules/@srclaunch/types/src/i18n/time/timezones.ts", "../node_modules/@srclaunch/types/src/i18n/locale/region.ts", "../node_modules/@srclaunch/types/src/i18n/locale/countries.ts", "../node_modules/@srclaunch/types/src/i18n/locale/locales.ts", "../node_modules/@srclaunch/types/src/i18n/time/regions.ts", "../node_modules/@srclaunch/types/src/srclaunch/analytics/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/analytics/web/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/build.ts", "../node_modules/@srclaunch/types/src/srclaunch/data/data-point/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/data/model/defaults.ts", "../node_modules/@srclaunch/types/src/srclaunch/data/model/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/data/primitive/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/deployment.ts", "../node_modules/@srclaunch/types/src/srclaunch/environment.ts", "../node_modules/@srclaunch/types/src/srclaunch/infrastructure.ts", "../node_modules/@srclaunch/types/src/srclaunch/onboarding/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/pipeline.ts", "../node_modules/@srclaunch/types/src/srclaunch/platform.ts", "../node_modules/@srclaunch/types/src/srclaunch/problem.ts", "../node_modules/@srclaunch/types/src/srclaunch/project.ts", "../node_modules/@srclaunch/types/src/srclaunch/queue.ts", "../node_modules/@srclaunch/types/src/srclaunch/routing.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/appearance/color.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/application.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/boolean.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/date.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/format.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/i18n/currency.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/i18n/language.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/i18n/locale.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/menu.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/network.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/number.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/pii.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/places/transportation/airport.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/standards.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/string.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/validation/form/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/user/authentication/verification.ts", "../node_modules/@srclaunch/types/src/srclaunch/user/role.ts", "../src/lib/build/formats.ts", "../src/lib/file-system.ts", "../src/lib/build/vite.ts", "../src/commands/build.ts", "../src/commands/changesets.ts", "../src/commands/dev.tsx", "../src/commands/help.ts", "../src/commands/infrastructure.ts", "../src/lib/models/build/outputs/srclaunch.ts", "../src/lib/models/build/exports.ts", "../src/lib/models/build/stubs/index.ts", "../src/lib/models/build/stubs/models.ts", "../src/lib/models/build/index.ts", "../src/lib/models/list.ts", "../src/lib/models/build/clean.ts", "../src/commands/models.ts", "../src/commands/preview.ts", "../src/commands/projects.ts", "../src/commands/release.ts", "../src/commands/serve.ts", "../src/lib/config.ts"],
  "sourcesContent": ["import meow from 'meow';\nimport updateNotifier, { Package } from 'update-notifier';\nimport * as buildCommands from './commands/build.js';\nimport * as changesetCommands from './commands/changesets.js';\nimport * as devCommands from './commands/dev.js';\nimport * as helpCommands from './commands/help.js';\nimport * as infrastructureCommands from './commands/infrastructure.js';\nimport * as modelCommands from './commands/models.js';\nimport * as previewCommands from './commands/preview.js';\nimport * as projectCommands from './commands/projects.js';\nimport * as releaseCommands from './commands/release.js';\nimport * as serveCommands from './commands/serve.js';\n\nimport { getSrcLaunchConfig } from './lib/config.js';\nimport { Command, CommandType, handleCommand } from './lib/command.js';\n\nexport type { Command };\nexport { CommandType };\n\nexport const helpMessage = `\nUsage\n  $ srclaunch <command>\n\nCommands\n  build - Build SrcLaunch project if srclaunch.config.json is found in the current directory\n  models\n    * build - Build models into Sequelize models, Typescript definitions and JSON\n  dev - Start Web/mobile apps in development mode.\n  project\n    * create - Create a new SrcLaunch project  \n  release - Collect changes, bump and tag version, and deploy\n\nTo get help for a specific command type help after the command name, for example:\n  $ srclaunch dev help\n`;\n\nexport const cli = meow(helpMessage, {\n  flags: {\n    clean: {\n      type: 'boolean',\n    },\n    config: {\n      type: 'string',\n      alias: 'c',\n    },\n    help: {\n      type: 'boolean',\n      alias: 'h',\n    },\n    version: {\n      type: 'boolean',\n      alias: 'v',\n    },\n  },\n  importMeta: import.meta,\n});\n\nexport async function main() {\n  updateNotifier({ pkg: cli.pkg as Package }).notify();\n\n  const command = cli.input;\n  const flags = cli.flags;\n  const config = await getSrcLaunchConfig();\n\n  try {\n    await handleCommand({\n      cli,\n      command,\n      commands: [\n        buildCommands.default,\n        changesetCommands.default,\n        devCommands.default,\n        helpCommands.default,\n        infrastructureCommands.default,\n        modelCommands.default,\n        previewCommands.default,\n        projectCommands.default,\n        releaseCommands.default,\n        serveCommands.default,\n      ],\n      config,\n      flags,\n    });\n  } catch (error) {\n    // const { waitUntilExit } = render(\n    //   // <FullScreen>\n    //   <Text>{err.message}</Text>,\n    //   // </FullScreen>,\n    // );\n    // await waitUntilExit();\n    console.error(error);\n  }\n}\n\nexport default main();\n", "import { Result, TypedFlags } from 'meow';\n\nexport enum CommandType {\n  Project = 'project',\n  Workspace = 'workspace',\n}\n\nexport type RunArguments<T, F = TypedFlags<{}>> = {\n  cli: Result<{}>;\n  config: T;\n  flags: F;\n};\n\nexport type RunFunction<T, F = TypedFlags<{}>> = (\n  args: RunArguments<T, F>,\n) => Promise<void>;\n\nexport type CommandConstructorArgs<T, F = TypedFlags<{}>> = {\n  description: string;\n  flags?: F;\n  name: string;\n  run?: RunFunction<T, F>;\n  commands?: Command<T, F>[];\n  type?: CommandType;\n};\n\nexport class Command<T, F = TypedFlags<{}>> {\n  flags?: F;\n  name: string;\n  private runFunction?: RunFunction<T, F>;\n  commands: CommandConstructorArgs<T, F>['commands'];\n  type: CommandType = CommandType.Project;\n\n  constructor(options: CommandConstructorArgs<T, F>) {\n    this.name = options.name;\n    this.commands = options.commands;\n    this.flags = options.flags;\n    this.type = options.type ?? CommandType.Project;\n    this.runFunction = options.run as RunFunction<T, F>;\n  }\n\n  public async run({ cli, config, flags }: RunArguments<T, F>): Promise<void> {\n    if (this.runFunction) {\n      return await this.runFunction({\n        cli,\n        config: config as T,\n        flags,\n      });\n    }\n  }\n}\n\nexport async function handleCommand({\n  cli,\n  config,\n  command,\n  commands,\n  flags,\n}: {\n  cli: Result<{}>;\n  command: string[];\n  commands?: Command<any>[];\n  config: unknown;\n  flags: TypedFlags<{}> & Record<string, unknown>;\n}): Promise<void> {\n  if (!command || command.length === 0 || !command[0]) {\n    console.error('No command specified');\n    return;\n  }\n\n  if (!commands) {\n    console.error('No commands specified');\n    return;\n  }\n\n  const commandName = command[0];\n  const matchingCommand = commands.find(cmd => cmd.name === commandName);\n\n  if (!matchingCommand) {\n    console.error(`Unknown command ${commandName}`);\n    return;\n  }\n\n  if (command.length === 1) {\n    matchingCommand.run({\n      cli,\n      config,\n      flags,\n    });\n  } else if (command.length > 1) {\n    handleCommand({\n      cli,\n      config,\n      command: command.slice(1),\n      commands: matchingCommand.commands,\n      flags,\n    });\n  }\n}\n", "import { build as buildCommand, Format } from 'esbuild';\nimport { build as buildTypes } from './types.js';\nimport {\n  BuildFormat,\n  BuildOptions,\n  BuildPlatform,\n  BuildTarget,\n  BundleOptions,\n  ESBuildOptions,\n} from '@srclaunch/types';\nimport path from 'path';\nimport { getFormatFileExtension } from './formats.js';\nimport { emptyDirectory } from '../file-system.js';\n\nexport async function build({\n  bundle = true,\n  format = BuildFormat.ESM,\n  input,\n  minify = true,\n  output,\n  platform = BuildPlatform.Browser,\n  sourcemap = true,\n  splitting = true,\n  target = BuildTarget.ESNext,\n  treeShaking = true,\n  types = true,\n}: ESBuildOptions) {\n  try {\n    const entryPoints = [\n      ...[\n        path.join(\n          path.resolve(),\n          input?.directory ?? 'src',\n          input?.file ?? 'index.ts',\n        ),\n      ],\n      ...(input?.files\n        ? input.files.map(f =>\n            path.join(path.resolve(), input?.directory ?? 'src', f),\n          )\n        : []),\n    ];\n\n    if (output?.clean) {\n      await emptyDirectory(output?.directory ?? 'dist');\n    }\n\n    const result = await buildCommand({\n      bundle: Boolean(bundle),\n      entryPoints: entryPoints,\n      external: typeof bundle === 'object' ? (bundle.exclude as string[]) : [],\n      format: format as Format,\n      minify,\n      outdir: splitting ? output?.directory ?? 'dist' : undefined,\n      outfile: splitting\n        ? undefined\n        : `${output?.directory ?? 'dist'}/${\n            output?.file ?? 'index'\n          }${getFormatFileExtension(format)}`,\n      platform,\n      sourcemap,\n      splitting: format === 'esm' && splitting,\n      target,\n      treeShaking,\n    });\n\n    if (result.warnings) {\n      result.warnings.forEach(warning => {\n        console.warn(warning.text);\n      });\n    }\n\n    if (result.errors) {\n      result.errors.forEach(error => {\n        console.error(error.text);\n      });\n    }\n\n    if (types) {\n      console.info('Building types...');\n      await buildTypes({ input, types, output });\n    }\n\n    console.info(`Finished building to ${format.toLocaleUpperCase()} format.`);\n  } catch (err: any) {\n    console.error(err);\n  }\n}\n", "import ts, { Program } from 'typescript';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport { BuildOptions } from '@srclaunch/types';\n\nexport type TypesBuildOptions = Pick<\n  BuildOptions,\n  'input' | 'types' | 'output'\n>;\n\nexport async function build({ input, types, output }: TypesBuildOptions) {\n  const configPath = typeof types === 'object' ? types.configPath : undefined;\n\n  const tsConfigContents = configPath\n    ? await fs.readFile(path.join(path.resolve(), configPath), 'utf8')\n    : null;\n  const tsConfig = tsConfigContents\n    ? await JSON.parse(tsConfigContents.toString())\n    : {\n        extends: '@srclaunch/dx/tsconfig.ui.json',\n        include: [path.join(path.resolve(), input?.directory ?? 'src')],\n      };\n  const tsConfigUpdatedWithPath = {\n    ...tsConfig,\n    compilerOptions: {\n      ...tsConfig.compilerOptions,\n      declarationDir: path.join(path.resolve(), output?.directory ?? 'dist'),\n      listEmittedFiles: true,\n      rootDir: path.join(path.resolve(), input?.directory ?? 'src'),\n    },\n  };\n  const { options: tsOptions } = ts.parseJsonConfigFileContent(\n    tsConfigUpdatedWithPath,\n    ts.sys,\n    path.join(path.resolve()),\n  );\n  const srcFiles = await fs.readdir(\n    path.join(path.resolve(), input?.directory ?? 'src'),\n  );\n  const buildFiles = srcFiles\n    .filter(f => f.endsWith('.ts') || f.endsWith('.tsx'))\n    .map(file => {\n      return path.join(path.resolve(), input?.directory ?? 'src', file);\n    });\n  const program: Program = ts.createProgram(buildFiles, tsOptions);\n  const emitResult = program.emit();\n  const allDiagnostics = ts\n    .getPreEmitDiagnostics(program)\n    .concat(emitResult.diagnostics);\n\n  for (const diagnostic of allDiagnostics) {\n    if (diagnostic.file) {\n      const { line, character } = diagnostic.file.getLineAndCharacterOfPosition(\n        diagnostic.start!,\n      );\n      const message = ts.flattenDiagnosticMessageText(\n        diagnostic.messageText,\n        '\\n',\n      );\n      console.log(\n        `${diagnostic.file.fileName} (${line + 1},${\n          character + 1\n        }): ${message}`,\n      );\n    } else {\n      console.log(\n        `${ts.flattenDiagnosticMessageText(diagnostic.messageText, '\\n')}`,\n      );\n    }\n  }\n}\n", "import { Image } from '../';\n\nexport type Activity = {\n  readonly who?: {\n    readonly image?: Image;\n    readonly name?: string;\n    readonly to?: string;\n  };\n  readonly what?: {\n    readonly image?: Image;\n    readonly label?: string;\n    readonly name?: Activities;\n    readonly to?: string;\n  };\n  readonly when?: string;\n  readonly where?: string;\n  readonly why?: string;\n  readonly how?: string;\n};\n\nexport enum Activities {\n  Comment = 'comment',\n  Create = 'create',\n  Delete = 'delete',\n  Edit = 'edit',\n  Invoice = 'invoice',\n  Message = 'message',\n  PageView = 'pageView',\n  Paid = 'paid',\n  Payment = 'payment',\n  Purchase = 'purchase',\n  Referral = 'referral',\n  Renewal = 'renewal',\n  Signup = 'signup',\n  Subscription = 'subscription',\n  Upgrade = 'upgrade',\n}\n", "export enum PaymentIntentStatus {\n  RequiresPaymentMethod = 'requires_payment_method',\n  RequiresConfirmation = 'requires_confirmation',\n  RequiresAction = 'requires_action',\n  Processing = 'processing',\n  RequiresCapture = 'requires_capture',\n  Canceled = 'canceled',\n  Succeeded = 'succeeded',\n}\n\nexport type PaymentMethod = {\n  id: string;\n  stripe_id: string;\n  brand: string;\n  country: string;\n  last_four_digits: string;\n  exp_month: number;\n  exp_year: number;\n  three_d_secure_usage_supported: boolean;\n};\n", "import { Person } from '../../../people/person';\nimport { PaymentMethod } from '../payment-method';\nimport { Product } from '../product/index';\n\nexport enum SubscriptionStatus {\n  Incomplete = 'incomplete',\n  IncompleteExpired = 'incomplete_expired',\n  Trialing = 'trialing',\n  Active = 'active',\n  PastDue = 'past_due',\n  Canceled = 'canceled',\n  Unpaid = 'unpaid',\n}\n\nexport enum SubscriptionPlanDuration {\n  Monthly = 'monthly',\n  Quarterly = 'quarterly',\n  Yearly = 'yearly',\n  Lifetime = 'lifetime',\n}\n\nexport type Subscription = {\n  active: boolean;\n  end_date: Date;\n  canceled: boolean;\n  renewal_date: Date;\n  id: string;\n  product_id: Product['id'];\n  plan_duration: SubscriptionPlanDuration;\n  trial_membership_active: boolean;\n  trial_membership_end_date: Date;\n  status: SubscriptionStatus;\n  payment_method_id: PaymentMethod['id'];\n  person_id: Person['id'];\n};\n", "import { ISO8601String } from \"../i18n/date\";\nimport { Person } from '../people/person'\n\nexport enum ChatMessageStatus {\n  Delivered = \"delivered\",\n  Read = \"read\",\n  Sending = \"sending\",\n  Sent = \"sent\",\n}\n\n\n\nexport enum ChatMessageType {\n  Audio = \"audio\",\n  File = \"file\",\n  Image = \"image\",\n  Text = \"text\",\n  Video = \"video\",\n}\n\nexport enum ChatMessageAttachmentType {\n  Audio = \"audio\",\n  File = \"file\",\n  Image = \"image\",\n  Video = \"video\",\n}\n\nexport enum ChatMessageReactionType {\n  Angry = \"angry\",\n  Laugh = \"laugh\",\n  Like = \"like\",\n  Love = \"love\",\n  Sad = \"sad\",\n  Wow = \"wow\",\n  Wink = \"wink\",\n  Yay = \"yay\",\n}\n\n\nexport type ChatMessage = {\n  // The message attachments.\n  attachments?: {\n    // The attachment type.\n    type: ChatMessageAttachmentType;\n\n    // The attachment URL.\n    url: string;\n  }[];\n\n  // The message text.\n  body: string;\n\n  // The time the message was sent.\n  date: ISO8601String;\n\n  // Unique identifier for the message.\n  id?: string;\n\n  // The message reactions.\n  reactions?: {\n    // The reaction type.\n    type: ChatMessageReactionType;\n  }[];\n\n  recipients?: Person[];\n\n\n  // The message status.\n  status?: ChatMessageStatus;\n\n  // Subject of the message.\n  subject?: string;\n \n  // The user who sent the message.\n  sender?: {\n    avatar?: string;\n    id: string;\n    name: string;\n  };\n\n\n  \n  // The type of message.\n  type?: ChatMessageType;\n};\n\n\n", "export enum CommunicationMedium {\n  Email = 'email',\n  PhoneNumber = 'phone_number',\n}\n", "/*\n  This is a decent start, but I should make the log level TSDoc's more clear\n  of the intention and expected result from using each level.\n*/\nexport enum LogLevel {\n  /**\n   * Analytics (Business/Web) related events.\n   */\n  Analytics = 'analytics',\n  /**\n   * Exception that needs urgent review by engineers.\n   */\n  Critical = 'critical',\n  /**\n   * Logging used by developers to temporarily debug an issue.\n   */\n  Debug = 'debug',\n  /**\n   * A runtime exception that does not require immediate attention.\n   */\n  Exception = 'exception',\n  /**\n   * An HTTP request/response event. Default is 'info' level.\n   */\n  Http = 'http',\n  /**\n   * Used for logging general information regarding application processes.\n   */\n  Info = 'info',\n  /**\n   * Used to warn about possible issues.\n   */\n  Warning = 'warning',\n}\n", "// import { ExceptionObject } from '@srclaunch/exceptions';\n\nexport type HttpRequestHost = string;\nexport type HttpRequestResource = string;\nexport type HttpRequestBody = Record<string, unknown> | string | unknown | null;\n\nexport enum HttpRequestMethod {\n  Delete = 'delete',\n  Get = 'get',\n  Head = 'head',\n  Patch = 'patch',\n  Post = 'post',\n  Put = 'put',\n}\n\nexport type HttpRequestHeaders = Record<string, string>;\n\nexport type HttpResponseBody<T> = T & (Record<string, unknown> | unknown);\n\nexport type HttpResponseHeaders = Record<string, string>;\n\nexport enum HttpResponseCode {\n  CONTINUE = 100,\n  SWITCHING_PROTOCOLS = 101,\n  PROCESSING = 102,\n  OK = 200,\n  CREATED = 201,\n  ACCEPTED = 202,\n  NON_AUTHORITATIVE_INFORMATION = 203,\n  NO_CONTENT = 204,\n  RESET_CONTENT = 205,\n  PARTIAL_CONTENT = 206,\n  MULTI_STATUS = 207,\n  ALREADY_REPORTED = 208,\n  IM_USED = 226,\n  MULTIPLE_CHOICES = 300,\n  MOVED_PERMANENTLY = 301,\n  FOUND = 302,\n  SEE_OTHER = 303,\n  NOT_MODIFIED = 304,\n  USE_PROXY = 305,\n  SWITCH_PROXY = 306,\n  TEMPORARY_REDIRECT = 307,\n  PERMANENT_REDIRECT = 308,\n  BAD_REQUEST = 400,\n  UNAUTHORIZED = 401,\n  PAYMENT_REQUIRED = 402,\n  FORBIDDEN = 403,\n  NOT_FOUND = 404,\n  METHOD_NOT_ALLOWED = 405,\n  NOT_ACCEPTABLE = 406,\n  PROXY_AUTHENTICATION_REQUIRED = 407,\n  REQUEST_TIMEOUT = 408,\n  CONFLICT = 409,\n  GONE = 410,\n  LENGTH_REQUIRED = 411,\n  PRECONDITION_FAILED = 412,\n  PAYLOAD_TOO_LARGE = 413,\n  URI_TOO_LONG = 414,\n  UNSUPPORTED_MEDIA_TYPE = 415,\n  RANGE_NOT_SATISFIABLE = 416,\n  EXPECTATION_FAILED = 417,\n  I_AM_A_TEAPOT = 418,\n  MISDIRECTED_REQUEST = 421,\n  UNPROCESSABLE_ENTITY = 422,\n  LOCKED = 423,\n  FAILED_DEPENDENCY = 424,\n  TOO_EARLY = 425,\n  UPGRADE_REQUIRED = 426,\n  PRECONDITION_REQUIRED = 428,\n  TOO_MANY_REQUESTS = 429,\n  REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\n  UNAVAILABLE_FOR_LEGAL_REASONS = 451,\n  INTERNAL_SERVER_ERROR = 500,\n  NOT_IMPLEMENTED = 501,\n  BAD_GATEWAY = 502,\n  SERVICE_UNAVAILABLE = 503,\n  GATEWAY_TIMEOUT = 504,\n  HTTP_VERSION_NOT_SUPPORTED = 505,\n  VARIANT_ALSO_NEGOTIATES = 506,\n  INSUFFICIENT_STORAGE = 507,\n  LOOP_DETECTED = 508,\n  BANDWIDTH_LIMIT_EXCEEDED = 509,\n  NOT_EXTENDED = 510,\n  NETWORK_AUTHENTICATION_REQUIRED = 511,\n}\n\nexport type HttpRequest = {\n  readonly body?: HttpRequestBody;\n  readonly details?: {\n    readonly date?: string;\n    readonly duration?: number;\n    readonly id?: string;\n    readonly response?: {\n      readonly id?: string;\n    };\n    readonly size?: number;\n  };\n  readonly headers?: HttpRequestHeaders;\n  readonly host?: HttpRequestHost;\n  readonly method: HttpRequestMethod;\n  readonly resource: HttpRequestResource;\n};\n\nexport type HttpResponse<T = Record<string, unknown>> = {\n  readonly body?: HttpResponseBody<T>;\n  readonly details?: {\n    readonly date?: string;\n    readonly duration?: number;\n    readonly id?: string;\n    readonly request?: {\n      readonly id?: string;\n    };\n    readonly size?: number;\n  };\n  readonly headers?: HttpResponseHeaders;\n  readonly status?: {\n    readonly code: HttpResponseCode;\n  };\n};\n", "import { TimezoneRegions } from '../time/region';\nimport { TimezoneOffset } from '../time/timezone';\nimport { Timezones } from '../time/timezones';\nimport { CurrencyCode } from './../currency/index';\nimport { LocaleCode } from '.';\n\nexport enum CountryCode {\n  Afghanistan = 'AF',\n  Albania = 'AL',\n  Algeria = 'DZ',\n  AmericanSamoa = 'AS',\n  Andorra = 'AD',\n  Angola = 'AO',\n  Anguilla = 'AI',\n  Antarctica = 'AQ',\n  AntiguaAndBarbuda = 'AG',\n  Argentina = 'AR',\n  Armenia = 'AM',\n  Aruba = 'AW',\n  Australia = 'AU',\n  Austria = 'AT',\n  Azerbaijan = 'AZ',\n  Bahamas = 'BS',\n  Bahrain = 'BH',\n  Bangladesh = 'BD',\n  Barbados = 'BB',\n  Belarus = 'BY',\n  Belgium = 'BE',\n  Belize = 'BZ',\n  Benin = 'BJ',\n  Bermuda = 'BM',\n  Bhutan = 'BT',\n  Bolivia = 'BO',\n  BosniaAndHerzegovina = 'BA',\n  Botswana = 'BW',\n  BouvetIsland = 'BV',\n  Brazil = 'BR',\n  BritishIndianOceanTerritory = 'IO',\n  Brunei = 'BN',\n  Bulgaria = 'BG',\n  BurkinaFaso = 'BF',\n  Burundi = 'BI',\n  Cambodia = 'KH',\n  Cameroon = 'CM',\n  Canada = 'CA',\n  CapeVerde = 'CV',\n  CaymanIslands = 'KY',\n  CentralAfricanRepublic = 'CF',\n  Chad = 'TD',\n  Chile = 'CL',\n  China = 'CN',\n  ChristmasIsland = 'CX',\n  CocosKeelingIslands = 'CC',\n  Colombia = 'CO',\n  Comoros = 'KM',\n  Congo = 'CG',\n  CongoTheDemocraticRepublicOfThe = 'CD',\n  CookIslands = 'CK',\n  CostaRica = 'CR',\n  CoteDIvoire = 'CI',\n  Croatia = 'HR',\n  Cuba = 'CU',\n  Cyprus = 'CY',\n  CzechRepublic = 'CZ',\n  Denmark = 'DK',\n  Djibouti = 'DJ',\n  Dominica = 'DM',\n  DominicanRepublic = 'DO',\n  Ecuador = 'EC',\n  Egypt = 'EG',\n  ElSalvador = 'SV',\n  EquatorialGuinea = 'GQ',\n  Eritrea = 'ER',\n  Estonia = 'EE',\n  Ethiopia = 'ET',\n  FalklandIslands = 'FK',\n  FaroeIslands = 'FO',\n  Fiji = 'FJ',\n  Finland = 'FI',\n  France = 'FR',\n  FrenchGuiana = 'GF',\n  FrenchPolynesia = 'PF',\n  FrenchSouthernTerritories = 'TF',\n  Gabon = 'GA',\n  Gambia = 'GM',\n  Georgia = 'GE',\n  Germany = 'DE',\n  Ghana = 'GH',\n  Gibraltar = 'GI',\n  Greece = 'GR',\n  Greenland = 'GL',\n  Grenada = 'GD',\n  Guadeloupe = 'GP',\n  Guam = 'GU',\n  Guatemala = 'GT',\n  Guernsey = 'GG',\n  Guinea = 'GN',\n  GuineaBissau = 'GW',\n  Guyana = 'GY',\n  Haiti = 'HT',\n  HeardIslandMcdonaldIslands = 'HM',\n  HolySeeVaticanCityState = 'VA',\n  Honduras = 'HN',\n  HongKong = 'HK',\n  Hungary = 'HU',\n  Iceland = 'IS',\n  India = 'IN',\n  Indonesia = 'ID',\n  Iran = 'IR',\n  Iraq = 'IQ',\n  Ireland = 'IE',\n  IsleOfMan = 'IM',\n  Israel = 'IL',\n  Italy = 'IT',\n  Jamaica = 'JM',\n  Japan = 'JP',\n  Jersey = 'JE',\n  Jordan = 'JO',\n  Kazakhstan = 'KZ',\n  Kenya = 'KE',\n  Kiribati = 'KI',\n  Kuwait = 'KW',\n  Kyrgyzstan = 'KG',\n  Laos = 'LA',\n  Latvia = 'LV',\n  Lebanon = 'LB',\n  Lesotho = 'LS',\n  Liberia = 'LR',\n  Libya = 'LY',\n  Liechtenstein = 'LI',\n  Lithuania = 'LT',\n  Luxembourg = 'LU',\n  Macau = 'MO',\n  Madagascar = 'MG',\n  Malawi = 'MW',\n  Malaysia = 'MY',\n  Maldives = 'MV',\n  Mali = 'ML',\n  Malta = 'MT',\n  MarshallIslands = 'MH',\n  Martinique = 'MQ',\n  Mauritania = 'MR',\n  Mauritius = 'MU',\n  Mayotte = 'YT',\n  Mexico = 'MX',\n  MicronesiaFederatedStatesOf = 'FM',\n  Moldova = 'MD',\n  Monaco = 'MC',\n  Mongolia = 'MN',\n  Montenegro = 'ME',\n  Montserrat = 'MS',\n  Morocco = 'MA',\n  Mozambique = 'MZ',\n  Myanmar = 'MM',\n  Namibia = 'NA',\n  Nauru = 'NR',\n  Nepal = 'NP',\n  Netherlands = 'NL',\n  NetherlandsAntilles = 'AN',\n  NewCaledonia = 'NC',\n  NewZealand = 'NZ',\n  NorthKorea = 'KP',\n  Nicaragua = 'NI',\n  Niger = 'NE',\n  Nigeria = 'NG',\n  Niue = 'NU',\n  NorfolkIsland = 'NF',\n  NorthMacedonia = 'MK',\n  NorthernMarianaIslands = 'MP',\n  Norway = 'NO',\n  Oman = 'OM',\n  Pakistan = 'PK',\n  Palau = 'PW',\n  PalestinianTerritoryOccupied = 'PS',\n  Panama = 'PA',\n  PapuaNewGuinea = 'PG',\n  Paraguay = 'PY',\n  Peru = 'PE',\n  Philippines = 'PH',\n  Pitcairn = 'PN',\n  Poland = 'PL',\n  Portugal = 'PT',\n  PuertoRico = 'PR',\n  Qatar = 'QA',\n  Reunion = 'RE',\n  Romania = 'RO',\n  RussianFederation = 'RU',\n  Rwanda = 'RW',\n  SaintBarthelemy = 'BL',\n  SaintHelena = 'SH',\n  SaintKittsAndNevis = 'KN',\n  SaintLucia = 'LC',\n  SaintMartin = 'MF',\n  SaintPierreAndMiquelon = 'PM',\n  SaintVincentAndTheGrenadines = 'VC',\n  Samoa = 'WS',\n  SanMarino = 'SM',\n  SaoTomeAndPrincipe = 'ST',\n  SaudiArabia = 'SA',\n  Senegal = 'SN',\n  Serbia = 'RS',\n  SerbiaAndMontenegro = 'CS',\n  Seychelles = 'SC',\n  SierraLeone = 'SL',\n  Singapore = 'SG',\n  Slovakia = 'SK',\n  Slovenia = 'SI',\n  SolomonIslands = 'SB',\n  Somalia = 'SO',\n  SouthAfrica = 'ZA',\n  SouthGeorgiaAndTheSouthSandwichIslands = 'GS',\n  SouthKorea = 'KR',\n  Spain = 'ES',\n  SriLanka = 'LK',\n  Sudan = 'SD',\n  Suriname = 'SR',\n  SvalbardAndJanMayen = 'SJ',\n  Swaziland = 'SZ',\n  Sweden = 'SE',\n  Switzerland = 'CH',\n  Syria = 'SY',\n  Taiwan = 'TW',\n  Tajikistan = 'TJ',\n  Tanzania = 'TZ',\n  Thailand = 'TH',\n  TimorLeste = 'TL',\n  Togo = 'TG',\n  Tokelau = 'TK',\n  Tonga = 'TO',\n  TrinidadAndTobago = 'TT',\n  Tunisia = 'TN',\n  Turkey = 'TR',\n  Turkmenistan = 'TM',\n  TurksAndCaicosIslands = 'TC',\n  Tuvalu = 'TV',\n  Uganda = 'UG',\n  Ukraine = 'UA',\n  UnitedArabEmirates = 'AE',\n  UnitedKingdom = 'GB',\n  UnitedStates = 'US',\n  UnitedStatesMinorOutlyingIslands = 'UM',\n  Uruguay = 'UY',\n  Uzbekistan = 'UZ',\n  Vanuatu = 'VU',\n  Venezuela = 'VE',\n  Vietnam = 'VN',\n  VirginIslandsBritish = 'VG',\n  VirginIslandsUS = 'VI',\n  WallisAndFutuna = 'WF',\n  WesternSahara = 'EH',\n  Yemen = 'YE',\n  Zambia = 'ZM',\n  Zimbabwe = 'ZW',\n}\n\nexport type CountrySubdivision = {\n  // code: CountrySubdivisionCode;\n  name: string;\n  capital: string;\n  population: number;\n};\n\nexport type Country = {\n  i18n: {\n    calling_codes: number[];\n    currencies: CurrencyCode[];\n    languages: LocaleCode[];\n    tz: {\n      offsets: TimezoneOffset[];\n      regions: TimezoneRegions[];\n      timezones: Timezones[];\n    };\n  };\n  id: CountryCode;\n  info: {\n    flag: {\n      emoji: string;\n      emoji_unicode: string;\n      svg: string;\n    };\n    tld: string[];\n  };\n  iso: {\n    alpha2: CountryCode;\n    alpha3: string;\n    numeric: string;\n  };\n  name: {\n    alt_spellings: string[];\n    demonym: string;\n    native: {\n      endonym: string;\n    };\n    official: string;\n    short: string;\n    translations: {\n      [lang: string]: string;\n    };\n  };\n  statistics?: {\n    demographics: {\n      age: {\n        distribution: { age: string; percentage: number }[];\n        median_age: number;\n      };\n      population: {\n        largest_city: string;\n        total: number;\n      };\n    };\n    geography: {\n      area: number;\n      region: string;\n      sub_region: string;\n    };\n    government: {\n      capital: string;\n      type: string;\n    };\n  };\n};\n", "import { CountryCode } from '../locale/country.js';\n\n/**\n * ISO-4217 Currency Codes\n */\nexport enum CurrencyCode {\n  AfghanistanAfghani = 'AFN',\n  AlbaniaLek = 'ALL',\n  ArmeniaDram = 'AMD',\n  AlgeriaDinar = 'DZD',\n  AmericanSamoaTala = 'WST',\n  AngolaKwanza = 'AOA',\n  ArgentinaPeso = 'ARS',\n  AustraliaDollar = 'AUD',\n  ArubaFlorin = 'AWG',\n  AzerbaijanNewManat = 'AZN',\n  BosniaAndHerzegovinaConvertibleMark = 'BAM',\n  BahrainDinar = 'BHD',\n  BarbadosDollar = 'BBD',\n  BangladeshTaka = 'BDT',\n  BelgiumFranc = 'BGN',\n  BermudaDollar = 'BMD',\n  BruneiDollar = 'BND',\n  BoliviaBoliviano = 'BOB',\n  BrazilReal = 'BRL',\n  BahamasDollar = 'BSD',\n  BhutanNgultrum = 'BTN',\n  BotswanaPula = 'BWP',\n  BelarusRuble = 'BYN',\n  BelizeDollar = 'BZD',\n  BulgariaLev = 'BGN',\n  BurundiFranc = 'BIF',\n  BritishPound = 'GBP',\n  CanadaDollar = 'CAD',\n  CambodiaRiel = 'KHR',\n  ComorosFranc = 'KMF',\n  CaymanIslandsDollar = 'KYD',\n  ChilePeso = 'CLP',\n  ChinaYuan = 'CNY',\n  ColombiaPeso = 'COP',\n  CostaRicaColon = 'CRC',\n  CroatiaKuna = 'HRK',\n  CubaConvertiblePeso = 'CUC',\n  CubaPeso = 'CUP',\n  CapeVerdeEscudo = 'CVE',\n  CyprusPound = 'CYP',\n  CzechRepublicKoruna = 'CZK',\n  DjiboutiFranc = 'DJF',\n  DenmarkKrone = 'DKK',\n  DominicaDollar = 'XCD',\n  DominicanRepublicPeso = 'DOP',\n  EastCaribbeanDollar = 'XCD',\n  EgyptPound = 'EGP',\n  ElSalvadorColon = 'SVC',\n  EquatorialGuineaEkwele = 'GQE',\n  EritreaNakfa = 'ERN',\n  EstoniaKroon = 'EEK',\n  EthiopiaBirr = 'ETB',\n  Euro = 'EUR',\n  FijiDollar = 'FJD',\n  FalklandIslandsPound = 'FKP',\n  GambiaDalasi = 'GMD',\n  GabonFranc = 'GMD',\n  GeorgiaLari = 'GEL',\n  GhanaCedi = 'GHS',\n  GibraltarPound = 'GIP',\n  GuatemalaQuetzal = 'GTQ',\n  GuernseyPound = 'GGP',\n  GuineaBissauPeso = 'GWP',\n  GuyanaDollar = 'GYD',\n  HongKongDollar = 'HKD',\n  HondurasLempira = 'HNL',\n  HaitiGourde = 'HTG',\n  HungaryForint = 'HUF',\n  IndonesiaRupiah = 'IDR',\n  IsleOfManPound = 'IMP',\n  IsraelNewShekel = 'ILS',\n  IndiaRupee = 'INR',\n  IraqDinar = 'IQD',\n  IranRial = 'IRR',\n  IcelandKrona = 'ISK',\n  JamaicaDollar = 'JMD',\n  JapanYen = 'JPY',\n  JerseyPound = 'JEP',\n  JordanDinar = 'JOD',\n  KazakhstanTenge = 'KZT',\n  KenyaShilling = 'KES',\n  KyrgyzstanSom = 'KGS',\n  NorthKoreaWon = 'KPW',\n  SouthKoreaWon = 'KRW',\n  KuwaitDinar = 'KWD',\n  LaosKip = 'LAK',\n  LebanonPound = 'LBP',\n  LiberiaDollar = 'LRD',\n  LesothoLoti = 'LSL',\n  LibyanDinar = 'LYD',\n  LithuaniaLitas = 'LTL',\n  LatviaLats = 'LVL',\n  LibyaDinar = 'LYD',\n  MacauPataca = 'MOP',\n  MaldivesRufiyaa = 'MVR',\n  MalawiKwacha = 'MWK',\n  MaltaLira = 'MTL',\n  MauritiusRupee = 'MUR',\n  MongoliaTughrik = 'MNT',\n  MoroccoDirham = 'MAD',\n  MoldovaLeu = 'MDL',\n  MozambiqueMetical = 'MZN',\n  MadagascarAriary = 'MGA',\n  MacedoniaDenar = 'MKD',\n  MexicoPeso = 'MXN',\n  MalaysiaRinggit = 'MYR',\n  MyanmarKyat = 'MMK',\n  MicronesiaFederatedStatesDollar = 'USD',\n  NicaraguaCordoba = 'NIO',\n  NamibiaDollar = 'NAD',\n  NetherlandsAntillesGuilder = 'ANG',\n  NewCaledoniaFranc = 'XPF',\n  NigeriaNaira = 'NGN',\n  NicaraguaCordobaOro = 'NIO',\n  NigerCFAFranc = 'XOF',\n  NorwayKrone = 'NOK',\n  NepalRupee = 'NPR',\n  NewZealandDollar = 'NZD',\n  OmanRial = 'OMR',\n  PanamaBalboa = 'PAB',\n  PeruNuevoSol = 'PEN',\n  PapuaNewGuineaKina = 'PGK',\n  PhilippinesPeso = 'PHP',\n  PakistanRupee = 'PKR',\n  PeruNuevo = 'PEN',\n  PolandZloty = 'PLN',\n  ParaguayGuarani = 'PYG',\n  QatarRial = 'QAR',\n  RomaniaNewLeu = 'RON',\n  SerbiaDinar = 'RSD',\n  SriLankaRupee = 'LKR',\n  RussiaRuble = 'RUB',\n  RwandaFranc = 'RWF',\n  SaudiArabiaRiyal = 'SAR',\n  SlovakiaKoruna = 'SKK',\n  SloveniaTolar = 'SIT',\n  SolomonIslandsDollar = 'SBD',\n  SeychellesRupee = 'SCR',\n  SudanPound = 'SDG',\n  SwedenKrona = 'SEK',\n  SingaporeDollar = 'SGD',\n  SaintHelenaPound = 'SHP',\n  SierraLeoneLeone = 'SLL',\n  SomaliaShilling = 'SOS',\n  SurinameDollar = 'SRD',\n  SintMaartenPound = 'SXD',\n  SyriaPound = 'SYP',\n  SwazilandLilangeni = 'SZL',\n  SwitzerlandFranc = 'CHF',\n  ThailandBaht = 'THB',\n  TajikistanSomoni = 'TJS',\n  TurkmenistanManat = 'TMT',\n  TunisiaDinar = 'TND',\n  TongaPaanga = 'TOP',\n  TurkeyLira = 'TRY',\n  TrinidadAndTobagoDollar = 'TTD',\n  TaiwanNewDollar = 'TWD',\n  TanzaniaShilling = 'TZS',\n  UnitedArabEmiratesDirham = 'AED',\n  UkraineHryvnia = 'UAH',\n  UgandaShilling = 'UGX',\n  UnitedKingdomPound = 'GBP',\n  UnitedStatesDollar = 'USD',\n  UruguayPeso = 'UYU',\n  UzbekistanSom = 'UZS',\n  VenezuelaBolivar = 'VEF',\n  VietnamDong = 'VND',\n  VanuatuVatu = 'VUV',\n  SamoaTala = 'WST',\n  YemenRial = 'YER',\n  SouthAfricaRand = 'ZAR',\n  ZambiaKwacha = 'ZMW',\n  ZimbabweDollar = 'ZWL',\n}\n\nexport type Currency = {\n  code: CurrencyCode;\n  countries: CountryCode[];\n  symbol: string;\n  decimal_digits: number;\n  rounding: number;\n  name: string;\n  symbol_native: string;\n  decimal_separator: string;\n  thousands_separator: string;\n  positive_sign: string;\n  negative_sign: string;\n  symbol_placement: string;\n};\n\nexport const Currencies: Record<string, Currency> = {\n  AfghanistanAfghani: {\n    code: CurrencyCode.AfghanistanAfghani,\n    countries: [CountryCode.Afghanistan],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Afghan Afghani',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u060B',\n    symbol_native: '\u060B',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  AlbaniaLek: {\n    code: CurrencyCode.AlbaniaLek,\n    countries: [CountryCode.Albania],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Albanian Lek',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Lek',\n    symbol_native: 'Lek',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  AlgeriaDinar: {\n    code: CurrencyCode.AlgeriaDinar,\n    countries: [CountryCode.Algeria],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Algerian Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u062F.\u062C',\n    symbol_native: '\u062F.\u062C',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ArgentinaPeso: {\n    code: CurrencyCode.ArgentinaPeso,\n    countries: [CountryCode.Argentina],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Argentine Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ArmeniaDram: {\n    code: CurrencyCode.ArmeniaDram,\n    countries: [CountryCode.Armenia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Armenian Dram',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0564\u0580.',\n    symbol_native: '\u0564\u0580.',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ArubaFlorin: {\n    code: CurrencyCode.ArubaFlorin,\n    countries: [CountryCode.Aruba],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Aruban Florin',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0192',\n    symbol_native: '\u0192',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  AustraliaDollar: {\n    code: CurrencyCode.AustraliaDollar,\n    countries: [CountryCode.Australia],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Australian Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  AzerbaijanManat: {\n    code: CurrencyCode.AzerbaijanNewManat,\n    countries: [CountryCode.Azerbaijan],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Azerbaijani Manat',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u043C\u0430\u043D',\n    symbol_native: '\u043C\u0430\u043D',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BahrainDinar: {\n    code: CurrencyCode.BahrainDinar,\n    countries: [CountryCode.Bahrain],\n    decimal_digits: 3,\n    decimal_separator: '.',\n    name: 'Bahraini Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '.\u062F.\u0628',\n    symbol_native: '.\u062F.\u0628',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BangladeshTaka: {\n    code: CurrencyCode.BangladeshTaka,\n    countries: [CountryCode.Bangladesh],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Bangladeshi Taka',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u09F3',\n    symbol_native: '\u09F3',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BarbadosDollar: {\n    code: CurrencyCode.BarbadosDollar,\n    countries: [CountryCode.Barbados],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Barbadian Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BelarusRuble: {\n    code: CurrencyCode.BelarusRuble,\n    countries: [CountryCode.Belarus],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Belarusian Ruble',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Br',\n    symbol_native: 'Br',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  BelizeDollar: {\n    code: CurrencyCode.BelizeDollar,\n    countries: [CountryCode.Belize],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Belize Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'BZ$',\n    symbol_native: 'BZ$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BermudaDollar: {\n    code: CurrencyCode.BermudaDollar,\n    countries: [CountryCode.Bermuda],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Bermudian Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BoliviaBoliviano: {\n    code: CurrencyCode.BoliviaBoliviano,\n    countries: [CountryCode.Bolivia],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Bolivian Boliviano',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$b',\n    symbol_native: '$b',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BosniaAndHerzegovinaConvertibleMarka: {\n    code: CurrencyCode.BosniaAndHerzegovinaConvertibleMark,\n    countries: [CountryCode.BosniaAndHerzegovina],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Bosnia and Herzegovina Convertible Marka',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'KM',\n    symbol_native: 'KM',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  BotswanaPula: {\n    code: CurrencyCode.BotswanaPula,\n    countries: [CountryCode.Botswana],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Botswana Pula',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'P',\n    symbol_native: 'P',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BrazilReal: {\n    code: CurrencyCode.BrazilReal,\n    countries: [CountryCode.Brazil],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Brazilian Real',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'R$',\n    symbol_native: 'R$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  BruneiDollar: {\n    code: CurrencyCode.BruneiDollar,\n    countries: [CountryCode.Brunei],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Brunei Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BulgariaLev: {\n    code: CurrencyCode.BulgariaLev,\n    countries: [CountryCode.Bulgaria],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Bulgarian Lev',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u043B\u0432',\n    symbol_native: '\u043B\u0432',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  BurundiFranc: {\n    code: CurrencyCode.BurundiFranc,\n    countries: [CountryCode.Burundi],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Burundian Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'FBu',\n    symbol_native: 'FBu',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CambodiaRiel: {\n    code: CurrencyCode.CambodiaRiel,\n    countries: [CountryCode.Cambodia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Cambodian Riel',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u17DB',\n    symbol_native: '\u17DB',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CanadaDollar: {\n    code: CurrencyCode.CanadaDollar,\n    countries: [CountryCode.Canada],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Canadian Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CapeVerdeEscudo: {\n    code: CurrencyCode.CapeVerdeEscudo,\n    countries: [CountryCode.CapeVerde],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Cape Verde Escudo',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Esc',\n    symbol_native: 'Esc',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CaymanIslandsDollar: {\n    code: CurrencyCode.CaymanIslandsDollar,\n    countries: [CountryCode.CaymanIslands],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Cayman Islands Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ChilePeso: {\n    code: CurrencyCode.ChilePeso,\n    countries: [CountryCode.Chile],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Chilean Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ChinaYuanRenminbi: {\n    code: CurrencyCode.ChinaYuan,\n    countries: [CountryCode.China],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Chinese Yuan',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A5',\n    symbol_native: '\u00A5',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ColombiaPeso: {\n    code: CurrencyCode.ColombiaPeso,\n    countries: [CountryCode.Colombia],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Colombian Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ComorosFranc: {\n    code: CurrencyCode.ComorosFranc,\n    countries: [CountryCode.Comoros],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Comoros Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'CF',\n    symbol_native: 'CF',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CostaRicaColon: {\n    code: CurrencyCode.CostaRicaColon,\n    countries: [CountryCode.CostaRica],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Costa Rican Colon',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A1',\n    symbol_native: '\u20A1',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CroatiaKuna: {\n    code: CurrencyCode.CroatiaKuna,\n    countries: [CountryCode.Croatia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Croatian Kuna',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kn',\n    symbol_native: 'kn',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CubaConvertiblePeso: {\n    code: CurrencyCode.CubaConvertiblePeso,\n    countries: [CountryCode.Cuba],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Cuba Convertible Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CubaPeso: {\n    code: CurrencyCode.CubaPeso,\n    countries: [CountryCode.Cuba],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Cuba Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CyprusPound: {\n    code: CurrencyCode.CyprusPound,\n    countries: [CountryCode.Cyprus],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Cyprus Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CzechRepublicKoruna: {\n    code: CurrencyCode.CzechRepublicKoruna,\n    countries: [CountryCode.CzechRepublic],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Czech Republic Koruna',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'K\u010D',\n    symbol_native: 'K\u010D',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  DenmarkKrone: {\n    code: CurrencyCode.DenmarkKrone,\n    countries: [CountryCode.Denmark],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Denmark Krone',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  DjiboutiFranc: {\n    code: CurrencyCode.DjiboutiFranc,\n    countries: [CountryCode.Djibouti],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Djibouti Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Fdj',\n    symbol_native: 'Fdj',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  DominicanRepublicPeso: {\n    code: CurrencyCode.DominicanRepublicPeso,\n    countries: [CountryCode.DominicanRepublic],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Dominican Republic Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'RD$',\n    symbol_native: 'RD$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  EastCaribbeanDollar: {\n    code: CurrencyCode.EastCaribbeanDollar,\n    countries: [\n      CountryCode.AntiguaAndBarbuda,\n      CountryCode.Dominica,\n      CountryCode.Grenada,\n      CountryCode.SaintKittsAndNevis,\n      CountryCode.SaintLucia,\n      CountryCode.SaintVincentAndTheGrenadines,\n    ],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'East Caribbean Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  EgyptPound: {\n    code: CurrencyCode.EgyptPound,\n    countries: [CountryCode.Egypt],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Egypt Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ElSalvadorColon: {\n    code: CurrencyCode.ElSalvadorColon,\n    countries: [CountryCode.ElSalvador],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'El Salvador Colon',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A1',\n    symbol_native: '\u20A1',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  EquatorialGuineaEkwele: {\n    code: CurrencyCode.EquatorialGuineaEkwele,\n    countries: [CountryCode.EquatorialGuinea],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Equatorial Guinea Ekwele',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'GQE',\n    symbol_native: 'GQE',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  EritreaNakfa: {\n    code: CurrencyCode.EritreaNakfa,\n    countries: [CountryCode.Eritrea],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Eritrea Nakfa',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Nfk',\n    symbol_native: 'Nfk',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  EstoniaKroon: {\n    code: CurrencyCode.EstoniaKroon,\n    countries: [CountryCode.Estonia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Estonia Kroon',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  EthiopiaBirr: {\n    code: CurrencyCode.EthiopiaBirr,\n    countries: [CountryCode.Ethiopia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Ethiopia Birr',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Br',\n    symbol_native: 'Br',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  Euro: {\n    code: CurrencyCode.Euro,\n    countries: [\n      CountryCode.Andorra,\n      CountryCode.Austria,\n      CountryCode.Belgium,\n      CountryCode.Cyprus,\n      CountryCode.Estonia,\n      CountryCode.Finland,\n      CountryCode.France,\n      CountryCode.Germany,\n      CountryCode.Greece,\n      CountryCode.Ireland,\n      CountryCode.Italy,\n      CountryCode.Latvia,\n      CountryCode.Lithuania,\n      CountryCode.Luxembourg,\n      CountryCode.Malta,\n      CountryCode.Monaco,\n      CountryCode.Netherlands,\n      CountryCode.Portugal,\n      CountryCode.Spain,\n      CountryCode.Sweden,\n      CountryCode.UnitedKingdom,\n    ],\n\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Euro',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AC',\n    symbol_native: '\u20AC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  FalklandIslandsPound: {\n    code: CurrencyCode.FalklandIslandsPound,\n    countries: [CountryCode.FalklandIslands],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Equatorial Guinea Ekwele',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  FijiDollar: {\n    code: CurrencyCode.FijiDollar,\n    countries: [CountryCode.Fiji],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Fiji Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GambiaDalasi: {\n    code: CurrencyCode.GambiaDalasi,\n    countries: [CountryCode.Gambia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Gambia Dalasi',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'D',\n    symbol_native: 'D',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GeorgiaLari: {\n    code: CurrencyCode.GeorgiaLari,\n    countries: [CountryCode.Georgia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Georgia Lari',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20BE',\n    symbol_native: '\u20BE',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GhanaCedi: {\n    code: CurrencyCode.GhanaCedi,\n    countries: [CountryCode.Ghana],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Ghana Cedi',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B5',\n    symbol_native: '\u20B5',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GibraltarPound: {\n    code: CurrencyCode.GibraltarPound,\n    countries: [CountryCode.Gibraltar],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Gibraltar Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GuatemalaQuetzal: {\n    code: CurrencyCode.GuatemalaQuetzal,\n    countries: [CountryCode.Guatemala],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Guatemala Quetzal',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Q',\n    symbol_native: 'Q',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GuernseyPound: {\n    code: CurrencyCode.GuernseyPound,\n    countries: [CountryCode.Guernsey],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Guernsey Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GuineaBissauPeso: {\n    code: CurrencyCode.GuineaBissauPeso,\n    countries: [CountryCode.GuineaBissau],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Guinea-Bissau Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B5',\n    symbol_native: '\u20B5',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GuyanaDollar: {\n    code: CurrencyCode.GuyanaDollar,\n    countries: [CountryCode.Guyana],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Guyana Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  HaitiGourde: {\n    code: CurrencyCode.HaitiGourde,\n    countries: [CountryCode.Haiti],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Haiti Gourde',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'G',\n    symbol_native: 'G',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  HondurasLempira: {\n    code: CurrencyCode.HondurasLempira,\n    countries: [CountryCode.Honduras],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Honduras Lempira',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'L',\n    symbol_native: 'L',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  HongKongDollar: {\n    code: CurrencyCode.HongKongDollar,\n    countries: [CountryCode.HongKong],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Hong Kong Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  HungaryForint: {\n    code: CurrencyCode.HungaryForint,\n    countries: [CountryCode.Hungary],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Hungary Forint',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Ft',\n    symbol_native: 'Ft',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IcelandKrona: {\n    code: CurrencyCode.IcelandKrona,\n    countries: [CountryCode.Iceland],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Iceland Krona',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IndianRupee: {\n    code: CurrencyCode.IndiaRupee,\n    countries: [CountryCode.India, CountryCode.Bhutan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Indian Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B9',\n    symbol_native: '\u20B9',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IndonesiaRupiah: {\n    code: CurrencyCode.IndonesiaRupiah,\n    countries: [CountryCode.Indonesia],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Indonesia Rupiah',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Rp',\n    symbol_native: 'Rp',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IranRial: {\n    code: CurrencyCode.IranRial,\n    countries: [CountryCode.Iran],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Iran Rial',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IsleOfManPound: {\n    code: CurrencyCode.IsleOfManPound,\n    countries: [CountryCode.IsleOfMan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Isle of Man Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IsraeliShekel: {\n    code: CurrencyCode.IsraelNewShekel,\n    countries: [CountryCode.Israel],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Israeli Shekel',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AA',\n    symbol_native: '\u20AA',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  JamaicaDollar: {\n    code: CurrencyCode.JamaicaDollar,\n    countries: [CountryCode.Jamaica],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Jamaica Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'J$',\n    symbol_native: 'J$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  JapanYen: {\n    code: CurrencyCode.JapanYen,\n    countries: [CountryCode.Japan],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Japan Yen',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A5',\n    symbol_native: '\uFFE5',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  JerseyPound: {\n    code: CurrencyCode.JerseyPound,\n    countries: [CountryCode.Jersey],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Jersey Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  JordanDinar: {\n    code: CurrencyCode.JordanDinar,\n    countries: [CountryCode.Jordan],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Jordan Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'JD',\n    symbol_native: 'JD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  KazakhstanTenge: {\n    code: CurrencyCode.KazakhstanTenge,\n    countries: [CountryCode.Kazakhstan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Kazakhstan Tenge',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B8',\n    symbol_native: '\u20B8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  KenyaShilling: {\n    code: CurrencyCode.KenyaShilling,\n    countries: [CountryCode.Kenya],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Kenya Shilling',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'KSh',\n    symbol_native: 'KSh',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  KuwaitDinar: {\n    code: CurrencyCode.KuwaitDinar,\n    countries: [CountryCode.Kuwait],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Kuwait Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'KD',\n    symbol_native: 'KD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  KyrgyzstanSom: {\n    code: CurrencyCode.KyrgyzstanSom,\n    countries: [CountryCode.Kyrgyzstan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Kyrgyzstan Som',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'KGS',\n    symbol_native: 'KGS',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LaosKip: {\n    code: CurrencyCode.LaosKip,\n    countries: [CountryCode.Laos],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Laos Kip',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AD',\n    symbol_native: '\u20AD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LatviaLats: {\n    code: CurrencyCode.LatviaLats,\n    countries: [CountryCode.Latvia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Latvia Lat',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Ls',\n    symbol_native: 'Ls',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LebanonPound: {\n    code: CurrencyCode.LebanonPound,\n    countries: [CountryCode.Lebanon],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Lebanon Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LesothoLoti: {\n    code: CurrencyCode.LesothoLoti,\n    countries: [CountryCode.Lesotho],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Lesotho Loti',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'M',\n    symbol_native: 'M',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LiberiaDollar: {\n    code: CurrencyCode.LiberiaDollar,\n    countries: [CountryCode.Liberia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Liberia Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LibyanDinar: {\n    code: CurrencyCode.LibyanDinar,\n    countries: [CountryCode.Libya],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Libyan Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'LD',\n    symbol_native: 'LD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LithuaniaLitas: {\n    code: CurrencyCode.LithuaniaLitas,\n    countries: [CountryCode.Lithuania],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Lithuania Litas',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Lt',\n    symbol_native: 'Lt',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MacauPataca: {\n    code: CurrencyCode.MacauPataca,\n    countries: [CountryCode.Macau],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Macau Pataca',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'MOP$',\n    symbol_native: 'MOP$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MacedoniaDenar: {\n    code: CurrencyCode.MacedoniaDenar,\n    countries: [CountryCode.NorthMacedonia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Macedonia Denar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0434\u0435\u043D',\n    symbol_native: '\u0434\u0435\u043D',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MadagascarAriary: {\n    code: CurrencyCode.MadagascarAriary,\n    countries: [CountryCode.Madagascar],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Madagascar Ariary',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Ar',\n    symbol_native: 'Ar',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MalawiKwacha: {\n    code: CurrencyCode.MalawiKwacha,\n    countries: [CountryCode.Malawi],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Malawi Kwacha',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'MK',\n    symbol_native: 'MK',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MalaysiaRinggit: {\n    code: CurrencyCode.MalaysiaRinggit,\n    countries: [CountryCode.Malaysia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Malaysia Ringgit',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'RM',\n    symbol_native: 'RM',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MaldivesRufiyaa: {\n    code: CurrencyCode.MaldivesRufiyaa,\n    countries: [CountryCode.Maldives],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Maldives Rufiyaa',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Rf',\n    symbol_native: 'Rf',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MaltaLira: {\n    code: CurrencyCode.MaltaLira,\n    countries: [CountryCode.Malta],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Malta Lira',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Lm',\n    symbol_native: 'Lm',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MauritiusRupee: {\n    code: CurrencyCode.MauritiusRupee,\n    countries: [CountryCode.Mauritius],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Mauritius Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MexicoPeso: {\n    code: CurrencyCode.MexicoPeso,\n    countries: [CountryCode.Mexico],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Mexico Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MoldovaLeu: {\n    code: CurrencyCode.MoldovaLeu,\n    countries: [CountryCode.Moldova],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Moldova Leu',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'L',\n    symbol_native: 'L',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MongoliaTughrik: {\n    code: CurrencyCode.MongoliaTughrik,\n    countries: [CountryCode.Mongolia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Mongolia Tughrik',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AE',\n    symbol_native: '\u20AE',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MoroccoDirham: {\n    code: CurrencyCode.MoroccoDirham,\n    countries: [CountryCode.Morocco],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Morocco Dirham',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'DH',\n    symbol_native: 'DH',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MozambiqueMetical: {\n    code: CurrencyCode.MozambiqueMetical,\n    countries: [CountryCode.Mozambique],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Mozambique Metical',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'MT',\n    symbol_native: 'MT',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MyanmarKyat: {\n    code: CurrencyCode.MyanmarKyat,\n    countries: [CountryCode.Myanmar],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Myanmar Kyat',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'K',\n    symbol_native: 'K',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NamibiaDollar: {\n    code: CurrencyCode.NamibiaDollar,\n    countries: [CountryCode.Namibia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Namibia Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NepalRupee: {\n    code: CurrencyCode.NepalRupee,\n    countries: [CountryCode.Nepal],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Nepal Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NetherlandsAntillesGuilder: {\n    code: CurrencyCode.NetherlandsAntillesGuilder,\n    countries: [CountryCode.NetherlandsAntilles],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Netherlands Antilles Guilder',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0192',\n    symbol_native: '\u0192',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NewCaledoniaFranc: {\n    code: CurrencyCode.NewCaledoniaFranc,\n    countries: [CountryCode.NewCaledonia],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'New Caledonia Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A3',\n    symbol_native: '\u20A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NewZealandDollar: {\n    code: CurrencyCode.NewZealandDollar,\n    countries: [CountryCode.NewZealand],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'New Zealand Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NicaraguaCordoba: {\n    code: CurrencyCode.NicaraguaCordoba,\n    countries: [CountryCode.Nicaragua],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Nicaragua Cordoba',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'C$',\n    symbol_native: 'C$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NigerCFAFranc: {\n    code: CurrencyCode.NigerCFAFranc,\n    countries: [CountryCode.Niger],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Niger CFA Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'CFA',\n    symbol_native: 'CFA',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NigeriaNaira: {\n    code: CurrencyCode.NigeriaNaira,\n    countries: [CountryCode.Nigeria],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Nigeria Naira',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A6',\n    symbol_native: '\u20A6',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NorthKoreaWon: {\n    code: CurrencyCode.NorthKoreaWon,\n    countries: [CountryCode.NorthKorea],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'North Korea Won',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A9',\n    symbol_native: '\u20A9',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NorwayKrone: {\n    code: CurrencyCode.NorwayKrone,\n    countries: [CountryCode.Norway],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Norway Krone',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  OmanRial: {\n    code: CurrencyCode.OmanRial,\n    countries: [CountryCode.Oman],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Oman Rial',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PakistanRupee: {\n    code: CurrencyCode.PakistanRupee,\n    countries: [CountryCode.Pakistan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Pakistan Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PanamaBalboa: {\n    code: CurrencyCode.PanamaBalboa,\n    countries: [CountryCode.Panama],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Panama Balboa',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'B/.',\n    symbol_native: 'B/.',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ParaguayGuarani: {\n    code: CurrencyCode.ParaguayGuarani,\n    countries: [CountryCode.Paraguay],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Paraguay Guarani',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Gs',\n    symbol_native: 'Gs',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PeruvianNuevo: {\n    code: CurrencyCode.PeruNuevo,\n    countries: [CountryCode.Peru],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Peruvian Nuevo',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'S/.',\n    symbol_native: 'S/.',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PhilippinesPeso: {\n    code: CurrencyCode.PhilippinesPeso,\n    countries: [CountryCode.Philippines],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Philippines Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B1',\n    symbol_native: '\u20B1',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PolandZloty: {\n    code: CurrencyCode.PolandZloty,\n    countries: [CountryCode.Poland],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Poland Zloty',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'z\u0142',\n    symbol_native: 'z\u0142',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  QatarRial: {\n    code: CurrencyCode.QatarRial,\n    countries: [CountryCode.Qatar],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Qatar Rial',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  RomaniaNewLeu: {\n    code: CurrencyCode.RomaniaNewLeu,\n    countries: [CountryCode.Romania],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Romania New Leu',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'lei',\n    symbol_native: 'lei',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  RussiaRuble: {\n    code: CurrencyCode.RussiaRuble,\n    countries: [CountryCode.RussianFederation],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Russia Ruble',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20BD',\n    symbol_native: '\u20BD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  RwandaFranc: {\n    code: CurrencyCode.RwandaFranc,\n    countries: [CountryCode.Rwanda],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Rwanda Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'RF',\n    symbol_native: 'RF',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SaudiArabiaRiyal: {\n    code: CurrencyCode.SaudiArabiaRiyal,\n    countries: [CountryCode.SaudiArabia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Saudi Arabia Riyal',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SerbiaDinar: {\n    code: CurrencyCode.SerbiaDinar,\n    countries: [CountryCode.Serbia],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Serbia Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0414\u0438\u043D.',\n    symbol_native: '\u0414\u0438\u043D.',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SeychellesRupee: {\n    code: CurrencyCode.SeychellesRupee,\n    countries: [CountryCode.Seychelles],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Seychelles Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SingaporeDollar: {\n    code: CurrencyCode.SingaporeDollar,\n    countries: [CountryCode.Singapore],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Singapore Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SlovakiaKoruna: {\n    code: CurrencyCode.SlovakiaKoruna,\n    countries: [CountryCode.Slovakia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Slovakia Koruna',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Sk',\n    symbol_native: 'Sk',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SloveniaTolar: {\n    code: CurrencyCode.SloveniaTolar,\n    countries: [CountryCode.Slovenia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Slovenia Tolar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'SIT',\n    symbol_native: 'SIT',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SolomonIslandsDollar: {\n    code: CurrencyCode.SolomonIslandsDollar,\n    countries: [CountryCode.SolomonIslands],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Solomon Islands Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SomaliaShilling: {\n    code: CurrencyCode.SomaliaShilling,\n    countries: [CountryCode.Somalia],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Somalia Shilling',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'S',\n    symbol_native: 'S',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SouthAfricaRand: {\n    code: CurrencyCode.SouthAfricaRand,\n    countries: [CountryCode.SouthAfrica],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'South Africa Rand',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'R',\n    symbol_native: 'R',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SouthKoreaWon: {\n    code: CurrencyCode.SouthKoreaWon,\n    countries: [CountryCode.SouthKorea],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'South Korea Won',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A9',\n    symbol_native: '\u20A9',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SriLankaRupee: {\n    code: CurrencyCode.SriLankaRupee,\n    countries: [CountryCode.SriLanka],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Sri Lanka Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SudanPound: {\n    code: CurrencyCode.SudanPound,\n    countries: [CountryCode.Sudan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Sudan Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SurinameDollar: {\n    code: CurrencyCode.SurinameDollar,\n    countries: [CountryCode.Suriname],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Suriname Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SwazilandLilangeni: {\n    code: CurrencyCode.SwazilandLilangeni,\n    countries: [CountryCode.Swaziland],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Swaziland Lilangeni',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'E',\n    symbol_native: 'E',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SwedenKrona: {\n    code: CurrencyCode.SwedenKrona,\n    countries: [CountryCode.Sweden],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Sweden Krona',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SwitzerlandFranc: {\n    code: CurrencyCode.SwitzerlandFranc,\n    countries: [CountryCode.Switzerland],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Switzerland Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'CHF',\n    symbol_native: 'CHF',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SyriaPound: {\n    code: CurrencyCode.SyriaPound,\n    countries: [CountryCode.Syria],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Syria Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TaiwanNewDollar: {\n    code: CurrencyCode.TaiwanNewDollar,\n    countries: [CountryCode.Taiwan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Taiwan New Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'NT$',\n    symbol_native: 'NT$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TajikistanSomoni: {\n    code: CurrencyCode.TajikistanSomoni,\n    countries: [CountryCode.Tajikistan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Tajikistan Somoni',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'TJS',\n    symbol_native: 'TJS',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TanzaniaShilling: {\n    code: CurrencyCode.TanzaniaShilling,\n    countries: [CountryCode.Tanzania],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Tanzania Shilling',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'TSh',\n    symbol_native: 'TSh',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ThailandBaht: {\n    code: CurrencyCode.ThailandBaht,\n    countries: [CountryCode.Thailand],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Thailand Baht',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0E3F',\n    symbol_native: '\u0E3F',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TunisiaDinar: {\n    code: CurrencyCode.TunisiaDinar,\n    countries: [CountryCode.Tunisia],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Tunisia Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u062F.\u062A',\n    symbol_native: '\u062F.\u062A',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TurkeyLira: {\n    code: CurrencyCode.TurkeyLira,\n    countries: [CountryCode.Turkey],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Turkey Lira',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20BA',\n    symbol_native: '\u20BA',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TurkmenistanManat: {\n    code: CurrencyCode.TurkmenistanManat,\n    countries: [CountryCode.Turkmenistan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Turkmenistan Manat',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'm',\n    symbol_native: 'm',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UgandaShilling: {\n    code: CurrencyCode.UgandaShilling,\n    countries: [CountryCode.Uganda],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Uganda Shilling',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'USh',\n    symbol_native: 'USh',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UkraineHryvnia: {\n    code: CurrencyCode.UkraineHryvnia,\n    countries: [CountryCode.Ukraine],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Ukraine Hryvnia',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B4',\n    symbol_native: '\u20B4',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UnitedArabEmiratesDirham: {\n    code: CurrencyCode.UnitedArabEmiratesDirham,\n    countries: [CountryCode.UnitedArabEmirates],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'United Arab Emirates Dirham',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u062F.\u0625',\n    symbol_native: '\u062F.\u0625',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UnitedKingdomPound: {\n    code: CurrencyCode.UnitedKingdomPound,\n    countries: [CountryCode.UnitedKingdom],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'United Kingdom Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UnitedStatesDollar: {\n    code: CurrencyCode.UnitedStatesDollar,\n    countries: [CountryCode.UnitedStates],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'United States Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UruguayPeso: {\n    code: CurrencyCode.UruguayPeso,\n    countries: [CountryCode.Uruguay],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Uruguay Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$U',\n    symbol_native: '$U',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UzbekistanSom: {\n    code: CurrencyCode.UzbekistanSom,\n    countries: [CountryCode.Uzbekistan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Uzbekistan Som',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'UZS',\n    symbol_native: 'UZS',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  VanuatuVatu: {\n    code: CurrencyCode.VanuatuVatu,\n    countries: [CountryCode.Vanuatu],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Vanuatu Vatu',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'VT',\n    symbol_native: 'VT',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  VenezuelaBolivar: {\n    code: CurrencyCode.VenezuelaBolivar,\n    countries: [CountryCode.Venezuela],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Venezuela Bolivar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Bs. F',\n    symbol_native: 'Bs. F',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  VietnamDong: {\n    code: CurrencyCode.VietnamDong,\n    countries: [CountryCode.Vietnam],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Vietnam Dong',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AB',\n    symbol_native: '\u20AB',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  YemenRial: {\n    code: CurrencyCode.YemenRial,\n    countries: [CountryCode.Yemen],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Yemen Rial',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ZambiaKwacha: {\n    code: CurrencyCode.ZambiaKwacha,\n    countries: [CountryCode.Zambia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Zambia Kwacha',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'ZK',\n    symbol_native: 'ZK',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ZimbabweDollar: {\n    code: CurrencyCode.ZimbabweDollar,\n    countries: [CountryCode.Zimbabwe],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Zimbabwe Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AB',\n    symbol_native: '\u20AB',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n};\n\nexport enum CryptoCurrency {\n  Bitcoin = 'BTC',\n  Ethereum = 'ETH',\n  Litecoin = 'LTC',\n  Ripple = 'XRP',\n  Dash = 'DASH',\n  Zcash = 'ZEC',\n  Dogecoin = 'DOGE',\n  Monero = 'XMR',\n  BitcoinCash = 'BCH',\n  EOS = 'EOS',\n  Binance = 'BNB',\n  Stellar = 'XLM',\n  Cardano = 'ADA',\n  IOTA = 'IOTA',\n  Tezos = 'XTZ',\n  NEO = 'NEO',\n  TRON = 'TRX',\n  EOSClassic = 'EOSC',\n  Ontology = 'ONT',\n  VeChain = 'VEN',\n  QTUM = 'QTUM',\n  Lisk = 'LSK',\n  Waves = 'WAVES',\n  OmiseGO = 'OMG',\n  Zilliqa = 'ZIL',\n  BitcoinGold = 'BTG',\n  Decred = 'DCR',\n  Stratis = 'STRAT',\n  Populous = 'PPT',\n  Augur = 'REP',\n  Golem = 'GNT',\n  Siacoin = 'SC',\n  BasicAttentionToken = 'BAT',\n  ZCoin = 'XZC',\n  StratisHedged = 'SNT',\n  VeChainHedged = 'VEN',\n  PowerLedger = 'POWR',\n  WavesHedged = 'WAVE',\n  ZilliqaHedged = 'ZRX',\n  BitcoinDiamond = 'BCD',\n  DigiByte = 'DGB',\n  DigiByteHedged = 'DGB',\n  Bytecoin = 'BCN',\n  BytecoinHedged = 'BCN',\n}\n", "export enum LanguageCode {\n  Afrikaans = 'af',\n  Albanian = 'sq',\n  Amharic = 'am',\n  Arabic = 'ar',\n  Armenian = 'hy',\n  Azerbaijani = 'az',\n  Bashkir = 'ba',\n  Basque = 'eu',\n  Belarusian = 'be',\n  Bengali = 'bn',\n  Berber = 'ber',\n  Bhutani = 'dz',\n  Bihari = 'bh',\n  Bislama = 'bi',\n  Bosnian = 'bs',\n  Breten = 'br',\n  Bulgarian = 'bg',\n  Burmese = 'my',\n  Cantonese = 'yue',\n  Catalan = 'ca',\n  Chinese = 'zh',\n  Chuvash = 'cv',\n  Corsican = 'co',\n  Croatian = 'hr',\n  Czech = 'cs',\n  Danish = 'da',\n  Dari = 'prs',\n  Divehi = 'dv',\n  Dutch = 'nl',\n  English = 'en',\n  Esperanto = 'eo',\n  Estonian = 'et',\n  Faroese = 'fo',\n  Farsi = 'fa',\n  Filipino = 'fil',\n  Finnish = 'fi',\n  French = 'fr',\n  Frisian = 'fy',\n  Galician = 'gl',\n  Georgian = 'ka',\n  German = 'de',\n  Greek = 'el',\n  Greenlandic = 'kl',\n  Gujarati = 'gu',\n  Haitian = 'ht',\n  Hausa = 'ha',\n  Hebrew = 'he',\n  Hindi = 'hi',\n  Hungarian = 'hu',\n  Icelandic = 'is',\n  Igbo = 'ig',\n  Indonesian = 'id',\n  Irish = 'ga',\n  Italian = 'it',\n  Japanese = 'ja',\n  Javanese = 'jv',\n  Kannada = 'kn',\n  Karelian = 'krl',\n  Kazakh = 'kk',\n  Khmer = 'km',\n  Komi = 'kv',\n  Konkani = 'kok',\n  Korean = 'ko',\n  Kurdish = 'ku',\n  Kyrgyz = 'ky',\n  Lao = 'lo',\n  Latin = 'la',\n  Latvian = 'lv',\n  Lithuanian = 'lt',\n  Luxembourgish = 'lb',\n  Ossetian = 'os',\n  Macedonian = 'mk',\n  Malagasy = 'mg',\n  Malay = 'ms',\n  Malayalam = 'ml',\n  Maltese = 'mt',\n  Maori = 'mi',\n  Marathi = 'mr',\n  Mari = 'mhr',\n  Mongolian = 'mn',\n  Montenegrin = 'me',\n  Nepali = 'ne',\n  NorthernSotho = 'nso',\n  Norwegian = 'no',\n  NorwegianBokmal = 'nb',\n  NorwegianNynorsk = 'nn',\n  Oriya = 'or',\n  Pashto = 'ps',\n  Persian = 'fa',\n  Polish = 'pl',\n  Portuguese = 'pt',\n  Punjabi = 'pa',\n  Quechua = 'qu',\n  Romanian = 'ro',\n  Russian = 'ru',\n  Sakha = 'sah',\n  Sami = 'se',\n  Samoan = 'sm',\n  Sanskrit = 'sa',\n  Scots = 'gd',\n  Serbian = 'sr',\n  SerbianCyrillic = 'sr-Cyrl',\n  Sesotho = 'st',\n  Shona = 'sn',\n  Sindhi = 'sd',\n  Sinhala = 'si',\n  Slovak = 'sk',\n  Slovenian = 'sl',\n  Somali = 'so',\n  Spanish = 'es',\n  Sudanese = 'su',\n  Sutu = 'sx',\n  Swahili = 'sw',\n  Swedish = 'sv',\n  Syriac = 'syr',\n  Tagalog = 'tl',\n  Tajik = 'tg',\n  Tamazight = 'tmh',\n  Tamil = 'ta',\n  Tatar = 'tt',\n  Telugu = 'te',\n  Thai = 'th',\n  Tibetan = 'bo',\n  Tsonga = 'ts',\n  Tswana = 'tn',\n  Turkish = 'tr',\n  Turkmen = 'tk',\n  Ukrainian = 'uk',\n  Urdu = 'ur',\n  Uzbek = 'uz',\n  Vietnamese = 'vi',\n  Welsh = 'cy',\n  Xhosa = 'xh',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  Zulu = 'zu',\n}\n\nexport type Language = {\n  code: LanguageCode;\n  name: string;\n  native_name: string;\n};\n", "import { LanguageCode } from '../language';\nimport { CountryCode } from './country';\n\n/**\n * Locale code in form of `[language]-[region]-[variant]`\n *\n * @example\n * ```\n * const localeCode: Locale.EnglishUnitedStates = 'en-US'\n * ```\n *\n */\nexport enum LocaleCode {\n  Afrikaans = 'af',\n  AfrikaansSouthAfrica = 'af-ZA',\n  Albanian = 'sq',\n  AlbanianAlbania = 'sq-AL',\n  Amharic = 'am',\n  AmharicEthiopia = 'am-ET',\n  Arabic = 'ar',\n  ArabicAlgeria = 'ar-DZ',\n  ArabicBahrain = 'ar-BH',\n  ArabicEgypt = 'ar-EG',\n  ArabicIraq = 'ar-IQ',\n  ArabicJordan = 'ar-JO',\n  ArabicKuwait = 'ar-KW',\n  ArabicLebanon = 'ar-LB',\n  ArabicLibya = 'ar-LY',\n  ArabicMorocco = 'ar-MA',\n  ArabicOman = 'ar-OM',\n  ArabicQatar = 'ar-QA',\n  ArabicSaudiArabia = 'ar-SA',\n  ArabicSyria = 'ar-SY',\n  ArabicTunisia = 'ar-TN',\n  ArabicUnitedArabEmirates = 'ar-AE',\n  ArabicYemen = 'ar-YE',\n  Armenian = 'hy',\n  ArmenianArmenia = 'hy-AM',\n  Azerbaijani = 'az',\n  AzerbaijaniAzerbaijan = 'az-AZ',\n  AzerbaijaniCyrillicAzerbaijan = 'az-Cyrl-AZ',\n  Bashkir = 'ba',\n  Basque = 'eu',\n  BasqueSpain = 'eu-ES',\n  Belarusian = 'be',\n  BelarusianBelarus = 'be-BY',\n  Bengali = 'bn',\n  BengaliBangladesh = 'bn-BD',\n  BengaliIndia = 'bn-IN',\n  Berber = 'ber',\n  Bhutani = 'dz',\n  BhutaniBhutan = 'dz-BT',\n  Bosnian = 'bs',\n  BosnianBosniaAndHerzegovina = 'bs-BA',\n  Breton = 'br',\n  Bulgarian = 'bg',\n  BulgarianBosniaAndHerzegovina = 'bg-BG',\n  BulgarianBulgaria = 'bg-BG',\n  Burmese = 'my',\n  BurmeseMyanmar = 'my-MM',\n  Cantonese = 'yue',\n  CantoneseHongKong = 'yue-HK',\n  Catalan = 'ca',\n  CatalanSpain = 'ca-ES',\n  Chechen = 'ce',\n  Cherokee = 'chr',\n  Chinese = 'zh',\n  ChineseSimplified = 'zh-Hans',\n  ChineseSimplifiedChina = 'zh-Hans-CN',\n  ChineseSimplifiedHongKong = 'zh-Hans-HK',\n  ChineseSimplifiedMacau = 'zh-Hans-MO',\n  ChineseSimplifiedSingapore = 'zh-Hans-SG',\n  ChineseTraditional = 'zh-Hant',\n  ChineseTraditionalHongKong = 'zh-Hant-HK',\n  ChineseTraditionalMacau = 'zh-Hant-MO',\n  ChineseTraditionalSingapore = 'zh-Hant-SG',\n  ChineseTraditionalTaiwan = 'zh-Hant-TW',\n  Chuvash = 'cv',\n  CorsicanFrance = 'co-FR',\n  Croatian = 'hr',\n  CroatianBosniaAndHerzegovina = 'hr-BA',\n  CroatianCroatia = 'hr-HR',\n  Czech = 'cs',\n  CzechCzechRepublic = 'cs-CZ',\n  Danish = 'da',\n  DanishDenmark = 'da-DK',\n  Dari = 'prs',\n  DariAfghanistan = 'prs-AF',\n  Divehi = 'dv',\n  DivehiMaldives = 'dv-MV',\n  Dutch = 'nl',\n  DutchBelgium = 'nl-BE',\n  DutchNetherlands = 'nl-NL',\n  English = 'en',\n  EnglishAustralia = 'en-AU',\n  EnglishBelgium = 'en-BE',\n  EnglishBelize = 'en-BZ',\n  EnglishCanada = 'en-CA',\n  EnglishCaribbean = 'en-029',\n  EnglishIreland = 'en-IE',\n  EnglishJamaica = 'en-JM',\n  EnglishNewZealand = 'en-NZ',\n  EnglishPhilippines = 'en-PH',\n  EnglishSingapore = 'en-SG',\n  EnglishSouthAfrica = 'en-ZA',\n  EnglishTrinidadAndTobago = 'en-TT',\n  EnglishUnitedKingdom = 'en-GB',\n  EnglishUnitedStates = 'en-US',\n  EnglishZimbabwe = 'en-ZW',\n  Esperanto = 'eo',\n  Estonian = 'et',\n  EstonianEstonia = 'et-EE',\n  Faroese = 'fo',\n  FaroeseFaroeIslands = 'fo-FO',\n  Farsi = 'fa',\n  FarsiIran = 'fa-IR',\n  Filipino = 'fil',\n  FilipinoPhilippines = 'fil-PH',\n  Finnish = 'fi',\n  FinnishFinland = 'fi-FI',\n  French = 'fr',\n  FrenchBelgium = 'fr-BE',\n  FrenchCanada = 'fr-CA',\n  FrenchFrance = 'fr-FR',\n  FrenchLuxembourg = 'fr-LU',\n  FrenchMonaco = 'fr-MC',\n  FrenchReunion = 'fr-RE',\n  FrenchSwitzerland = 'fr-CH',\n  Frisian = 'fy',\n  FrisianNetherlands = 'fy-NL',\n  Galician = 'gl',\n  GalicianSpain = 'gl-ES',\n  Georgian = 'ka',\n  GeorgianGeorgia = 'ka-GE',\n  German = 'de',\n  GermanAustria = 'de-AT',\n  GermanBelgium = 'de-BE',\n  GermanGermany = 'de-DE',\n  GermanLiechtenstein = 'de-LI',\n  GermanLuxembourg = 'de-LU',\n  GermanSwitzerland = 'de-CH',\n  Greenlandic = 'kl',\n  GreenlandicGreenland = 'kl-GL',\n  Greek = 'el',\n  GreekGreece = 'el-GR',\n  Gujarati = 'gu',\n  GujaratiIndia = 'gu-IN',\n  Haitian = 'ht',\n  Hausa = 'ha',\n  HausaGhana = 'ha-GH',\n  HausaNiger = 'ha-NE',\n  HausaNigeria = 'ha-NG',\n  Hebrew = 'he',\n  HebrewIsrael = 'he-IL',\n  Hindi = 'hi',\n  HindiIndia = 'hi-IN',\n  Hungarian = 'hu',\n  HungarianHungary = 'hu-HU',\n  Icelandic = 'is',\n  IcelandicIceland = 'is-IS',\n  Igbo = 'ig',\n  IgboNigeria = 'ig-NG',\n  Indonesian = 'id',\n  IndonesianIndonesia = 'id-ID',\n  Irish = 'ga',\n  IrishIreland = 'ga-IE',\n  Italian = 'it',\n  ItalianItaly = 'it-IT',\n  ItalianSwitzerland = 'it-CH',\n  Japanese = 'ja',\n  JapaneseJapan = 'ja-JP',\n  Javanese = 'jv',\n  Kannada = 'kn',\n  KannadaIndia = 'kn-IN',\n  Karelian = 'krl',\n  Kazakh = 'kk',\n  KazakhKazakhstan = 'kk-KZ',\n  Khmer = 'km',\n  KhmerCambodia = 'km-KH',\n  KinyarwandaRwanda = 'rw-RW',\n  Komi = 'kv',\n  Konkani = 'kok',\n  KonkaniIndia = 'kok-IN',\n  Korean = 'ko',\n  KoreanSouthKorea = 'ko-KR',\n  Kurdish = 'ku',\n  KurdishIraq = 'ku-IQ',\n  KurdishTurkey = 'ku-TR',\n  Kyrgyz = 'ky',\n  KyrgyzKyrgyzstan = 'ky-KG',\n  Lao = 'lo',\n  LaoLaos = 'lo-LA',\n  Latin = 'la',\n  Latvian = 'lv',\n  LatvianLatvia = 'lv-LV',\n  Lithuanian = 'lt',\n  LithuanianLithuania = 'lt-LT',\n  Luxembourgish = 'lb',\n  LuxembourgishBelgium = 'lb-LU',\n  LuxembourgishLuxembourg = 'lb-LU',\n  Macedonian = 'mk',\n  MacedonianNorthMacedonia = 'mk-MK',\n  Malagasy = 'mg',\n  Malay = 'ms',\n  MalayBrunei = 'ms-BN',\n  MalayIndia = 'ms-IN',\n  MalayMalaysia = 'ms-MY',\n  MalaySingapore = 'ms-SG',\n  Malayalam = 'ml',\n  MalayalamIndia = 'ml-IN',\n  Maltese = 'mt',\n  MalteseMalta = 'mt-MT',\n  Maori = 'mi',\n  MaoriNewZealand = 'mi-NZ',\n  Marathi = 'mr',\n  MarathiIndia = 'mr-IN',\n  Mari = 'chm',\n  Mongolian = 'mn',\n  MongolianMongolia = 'mn-MN',\n  Montenegrin = 'me',\n  MontenegrinMontenegro = 'me-ME',\n  Nepali = 'ne',\n  NepaliNepal = 'ne-NP',\n  NorthernSotho = 'ns',\n  NorthernSothoSouthAfrica = 'ns-ZA',\n  Norwegian = 'nb',\n  NorwegianBokmalNorway = 'nb-NO',\n  NorwegianNynorskNorway = 'nn-NO',\n  Oriya = 'or',\n  OriyaIndia = 'or-IN',\n  Ossetian = 'os',\n  Pashto = 'ps',\n  PashtoAfghanistan = 'ps-AF',\n  Persian = 'fa',\n  PersianIran = 'fa-IR',\n  Polish = 'pl',\n  PolishPoland = 'pl-PL',\n  Portuguese = 'pt',\n  PortugueseBrazil = 'pt-BR',\n  PortuguesePortugal = 'pt-PT',\n  Punjabi = 'pa',\n  PunjabiIndia = 'pa-IN',\n  PunjabiPakistan = 'pa-PK',\n  Quechua = 'qu',\n  QuechuaBolivia = 'qu-BO',\n  QuechuaEcuador = 'qu-EC',\n  QuechuaPeru = 'qu-PE',\n  Romanian = 'ro',\n  RomanianRomania = 'ro-RO',\n  Russian = 'ru',\n  RussianKazakhstan = 'ru-KZ',\n  RussianKyrgyzstan = 'ru-KG',\n  RussianRussia = 'ru-RU',\n  RussianUkraine = 'ru-UA',\n  Sakha = 'sah',\n  Sanskrit = 'sa',\n  SanskritIndia = 'sa-IN',\n  Sami = 'se',\n  SamiNorway = 'se-NO',\n  SamiSweden = 'se-SE',\n  SamiFinland = 'se-FI',\n  Samoan = 'sm',\n  SamoanSamoa = 'sm-WS',\n  Scots = 'gd',\n  Serbian = 'sr',\n  SerbianBosniaAndHerzegovina = 'sr-BA',\n  SerbianSerbiaAndMontenegro = 'sr-SP',\n  SerbianCyrillic = 'sr-SP-Cyrl',\n  SerbianCyrillicBosniaAndHerzegovina = 'sr-Cyrl-BA',\n  SerbianCyrillicSerbiaAndMontenegro = 'sr-Cyrl-SP',\n  Sesotho = 'st',\n  SesothoSouthAfrica = 'st-ZA',\n  Shona = 'sn',\n  ShonaZimbabwe = 'sn-ZW',\n  Sindhi = 'sd',\n  SindhiPakistan = 'sd-PK',\n  Sinhala = 'si',\n  SinhalaSriLanka = 'si-LK',\n  Slovak = 'sk',\n  SlovakSlovakia = 'sk-SK',\n  Slovenian = 'sl',\n  SlovenianSlovenia = 'sl-SI',\n  Somali = 'so',\n  SomaliSomalia = 'so-SO',\n  Spanish = 'es',\n  SpanishArgentina = 'es-AR',\n  SpanishBolivia = 'es-BO',\n  SpanishChile = 'es-CL',\n  SpanishColombia = 'es-CO',\n  SpanishCostaRica = 'es-CR',\n  SpanishCuba = 'es-CU',\n  SpanishDominicanRepublic = 'es-DO',\n  SpanishEcuador = 'es-EC',\n  SpanishEquatorialGuinea = 'es-GQ',\n  SpanishElSalvador = 'es-SV',\n  SpanishGuatemala = 'es-GT',\n  SpanishHonduras = 'es-HN',\n  SpanishMexico = 'es-MX',\n  SpanishNicaragua = 'es-NI',\n  SpanishPanama = 'es-PA',\n  SpanishParaguay = 'es-PY',\n  SpanishPeru = 'es-PE',\n  SpanishPuertoRico = 'es-PR',\n  SpanishSpain = 'es-ES',\n  SpanishUnitedStates = 'es-US',\n  SpanishUruguay = 'es-UY',\n  SpanishVenezuela = 'es-VE',\n  Sudanese = 'su',\n  Sutu = 'st',\n  SutuSouthAfrica = 'st-ZA',\n  Swahili = 'sw',\n  SwahiliKenya = 'sw-KE',\n  Swedish = 'sv',\n  SwedishFinland = 'sv-FI',\n  SwedishSweden = 'sv-SE',\n  Syriac = 'syr',\n  SyriacSyria = 'syr-SY',\n  Tajik = 'tg',\n  TajikTajikistan = 'tg-TJ',\n  Tagalog = 'tl',\n  TagalogPhilippines = 'tl-PH',\n  Tamazight = 'tmh',\n  Tamil = 'ta',\n  TamilIndia = 'ta-IN',\n  Tatar = 'tt',\n  Telugu = 'te',\n  TeluguIndia = 'te-IN',\n  Thai = 'th',\n  ThaiThailand = 'th-TH',\n  Tibetan = 'bo',\n  TibetanBhutan = 'bo-BT',\n  TibetanChina = 'bo-CN',\n  TibetanIndia = 'bo-IN',\n  Tsonga = 'ts',\n  Tswana = 'tn',\n  TswanaSouthAfrica = 'tn-ZA',\n  Turkish = 'tr',\n  TurkishTurkey = 'tr-TR',\n  Turkmen = 'tk',\n  Ukrainian = 'uk',\n  UkrainianUkraine = 'uk-UA',\n  Urdu = 'ur',\n  UrduAfghanistan = 'ur-AF',\n  UrduIndia = 'ur-IN',\n  UrduPakistan = 'ur-PK',\n  Uzbek = 'uz',\n  UzbekCyrillic = 'uz-Cyrl-UZ',\n  UzbekLatin = 'uz-Latn-UZ',\n  UzbekUzbekistan = 'uz-UZ',\n  Vietnamese = 'vi',\n  VietnameseVietnam = 'vi-VN',\n  Welsh = 'cy',\n  WelshUnitedKingdom = 'cy-GB',\n  Xhosa = 'xh',\n  XhosaSouthAfrica = 'xh-ZA',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  YorubaNigeria = 'yo-NG',\n  ZhuyinMandarinChina = 'yue-Hant-CN',\n  Zulu = 'zu',\n  ZuluSouthAfrica = 'zu-ZA',\n}\n\nexport type Locale = {\n  country?: {\n    code: CountryCode;\n    name: string;\n    native: string;\n  };\n  id: LocaleCode;\n  language: {\n    code: LanguageCode;\n    name: string;\n    native: string;\n  };\n  name: string;\n  native_name: string;\n  rtl: boolean;\n};\n", "import { TimezoneOffset } from './timezone';\nimport { Timezones } from './timezones';\n\nexport enum TimezoneRegions {\n  AfricaAbidjan = 'Africa/Abidjan',\n  AfricaAccra = 'Africa/Accra',\n  AfricaAddisAbaba = 'Africa/Addis_Ababa',\n  AfricaAlgiers = 'Africa/Algiers',\n  AfricaAsmara = 'Africa/Asmara',\n  AfricaBamako = 'Africa/Bamako',\n  AfricaBangui = 'Africa/Bangui',\n  AfricaBanjul = 'Africa/Banjul',\n  AfricaBissau = 'Africa/Bissau',\n  AfricaBlantyre = 'Africa/Blantyre',\n  AfricaBrazzaville = 'Africa/Brazzaville',\n  AfricaBujumbura = 'Africa/Bujumbura',\n  AfricaCairo = 'Africa/Cairo',\n  AfricaCasablanca = 'Africa/Casablanca',\n  AfricaCeuta = 'Africa/Ceuta',\n  AfricaConakry = 'Africa/Conakry',\n  AfricaDakar = 'Africa/Dakar',\n  AfricaDarEsSalaam = 'Africa/Dar_es_Salaam',\n  AfricaDjibouti = 'Africa/Djibouti',\n  AfricaDouala = 'Africa/Douala',\n  AfricaElAaiun = 'Africa/El_Aaiun',\n  AfricaFreetown = 'Africa/Freetown',\n  AfricaGaborone = 'Africa/Gaborone',\n  AfricaHarare = 'Africa/Harare',\n  AfricaJohannesburg = 'Africa/Johannesburg',\n  AfricaJuba = 'Africa/Juba',\n  AfricaKampala = 'Africa/Kampala',\n  AfricaKhartoum = 'Africa/Khartoum',\n  AfricaKigali = 'Africa/Kigali',\n  AfricaKinshasa = 'Africa/Kinshasa',\n  AfricaLagos = 'Africa/Lagos',\n  AfricaLibreville = 'Africa/Libreville',\n  AfricaLome = 'Africa/Lome',\n  AfricaLuanda = 'Africa/Luanda',\n  AfricaLubumbashi = 'Africa/Lubumbashi',\n  AfricaLusaka = 'Africa/Lusaka',\n  AfricaMalabo = 'Africa/Malabo',\n  AfricaMaputo = 'Africa/Maputo',\n  AfricaMaseru = 'Africa/Maseru',\n  AfricaMbabane = 'Africa/Mbabane',\n  AfricaMogadishu = 'Africa/Mogadishu',\n  AfricaMonrovia = 'Africa/Monrovia',\n  AfricaNairobi = 'Africa/Nairobi',\n  AfricaNdjamena = 'Africa/Ndjamena',\n  AfricaNiamey = 'Africa/Niamey',\n  AfricaNouakchott = 'Africa/Nouakchott',\n  AfricaOuagadougou = 'Africa/Ouagadougou',\n  AfricaPortoNovo = 'Africa/Porto-Novo',\n  AfricaSaoTome = 'Africa/Sao_Tome',\n  AfricaTripoli = 'Africa/Tripoli',\n  AfricaTunis = 'Africa/Tunis',\n  AfricaWindhoek = 'Africa/Windhoek',\n  AmericaAdak = 'America/Adak',\n  AmericaAnchorage = 'America/Anchorage',\n  AmericaAnguilla = 'America/Anguilla',\n  AmericaAntigua = 'America/Antigua',\n  AmericaAraguaina = 'America/Araguaina',\n  AmericaArgentinaBuenosAires = 'America/Argentina/Buenos_Aires',\n  AmericaArgentinaCatamarca = 'America/Argentina/Catamarca',\n  AmericaArgentinaCordoba = 'America/Argentina/Cordoba',\n  AmericaArgentinaJujuy = 'America/Argentina/Jujuy',\n  AmericaArgentinaLaRioja = 'America/Argentina/La_Rioja',\n  AmericaArgentinaMendoza = 'America/Argentina/Mendoza',\n  AmericaArgentinaRioGallegos = 'America/Argentina/Rio_Gallegos',\n  AmericaArgentinaSalta = 'America/Argentina/Salta',\n  AmericaArgentinaSanJuan = 'America/Argentina/San_Juan',\n  AmericaArgentinaSanLuis = 'America/Argentina/San_Luis',\n  AmericaArgentinaTucuman = 'America/Argentina/Tucuman',\n  AmericaArgentinaUshuaia = 'America/Argentina/Ushuaia',\n  AmericaAruba = 'America/Aruba',\n  AmericaAsuncion = 'America/Asuncion',\n  AmericaAtikokan = 'America/Atikokan',\n  AmericaAtka = 'America/Atka',\n  AmericaBahia = 'America/Bahia',\n  AmericaBahiaBanderas = 'America/Bahia_Banderas',\n  AmericaBarbados = 'America/Barbados',\n  AmericaBelem = 'America/Belem',\n  AmericaBelize = 'America/Belize',\n  AmericaBlancSablon = 'America/Blanc-Sablon',\n  AmericaBoaVista = 'America/Boa_Vista',\n  AmericaBogota = 'America/Bogota',\n  AmericaBoise = 'America/Boise',\n  AmericaCambridgeBay = 'America/Cambridge_Bay',\n  AmericaCampoGrande = 'America/Campo_Grande',\n  AmericaCancun = 'America/Cancun',\n  AmericaCaracas = 'America/Caracas',\n  AmericaCayenne = 'America/Cayenne',\n  AmericaCayman = 'America/Cayman',\n  AmericaChicago = 'America/Chicago',\n  AmericaChihuahua = 'America/Chihuahua',\n  AmericaCoralHarbour = 'America/Coral_Harbour',\n  AmericaCordoba = 'America/Cordoba',\n  AmericaCostaRica = 'America/Costa_Rica',\n  AmericaCreston = 'America/Creston',\n  AmericaCuiaba = 'America/Cuiaba',\n  AmericaCuracao = 'America/Curacao',\n  AmericaDanmarkshavn = 'America/Danmarkshavn',\n  AmericaDawson = 'America/Dawson',\n  AmericaDawsonCreek = 'America/Dawson_Creek',\n  AmericaDenver = 'America/Denver',\n  AmericaDetroit = 'America/Detroit',\n  AmericaDominica = 'America/Dominica',\n  AmericaEdmonton = 'America/Edmonton',\n  AmericaEirunepe = 'America/Eirunepe',\n  AmericaElSalvador = 'America/El_Salvador',\n  AmericaFortaleza = 'America/Fortaleza',\n  AmericaGlaceBay = 'America/Glace_Bay',\n  AmericaGodthab = 'America/Godthab',\n  AmericaGooseBay = 'America/Goose_Bay',\n  AmericaGrandTurk = 'America/Grand_Turk',\n  AmericaGrenada = 'America/Grenada',\n  AmericaGuadeloupe = 'America/Guadeloupe',\n  AmericaGuatemala = 'America/Guatemala',\n  AmericaGuayaquil = 'America/Guayaquil',\n  AmericaGuyana = 'America/Guyana',\n  AmericaHalifax = 'America/Halifax',\n  AmericaHavana = 'America/Havana',\n  AmericaHermosillo = 'America/Hermosillo',\n  AmericaIndianaIndianapolis = 'America/Indiana/Indianapolis',\n  AmericaIndianaKnox = 'America/Indiana/Knox',\n  AmericaIndianaMarengo = 'America/Indiana/Marengo',\n  AmericaIndianaPetersburg = 'America/Indiana/Petersburg',\n  AmericaIndianaTellCity = 'America/Indiana/Tell_City',\n  AmericaIndianaVevay = 'America/Indiana/Vevay',\n  AmericaIndianaVincennes = 'America/Indiana/Vincennes',\n  AmericaIndianaWinamac = 'America/Indiana/Winamac',\n  AmericaInuvik = 'America/Inuvik',\n  AmericaIqaluit = 'America/Iqaluit',\n  AmericaJamaica = 'America/Jamaica',\n  AmericaJuneau = 'America/Juneau',\n  AmericaKentuckyLouisville = 'America/Kentucky/Louisville',\n  AmericaKentuckyMonticello = 'America/Kentucky/Monticello',\n  AmericaKralendijk = 'America/Kralendijk',\n  AmericaLaPaz = 'America/La_Paz',\n  AmericaLima = 'America/Lima',\n  AmericaLosAngeles = 'America/Los_Angeles',\n  AmericaLouisville = 'America/Louisville',\n  AmericaLowerPrinces = 'America/Lower_Princes',\n  AmericaMaceio = 'America/Maceio',\n  AmericaManagua = 'America/Managua',\n  AmericaManaus = 'America/Manaus',\n  AmericaMarigot = 'America/Marigot',\n  AmericaMartinique = 'America/Martinique',\n  AmericaMatamoros = 'America/Matamoros',\n  AmericaMazatlan = 'America/Mazatlan',\n  AmericaMenominee = 'America/Menominee',\n  AmericaMerida = 'America/Merida',\n  AmericaMetlakatla = 'America/Metlakatla',\n  AmericaMexicoCity = 'America/Mexico_City',\n  AmericaMiquelon = 'America/Miquelon',\n  AmericaMoncton = 'America/Moncton',\n  AmericaMonterrey = 'America/Monterrey',\n  AmericaMontevideo = 'America/Montevideo',\n  AmericaMontserrat = 'America/Montserrat',\n  AmericaMontreal = 'America/Montreal',\n  AmericaNassau = 'America/Nassau',\n  AmericaNewYork = 'America/New_York',\n  AmericaNipigon = 'America/Nipigon',\n  AmericaNome = 'America/Nome',\n  AmericaNoronha = 'America/Noronha',\n  AmericaNorthDakotaBeulah = 'America/North_Dakota/Beulah',\n  AmericaNorthDakotaCenter = 'America/North_Dakota/Center',\n  AmericaNorthDakotaNewSalem = 'America/North_Dakota/New_Salem',\n  AmericaOjinaga = 'America/Ojinaga',\n  AmericaPanama = 'America/Panama',\n  AmericaPangnirtung = 'America/Pangnirtung',\n  AmericaParamaribo = 'America/Paramaribo',\n  AmericaPhoenix = 'America/Phoenix',\n  AmericaPortAuPrince = 'America/Port-au-Prince',\n  AmericaPortOfSpain = 'America/Port_of_Spain',\n  AmericaPortoVelho = 'America/Porto_Velho',\n  AmericaPuertoRico = 'America/Puerto_Rico',\n  AmericaRainyRiver = 'America/Rainy_River',\n  AmericaRankinInlet = 'America/Rankin_Inlet',\n  AmericaRecife = 'America/Recife',\n  AmericaRegina = 'America/Regina',\n  AmericaResolute = 'America/Resolute',\n  AmericaRioBranco = 'America/Rio_Branco',\n  AmericaSantaIsabel = 'America/Santa_Isabel',\n  AmericaSantarem = 'America/Santarem',\n  AmericaSantiago = 'America/Santiago',\n  AmericaSantoDomingo = 'America/Santo_Domingo',\n  AmericaSaoPaulo = 'America/Sao_Paulo',\n  AmericaScoresbysund = 'America/Scoresbysund',\n  AmericaShiprock = 'America/Shiprock',\n  AmericaSitka = 'America/Sitka',\n  AmericaStBarthelemy = 'America/St_Barthelemy',\n  AmericaStJohns = 'America/St_Johns',\n  AmericaStKitts = 'America/St_Kitts',\n  AmericaStLucia = 'America/St_Lucia',\n  AmericaStThomas = 'America/St_Thomas',\n  AmericaStVincent = 'America/St_Vincent',\n  AmericaSwiftCurrent = 'America/Swift_Current',\n  AmericaTegucigalpa = 'America/Tegucigalpa',\n  AmericaThule = 'America/Thule',\n  AmericaThunderBay = 'America/Thunder_Bay',\n  AmericaTijuana = 'America/Tijuana',\n  AmericaToronto = 'America/Toronto',\n  AmericaTortola = 'America/Tortola',\n  AmericaVancouver = 'America/Vancouver',\n  AmericaWhitehorse = 'America/Whitehorse',\n  AmericaWinnipeg = 'America/Winnipeg',\n  AmericaYakutat = 'America/Yakutat',\n  AmericaYellowknife = 'America/Yellowknife',\n  AntarcticaCasey = 'Antarctica/Casey',\n  AntarcticaDavis = 'Antarctica/Davis',\n  AntarcticaDumontDUrville = 'Antarctica/DumontDUrville',\n  AntarcticaMacquarie = 'Antarctica/Macquarie',\n  AntarcticaMawson = 'Antarctica/Mawson',\n  AntarcticaMcMurdo = 'Antarctica/McMurdo',\n  AntarcticaPalmer = 'Antarctica/Palmer',\n  AntarcticaRothera = 'Antarctica/Rothera',\n  AntarcticaSyowa = 'Antarctica/Syowa',\n  AntarcticaTroll = 'Antarctica/Troll',\n  AntarcticaVostok = 'Antarctica/Vostok',\n  ArcticLongyearbyen = 'Arctic/Longyearbyen',\n  AsiaAden = 'Asia/Aden',\n  AsiaAlmaty = 'Asia/Almaty',\n  AsiaAmman = 'Asia/Amman',\n  AsiaAnadyr = 'Asia/Anadyr',\n  AsiaAqtau = 'Asia/Aqtau',\n  AsiaAqtobe = 'Asia/Aqtobe',\n  AsiaAshgabat = 'Asia/Ashgabat',\n  AsiaBaghdad = 'Asia/Baghdad',\n  AsiaBahrain = 'Asia/Bahrain',\n  AsiaBaku = 'Asia/Baku',\n  AsiaBangkok = 'Asia/Bangkok',\n  AsiaBarnaul = 'Asia/Barnaul',\n  AsiaBeirut = 'Asia/Beirut',\n  AsiaBishkek = 'Asia/Bishkek',\n  AsiaBrunei = 'Asia/Brunei',\n  AsiaChita = 'Asia/Chita',\n  AsiaChoibalsan = 'Asia/Choibalsan',\n  AsiaColombo = 'Asia/Colombo',\n  AsiaDamascus = 'Asia/Damascus',\n  AsiaDhaka = 'Asia/Dhaka',\n  AsiaDili = 'Asia/Dili',\n  AsiaDubai = 'Asia/Dubai',\n  AsiaDushanbe = 'Asia/Dushanbe',\n  AsiaFamagusta = 'Asia/Famagusta',\n  AsiaGaza = 'Asia/Gaza',\n  AsiaHebron = 'Asia/Hebron',\n  AsiaHoChiMinh = 'Asia/Ho_Chi_Minh',\n  AsiaHongKong = 'Asia/Hong_Kong',\n  AsiaHovd = 'Asia/Hovd',\n  AsiaIrkutsk = 'Asia/Irkutsk',\n  AsiaJakarta = 'Asia/Jakarta',\n  AsiaJayapura = 'Asia/Jayapura',\n  AsiaJerusalem = 'Asia/Jerusalem',\n  AsiaKabul = 'Asia/Kabul',\n  AsiaKamchatka = 'Asia/Kamchatka',\n  AsiaKarachi = 'Asia/Karachi',\n  AsiaKathmandu = 'Asia/Kathmandu',\n  AsiaKhandyga = 'Asia/Khandyga',\n  AsiaKolkata = 'Asia/Kolkata',\n  AsiaKrasnoyarsk = 'Asia/Krasnoyarsk',\n  AsiaKualaLumpur = 'Asia/Kuala_Lumpur',\n  AsiaKuching = 'Asia/Kuching',\n  AsiaKuwait = 'Asia/Kuwait',\n  AsiaMacau = 'Asia/Macau',\n  AsiaMagadan = 'Asia/Magadan',\n  AsiaMakassar = 'Asia/Makassar',\n  AsiaManila = 'Asia/Manila',\n  AsiaMuscat = 'Asia/Muscat',\n  AsiaNicosia = 'Asia/Nicosia',\n  AsiaNovokuznetsk = 'Asia/Novokuznetsk',\n  AsiaNovosibirsk = 'Asia/Novosibirsk',\n  AsiaOmsk = 'Asia/Omsk',\n  AsiaOral = 'Asia/Oral',\n  AsiaPhnomPenh = 'Asia/Phnom_Penh',\n  AsiaPontianak = 'Asia/Pontianak',\n  AsiaPyongyang = 'Asia/Pyongyang',\n  AsiaQatar = 'Asia/Qatar',\n  AsiaQyzylorda = 'Asia/Qyzylorda',\n  AsiaRangoon = 'Asia/Rangoon',\n  AsiaRiyadh = 'Asia/Riyadh',\n  AsiaSakhalin = 'Asia/Sakhalin',\n  AsiaSamarkand = 'Asia/Samarkand',\n  AsiaSeoul = 'Asia/Seoul',\n  AsiaShanghai = 'Asia/Shanghai',\n  AsiaSingapore = 'Asia/Singapore',\n  AsiaSrednekolymsk = 'Asia/Srednekolymsk',\n  AsiaTaipei = 'Asia/Taipei',\n  AsiaTashkent = 'Asia/Tashkent',\n  AsiaTbilisi = 'Asia/Tbilisi',\n  AsiaTehran = 'Asia/Tehran',\n  AsiaThimphu = 'Asia/Thimphu',\n  AsiaTokyo = 'Asia/Tokyo',\n  AsiaTomsk = 'Asia/Tomsk',\n  AsiaUlaanbaatar = 'Asia/Ulaanbaatar',\n  AsiaUrumqi = 'Asia/Urumqi',\n  AsiaUstNera = 'Asia/Ust-Nera',\n  AsiaVientiane = 'Asia/Vientiane',\n  AsiaVladivostok = 'Asia/Vladivostok',\n  AsiaYakutsk = 'Asia/Yakutsk',\n  AsiaYekaterinburg = 'Asia/Yekaterinburg',\n  AsiaYerevan = 'Asia/Yerevan',\n  AtlanticAzores = 'Atlantic/Azores',\n  AtlanticBermuda = 'Atlantic/Bermuda',\n  AtlanticCanary = 'Atlantic/Canary',\n  AtlanticCapeVerde = 'Atlantic/Cape_Verde',\n  AtlanticFaroe = 'Atlantic/Faroe',\n  AtlanticMadeira = 'Atlantic/Madeira',\n  AtlanticReykjavik = 'Atlantic/Reykjavik',\n  AtlanticSouthGeorgia = 'Atlantic/South_Georgia',\n  AtlanticStHelena = 'Atlantic/St_Helena',\n  AtlanticStanley = 'Atlantic/Stanley',\n  AustraliaAdelaide = 'Australia/Adelaide',\n  AustraliaBrisbane = 'Australia/Brisbane',\n  AustraliaBrokenHill = 'Australia/Broken_Hill',\n  AustraliaCanberra = 'Australia/Canberra',\n  AustraliaCurrie = 'Australia/Currie',\n  AustraliaDarwin = 'Australia/Darwin',\n  AustraliaEucla = 'Australia/Eucla',\n  AustraliaHobart = 'Australia/Hobart',\n  AustraliaLindeman = 'Australia/Lindeman',\n  AustraliaLordHowe = 'Australia/Lord_Howe',\n  AustraliaMelbourne = 'Australia/Melbourne',\n  AustraliaPerth = 'Australia/Perth',\n  AustraliaSydney = 'Australia/Sydney',\n  EuropeAmsterdam = 'Europe/Amsterdam',\n  EuropeAndorra = 'Europe/Andorra',\n  EuropeAthens = 'Europe/Athens',\n  EuropeBelgrade = 'Europe/Belgrade',\n  EuropeBerlin = 'Europe/Berlin',\n  EuropeBratislava = 'Europe/Bratislava',\n  EuropeBrussels = 'Europe/Brussels',\n  EuropeBucharest = 'Europe/Bucharest',\n  EuropeBudapest = 'Europe/Budapest',\n  EuropeBusingen = 'Europe/Busingen',\n  EuropeChisinau = 'Europe/Chisinau',\n  EuropeCopenhagen = 'Europe/Copenhagen',\n  EuropeDublin = 'Europe/Dublin',\n  EuropeGibraltar = 'Europe/Gibraltar',\n  EuropeGuernsey = 'Europe/Guernsey',\n  EuropeHelsinki = 'Europe/Helsinki',\n  EuropeIsleOfMan = 'Europe/Isle_of_Man',\n  EuropeIstanbul = 'Europe/Istanbul',\n  EuropeJersey = 'Europe/Jersey',\n  EuropeKaliningrad = 'Europe/Kaliningrad',\n  EuropeKiev = 'Europe/Kiev',\n  EuropeKirov = 'Europe/Kirov',\n  EuropeLisbon = 'Europe/Lisbon',\n  EuropeLjubljana = 'Europe/Ljubljana',\n  EuropeLondon = 'Europe/London',\n  EuropeLuxembourg = 'Europe/Luxembourg',\n  EuropeMadrid = 'Europe/Madrid',\n  EuropeMalta = 'Europe/Malta',\n  EuropeMariehamn = 'Europe/Mariehamn',\n  EuropeMinsk = 'Europe/Minsk',\n  EuropeMonaco = 'Europe/Monaco',\n  EuropeMoscow = 'Europe/Moscow',\n  EuropeOslo = 'Europe/Oslo',\n  EuropeParis = 'Europe/Paris',\n  EuropePodgorica = 'Europe/Podgorica',\n  EuropePrague = 'Europe/Prague',\n  EuropeRiga = 'Europe/Riga',\n  EuropeRome = 'Europe/Rome',\n  EuropeSamara = 'Europe/Samara',\n  EuropeSanMarino = 'Europe/San_Marino',\n  EuropeSarajevo = 'Europe/Sarajevo',\n  EuropeSimferopol = 'Europe/Simferopol',\n  EuropeSkopje = 'Europe/Skopje',\n  EuropeSofia = 'Europe/Sofia',\n  EuropeStockholm = 'Europe/Stockholm',\n  EuropeTallinn = 'Europe/Tallinn',\n  EuropeTirane = 'Europe/Tirane',\n  EuropeUzhgorod = 'Europe/Uzhgorod',\n  EuropeVaduz = 'Europe/Vaduz',\n  EuropeVatican = 'Europe/Vatican',\n  EuropeVienna = 'Europe/Vienna',\n  EuropeVilnius = 'Europe/Vilnius',\n  EuropeVolgograd = 'Europe/Volgograd',\n  EuropeWarsaw = 'Europe/Warsaw',\n  EuropeZagreb = 'Europe/Zagreb',\n  EuropeZaporozhye = 'Europe/Zaporozhye',\n  EuropeZurich = 'Europe/Zurich',\n  GMT = 'GMT',\n  IndianAntananarivo = 'Indian/Antananarivo',\n  IndianChagos = 'Indian/Chagos',\n  IndianChristmas = 'Indian/Christmas',\n  IndianCocos = 'Indian/Cocos',\n  IndianComoro = 'Indian/Comoro',\n  IndianKerguelen = 'Indian/Kerguelen',\n  IndianMahe = 'Indian/Mahe',\n  IndianMaldives = 'Indian/Maldives',\n  IndianMauritius = 'Indian/Mauritius',\n  IndianMayotte = 'Indian/Mayotte',\n  IndianReunion = 'Indian/Reunion',\n  PacificApia = 'Pacific/Apia',\n  PacificAuckland = 'Pacific/Auckland',\n  PacificBougainville = 'Pacific/Bougainville',\n  PacificChatham = 'Pacific/Chatham',\n  PacificChuuk = 'Pacific/Chuuk',\n  PacificEaster = 'Pacific/Easter',\n  PacificEfate = 'Pacific/Efate',\n  PacificEnderbury = 'Pacific/Enderbury',\n  PacificFakaofo = 'Pacific/Fakaofo',\n  PacificFiji = 'Pacific/Fiji',\n  PacificFunafuti = 'Pacific/Funafuti',\n  PacificGalapagos = 'Pacific/Galapagos',\n  PacificGambier = 'Pacific/Gambier',\n  PacificGuadalcanal = 'Pacific/Guadalcanal',\n  PacificGuam = 'Pacific/Guam',\n  PacificHonolulu = 'Pacific/Honolulu',\n  PacificJohnston = 'Pacific/Johnston',\n  PacificKiritimati = 'Pacific/Kiritimati',\n  PacificKosrae = 'Pacific/Kosrae',\n  PacificKwajalein = 'Pacific/Kwajalein',\n  PacificMajuro = 'Pacific/Majuro',\n  PacificMarquesas = 'Pacific/Marquesas',\n  PacificMidway = 'Pacific/Midway',\n  PacificNauru = 'Pacific/Nauru',\n  PacificNiue = 'Pacific/Niue',\n  PacificNorfolk = 'Pacific/Norfolk',\n  PacificNoumea = 'Pacific/Noumea',\n  PacificPagoPago = 'Pacific/Pago_Pago',\n  PacificPalau = 'Pacific/Palau',\n  PacificPitcairn = 'Pacific/Pitcairn',\n  PacificPohnpei = 'Pacific/Pohnpei',\n  PacificPonape = 'Pacific/Ponape',\n  PacificPortMoresby = 'Pacific/Port_Moresby',\n  PacificRarotonga = 'Pacific/Rarotonga',\n  PacificSaipan = 'Pacific/Saipan',\n  PacificSamoa = 'Pacific/Samoa',\n  PacificTahiti = 'Pacific/Tahiti',\n  PacificTarawa = 'Pacific/Tarawa',\n  PacificTongatapu = 'Pacific/Tongatapu',\n  PacificTruk = 'Pacific/Truk',\n  PacificWake = 'Pacific/Wake',\n  PacificWallis = 'Pacific/Wallis',\n  PacificYap = 'Pacific/Yap',\n  // USAlaska = 'US/Alaska',\n  // USAleutian = 'US/Aleutian',\n  // USArizona = 'US/Arizona',\n  // USCentral = 'US/Central',\n  // USCentralStandard = 'US/Central Standard',\n  // USCentralDaylight = 'US/Central Daylight',\n  // USEastern = 'US/Eastern',\n  // USEasternStandard = 'US/Eastern Standard',\n  // USEasternDaylight = 'US/Eastern Daylight',\n  // USHawaii = 'US/Hawaii',\n  // USMountain = 'US/Mountain',\n  // USMountainStandard = 'US/Mountain Standard',\n  // USMountainDaylight = 'US/Mountain Daylight',\n  // USPacific = 'US/Pacific',\n  // USPacificStandard = 'US/Pacific Standard',\n  // USPacificDaylight = 'US/Pacific Daylight',\n  // USPacificIsland = 'US/Pacific-Island',\n}\n\nexport type TimezoneRegion = {\n  id: TimezoneRegions;\n  name: string;\n  offset: TimezoneOffset;\n  timezone: Timezones;\n};\n", "import { Timezones } from './timezones';\n\nexport enum TimezoneOffset {\n  UTC_MINUS_12 = 'UTC-12',\n  UTC_MINUS_11_30 = 'UTC-11:30',\n  UTC_MINUS_11 = 'UTC-11',\n  UTC_MINUS_10_30 = 'UTC-10:30',\n  UTC_MINUS_10 = 'UTC-10',\n  UTC_MINUS_9_30 = 'UTC-9:30',\n  UTC_MINUS_9 = 'UTC-09',\n  UTC_MINUS_8_45 = 'UTC-8:45',\n  UTC_MINUS_8 = 'UTC-08',\n  UTC_MINUS_7 = 'UTC-07',\n  UTC_MINUS_6_30 = 'UTC-6:30',\n  UTC_MINUS_6 = 'UTC-06',\n  UTC_MINUS_5_45 = 'UTC-5:45',\n  UTC_MINUS_5_30 = 'UTC-5:30',\n  UTC_MINUS_5 = 'UTC-05',\n  UTC_MINUS_4_30 = 'UTC-4:30',\n  UTC_MINUS_4 = 'UTC-04',\n  UTC_MINUS_3_30 = 'UTC-3:30',\n  UTC_MINUS_3 = 'UTC-03',\n  UTC_MINUS_2_30 = 'UTC-2:30',\n  UTC_MINUS_2 = 'UTC-02',\n  UTC_MINUS_1 = 'UTC-01',\n  UTC_0 = 'UTC+00',\n  UTC_PLUS_1 = 'UTC+01',\n  UTC_PLUS_2 = 'UTC+02',\n  UTC_PLUS_3 = 'UTC+03',\n  UTC_PLUS_3_30 = 'UTC+3:30',\n  UTC_PLUS_4 = 'UTC+04',\n  UTC_PLUS_4_30 = 'UTC+4:30',\n  UTC_PLUS_5 = 'UTC+05',\n  UTC_PLUS_5_30 = 'UTC+5:30',\n  UTC_PLUS_5_45 = 'UTC+5:45',\n  UTC_PLUS_6 = 'UTC+06',\n  UTC_PLUS_6_30 = 'UTC+6:30',\n  UTC_PLUS_7 = 'UTC+07',\n  UTC_PLUS_8 = 'UTC+08',\n  UTC_PLUS_8_45 = 'UTC+8:45',\n  UTC_PLUS_9 = 'UTC+09',\n  UTC_PLUS_9_30 = 'UTC+9:30',\n  UTC_PLUS_10 = 'UTC+10',\n  UTC_PLUS_10_30 = 'UTC+10:30',\n  UTC_PLUS_11 = 'UTC+11',\n  UTC_PLUS_11_30 = 'UTC+11:30',\n  UTC_PLUS_12 = 'UTC+12',\n  UTC_PLUS_12_45 = 'UTC+12:45',\n  UTC_PLUS_13 = 'UTC+13',\n  UTC_PLUS_13_45 = 'UTC+13:45',\n  UTC_PLUS_14 = 'UTC+14',\n}\n\nexport type TimezoneDetails = {\n  dst: {\n    is: boolean;\n    uses: boolean;\n  };\n  id: Timezones;\n  name: string;\n  offset: TimezoneOffset;\n};\n", "import { TimezoneOffset } from './timezone.js';\nimport { TimezoneDetails } from './timezone';\n\nexport enum Timezones {\n  AcreTime = 'ACT',\n  AfghanistanTime = 'AFT',\n  AIXCentralEuropeanTime = 'DFT',\n  AlaskaDaylightTime = 'AKDT',\n  AlaskaStandardTime = 'AKST',\n  AlmaAtaTime = 'ALMT',\n  AmazonSummerTime = 'AMST',\n  AmazonTime = 'AMT',\n  AnadyrTime = 'ANAT',\n  AqtobeTime = 'AQTT',\n  ArabiaStandardTime = 'AST',\n  ArgentinaTime = 'ART',\n  ArmeniaTime = 'AMT',\n  ASEANCommonTime = 'ASEAN',\n  AtlanticDaylightTime = 'ADT',\n  AtlanticStandardTime = 'AST',\n  AustralianCentralDaylightSavingTime = 'ACDT',\n  AustralianCentralStandardTime = 'ACST',\n  AustralianCentralWesternStandardTime = 'ACWST',\n  AustralianEasternDaylightSavingTime = 'AEDT',\n  AustralianEasternStandardTime = 'AEST',\n  AustralianEasternTime = 'AET',\n  AustralianWesternStandardTime = 'AWST',\n  AzerbaijanTime = 'AZT',\n  AzoresStandardTime = 'AZOT',\n  AzoresSummerTime = 'AZOST',\n  BakerIslandTime = 'BIT',\n  BangladeshStandardTime = 'BST',\n  BhutanTime = 'BTT',\n  BoliviaTime = 'BOT',\n  BougainvilleStandardTime = 'BST',\n  BrasiliaSummerTime = 'BRST',\n  BrasiliaTime = 'BRT',\n  BritishIndianOceanTime = 'BIOT',\n  BritishSummerTime = 'BST',\n  BruneiTime = 'BNT',\n  CapeVerdeTime = 'CVT',\n  CentralAfricaTime = 'CAT',\n  CentralDaylightTime = 'CDT',\n  CentralEuropeanSummerTime = 'CEST',\n  CentralEuropeanTime = 'CET',\n  CentralIndonesiaTime = 'WITA',\n  CentralStandardTime = 'CST',\n  CentralTime = 'CT',\n  CentralWesternStandardTime = 'CWST',\n  ChamorroStandardTime = 'CHST',\n  ChathamDaylightTime = 'CHADT',\n  ChathamStandardTime = 'CHAST',\n  ChileStandardTime = 'CLT',\n  ChileSummerTime = 'CLST',\n  ChinaStandardTime = 'CST',\n  ChoibalsanStandardTime = 'CHOT',\n  ChoibalsanSummerTime = 'CHOST',\n  ChristmasIslandTime = 'CXT',\n  ChuukTime = 'CHUT',\n  ClipptertonIslandStandardTime = 'CIST',\n  CocosIslandsTime = 'CCT',\n  ColombiaSummerTime = 'COST',\n  ColombiaTime = 'COT',\n  CookIslandTime = 'CKT',\n  CoordinatedUniversalTime = 'UTC',\n  CubaDaylightTime = 'CDT',\n  CubaStandardTime = 'CST',\n  DavisTime = 'DAVT',\n  DumontDUrvilleTime = 'DDUT',\n  EastAfricaTime = 'EAT',\n  EasterIslandStandardTime = 'EAST',\n  EasterIslandSummerTime = 'EASST',\n  EasternCaribbeanTime = 'ECT',\n  EasternDaylightTime = 'EDT',\n  EasternEuropeanSummerTime = 'EEST',\n  EasternEuropeanTime = 'EET',\n  EasternGreenlandSummerTime = 'EGST',\n  EasternGreenlandTime = 'EGT',\n  EasternIndonesianTime = 'WIT',\n  EasternStandardTime = 'EST',\n  EasternTime = 'ET',\n  EcuadorTime = 'ECT',\n  FalklandIslandsSummerTime = 'FKST',\n  FalklandIslandsTime = 'FKT',\n  FernandoDeNoronhaTime = 'FNT',\n  FijiTime = 'FJT',\n  FrenchGuianaTime = 'GFT',\n  FrenchSouthernAndAntarcticTime = 'TFT',\n  FurtherEasternEuropeanTime = 'FET',\n  GalapagosTime = 'GALT',\n  GambierIslandTime = 'GIT',\n  GambierIslandsTime = 'GAMT',\n  GeorgiaStandardTime = 'GET',\n  GilbertIslandTime = 'GILT',\n  GreenwichMeanTime = 'GMT',\n  GulfStandardTime = 'GST',\n  GuyanaTime = 'GYT',\n  HawaiiAleutianDaylightTime = 'HDT',\n  HawaiiAleutianStandardTime = 'HST',\n  HeardAndMcDonaldIslandsTime = 'HMT',\n  HeureAvanceeDEuropeCentraleTime = 'HAEC',\n  HongKongTime = 'HKT',\n  HovdSummerTime = 'HOVST',\n  HovdTime = 'HOVT',\n  IndianOceanTime = 'IOT',\n  IndianStandardTime = 'IST',\n  IndochinaTime = 'ICT',\n  InternationalDayLineWestTime = 'IDLW',\n  IranDaylightTime = 'IRDT',\n  IranStandardTime = 'IRST',\n  IrishStandardTime = 'IST',\n  IrkutskSummerTime = 'IRKST',\n  IrkutskTime = 'IRKT',\n  IsraelDaylightTime = 'IDT',\n  IsraelStandardTime = 'IST',\n  JapanStandardTime = 'JST',\n  KaliningradTime = 'KALT',\n  KamchatkaTime = 'KAMT',\n  KoreaStandardTime = 'KST',\n  KosraeTime = 'KOST',\n  KrasnoyarskSummerTime = 'KRAST',\n  KrasnoyarskTime = 'KRAT',\n  KyrgyzstanTime = 'KGT',\n  LineIslandsTime = 'LINT',\n  KazakhstanStandardTime = 'KAST',\n  LordHoweStandardTime = 'LHST',\n  LordHoweSummerTime = 'LHST',\n  MacquarieIslandStationTime = 'MIST',\n  MagadanTime = 'MAGT',\n  MalaysiaStandardTime = 'MST',\n  MalaysiaTime = 'MYT',\n  MaldivesTime = 'MVT',\n  MarquesasIslandsTime = 'MART',\n  MarshallIslandsTime = 'MHT',\n  MauritiusTime = 'MUT',\n  MawsonStationTime = 'MAWT',\n  MiddleEuropeanSummerTime = 'MEDT',\n  MiddleEuropeanTime = 'MET',\n  MoscowTime = 'MSK',\n  MountainDaylightTime = 'MDT',\n  MountainStandardTime = 'MST',\n  MyanmarStandardTime = 'MMT',\n  NepalTime = 'NCT',\n  NauruTime = 'NRT',\n  NewCaledoniaTime = 'NCT',\n  NewZealandDaylightTime = 'NZDT',\n  NewZealandStandardTime = 'NZST',\n  NewfoundlandDaylightTime = 'NDT',\n  NewfoundlandStandardTime = 'NST',\n  NewfoundlandTime = 'NT',\n  NiueTime = 'NUT',\n  NorfolkIslandTime = 'NFT',\n  NovosibirskTime = 'NOVT',\n  OmskTime = 'OMST',\n  OralTime = 'ORAT',\n  PacificDaylightTime = 'PDT',\n  PacificStandardTime = 'PST',\n  PakistanStandardTime = 'PKT',\n  PalauTime = 'PWT',\n  PapuaNewGuineaTime = 'PGT',\n  ParaguaySummerTime = 'PYST',\n  ParaguayTime = 'PYT',\n  PeruTime = 'PET',\n  PhilippineStandardTime = 'PHST',\n  PhilippineTime = 'PHT',\n  PhoenixIslandTime = 'PHOT',\n  PitcairnTime = 'PST',\n  PohnpeiStandardTime = 'PONT',\n  ReunionTime = 'RET',\n  RotheraResearchStationTime = 'ROTT',\n  SaintPierreAndMiquelonDaylightTime = 'PMDT',\n  SaintPierreAndMiquelonStandardTime = 'PMST',\n  SakhalinIslandTime = 'SAKT',\n  SamaraTime = 'SAMT',\n  SamoaDaylightTime = 'SDT',\n  SamoaStandardTime = 'SST',\n  SeychellesTime = 'SCT',\n  ShowaStationTime = 'SYOT',\n  SingaporeStandardTime = 'SST',\n  SingaporeTime = 'SGT',\n  SolomonIslandsTime = 'SBT',\n  SouthAfricanStandardTime = 'SAST',\n  SouthGeorgiaAndTheSouthSandwichIslandsTime = 'GST',\n  SrednekolymskTime = 'SRET',\n  SriLankaStandardTime = 'SLST',\n  SurinameTime = 'SRT',\n  TahitiTime = 'TAHT',\n  TajikistanTime = 'TJT',\n  ThailandStandardTime = 'THA',\n  TimorLesteTime = 'TLT',\n  TokelauTime = 'TKT',\n  TongaTime = 'TOT',\n  TurkeyTime = 'TRT',\n  TurkmenistanTime = 'TMT',\n  TuvaluTime = 'TVT',\n  UlaanbaatarStandardTime = 'ULAT',\n  UlaanbaatarSummerTime = 'ULAST',\n  UruguayStandardTime = 'UYT',\n  UruguaySummerTime = 'UYST',\n  UzbekistanTime = 'UZT',\n  VanuatuTime = 'VUT',\n  VenezuelaStandardTime = 'VET',\n  VladivostokTime = 'VLAT',\n  VolgogradTime = 'VOLT',\n  VostokStationTime = 'VOST',\n  WakeIslandTime = 'WAKT',\n  WestAfricaSummerTime = 'WAST',\n  WestAfricaTime = 'WAT',\n  WestGreenlandSummerTime = 'WGST',\n  WestGreenlandTime = 'WGT',\n  WestKazakhstanTime = 'WKT',\n  WesternEuropeanSummerTime = 'WEDT',\n  WesternEuropeanTime = 'WET',\n  WesternIndonesianTime = 'WIT',\n  WesternStandardTime = 'WST',\n  YakutskTime = 'YAKT',\n  YekaterinburgTime = 'YEKT',\n}\n\nexport const AcreTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AcreTime,\n  name: 'Acre Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const AfghanistanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AfghanistanTime,\n  name: 'Afghanistan Time',\n  offset: TimezoneOffset.UTC_PLUS_4_30,\n};\n\nexport const AIXCentralEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AIXCentralEuropeanTime,\n  name: 'AIX Central European Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const AlaskaDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AlaskaDaylightTime,\n  name: 'Alaska Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_8,\n};\n\nexport const AlaskaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AlaskaStandardTime,\n  name: 'Alaska Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_9,\n};\n\nexport const AlmaAtaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AlmaAtaTime,\n  name: 'Alma-Ata Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const AmazonSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AmazonSummerTime,\n  name: 'Amazon Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const AmazonTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AmazonTime,\n  name: 'Amazon Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const AnadyrTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AnadyrTime,\n  name: 'Anadyr Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const AqtobeTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AqtobeTime,\n  name: 'Aqtobe Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const ArabiaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ArabiaStandardTime,\n  name: 'Arabia Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const ArgentinaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ArgentinaTime,\n  name: 'Argentina Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const ArmeniaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ArmeniaTime,\n  name: 'Armenia Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const AtlanticDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AtlanticDaylightTime,\n  name: 'Atlantic Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const AtlanticStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AtlanticStandardTime,\n  name: 'Atlantic Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const AustralianCentralDaylightSavingTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AustralianCentralDaylightSavingTime,\n  name: 'Australian Central Daylight Saving Time',\n  offset: TimezoneOffset.UTC_PLUS_10_30,\n};\n\nexport const AustralianCentralStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianCentralStandardTime,\n  name: 'Australian Central Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n};\n\nexport const AustralianCentralWesternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianCentralWesternStandardTime,\n  name: 'Australian Central Western Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8_45,\n};\n\nexport const AustralianEasternDaylightSavingTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AustralianEasternDaylightSavingTime,\n  name: 'Australian Eastern Daylight Saving Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const AustralianEasternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianEasternStandardTime,\n  name: 'Australian Eastern Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const AustralianEasternTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianEasternTime,\n  name: 'Australian Eastern Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const AustralianWesternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianWesternStandardTime,\n  name: 'Australian Western Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const AzerbaijanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AzerbaijanTime,\n  name: 'Azerbaijan Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const AzoresStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AzoresStandardTime,\n  name: 'Azores Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_1,\n};\n\nexport const AzoresSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AzoresSummerTime,\n  name: 'Azores Summer Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const BakerIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BakerIslandTime,\n  name: 'Baker Island Time',\n  offset: TimezoneOffset.UTC_MINUS_12,\n};\n\nexport const BangladeshStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BangladeshStandardTime,\n  name: 'Bangladesh Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const BhutanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BhutanTime,\n  name: 'Bhutan Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const BoliviaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BoliviaTime,\n  name: 'Bolivia Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const BougainvilleStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BougainvilleStandardTime,\n  name: 'Bougainville Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const BrasiliaSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.BrasiliaSummerTime,\n  name: 'Brasilia Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const BrasiliaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BrasiliaTime,\n  name: 'Brasilia Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const BritishIndianOceanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BritishIndianOceanTime,\n  name: 'British Indian Ocean Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const BritishSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.BritishSummerTime,\n  name: 'British Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const BruneiTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BruneiTime,\n  name: 'Brunei Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const CapeVerdeTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CapeVerdeTime,\n  name: 'Cape Verde Time',\n  offset: TimezoneOffset.UTC_MINUS_1,\n};\n\nexport const CentralAfricaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralAfricaTime,\n  name: 'Central Africa Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const CentralDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.CentralDaylightTime,\n  name: 'Central Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const CentralEuropeanSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.CentralEuropeanSummerTime,\n  name: 'Central European Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const CentralEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralEuropeanTime,\n  name: 'Central European Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const CentralIndonesiaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralIndonesiaTime,\n  name: 'Central Indonesia Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const CentralStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralStandardTime,\n  name: 'Central Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_6,\n};\n\nexport const CentralTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralTime,\n  name: 'Central Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const CentralWesternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralWesternStandardTime,\n  name: 'Central Western Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8_45,\n};\n\nexport const ChamorroStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChamorroStandardTime,\n  name: 'Chamorro Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const ChathamDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.ChathamDaylightTime,\n  name: 'Chatham Daylight Time',\n  offset: TimezoneOffset.UTC_PLUS_13_45,\n};\n\nexport const ChathamStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChathamStandardTime,\n  name: 'Chatham Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_12_45,\n};\n\nexport const ChileStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChileStandardTime,\n  name: 'Chile Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const ChileSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.ChileSummerTime,\n  name: 'Chile Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const ChinaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChinaStandardTime,\n  name: 'China Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const ChoibalsanStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChoibalsanStandardTime,\n  name: 'Choibalsan Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const ChoibalsanSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.ChoibalsanSummerTime,\n  name: 'Choibalsan Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const ChristmasIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChristmasIslandTime,\n  name: 'Christmas Island Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const ChuukTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChuukTime,\n  name: 'Chuuk Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const ClipptertonIslandStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ClipptertonIslandStandardTime,\n  name: 'Clippterton Island Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_8,\n};\n\nexport const CocosIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CocosIslandsTime,\n  name: 'Cocos Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_6_30,\n};\n\nexport const ColombiaSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.ColombiaSummerTime,\n  name: 'Colombia Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const ColombiaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ColombiaTime,\n  name: 'Colombia Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const CookIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CookIslandTime,\n  name: 'Cook Island Time',\n  offset: TimezoneOffset.UTC_MINUS_10,\n};\n\nexport const CoordinatedUniversalTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CoordinatedUniversalTime,\n  name: 'Coordinated Universal Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const CubaDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.CubaDaylightTime,\n  name: 'Cuba Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const CubaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CubaStandardTime,\n  name: 'Cuba Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const DavisTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.DavisTime,\n  name: 'Davis Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const DumontDUrvilleTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.DumontDUrvilleTime,\n  name: \"Dumont D'Urville Time\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const EastAfricaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EastAfricaTime,\n  name: 'East Africa Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const EasterIslandStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasterIslandStandardTime,\n  name: 'Easter Island Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_6,\n};\n\nexport const EasterIslandSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.EasterIslandSummerTime,\n  name: 'Easter Island Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const EasternCaribbeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternCaribbeanTime,\n  name: 'Eastern Caribbean Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const EasternDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.EasternDaylightTime,\n  name: 'Eastern Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const EasternEuropeanSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.EasternEuropeanSummerTime,\n  name: 'Eastern European Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const EasternEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternEuropeanTime,\n  name: 'Eastern European Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const EasternGreenlandSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.EasternGreenlandSummerTime,\n  name: 'Eastern Greenland Summer Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const EasternGreenlandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternGreenlandTime,\n  name: 'Eastern Greenland Time',\n  offset: TimezoneOffset.UTC_MINUS_1,\n};\n\nexport const EasternIndonesianTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternIndonesianTime,\n  name: 'Eastern Indonesian Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const EasternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternStandardTime,\n  name: 'Eastern Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const EasternTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternTime,\n  name: 'Eastern Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const EcuadorTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EcuadorTime,\n  name: 'Ecuador Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const FalklandIslandsSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.FalklandIslandsSummerTime,\n  name: 'Falkland Islands Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const FalklandIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FalklandIslandsTime,\n  name: 'Falkland Islands Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const FernandoDeNoronhaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FernandoDeNoronhaTime,\n  name: 'Fernando de Noronha Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const FijiTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FijiTime,\n  name: 'Fiji Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const FrenchGuianaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FrenchGuianaTime,\n  name: 'French Guiana Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const FrenchSouthernAndAntarcticTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FrenchSouthernAndAntarcticTime,\n  name: 'French Southern and Antarctic Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const FurtherEasternEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FurtherEasternEuropeanTime,\n  name: 'Further Eastern European Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const GalapagosTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GalapagosTime,\n  name: 'Galapagos Time',\n  offset: TimezoneOffset.UTC_MINUS_6,\n};\n\nexport const GambierIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GambierIslandTime,\n  name: 'Gambier Island Time',\n  offset: TimezoneOffset.UTC_MINUS_9,\n};\n\nexport const GambierIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GambierIslandsTime,\n  name: 'Gambier Islands Time',\n  offset: TimezoneOffset.UTC_MINUS_9,\n};\n\nexport const GeorgiaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GeorgiaStandardTime,\n  name: 'Georgia Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const GilbertIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GilbertIslandTime,\n  name: 'Gilbert Island Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const GreenwichMeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GreenwichMeanTime,\n  name: 'Greenwich Mean Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const GulfStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GulfStandardTime,\n  name: 'Gulf Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const GuyanaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GuyanaTime,\n  name: 'Guyana Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const HawaiiAleutianDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.HawaiiAleutianDaylightTime,\n  name: 'Hawaii-Aleutian Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_9,\n};\n\nexport const HawaiiAleutianStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.HawaiiAleutianStandardTime,\n  name: 'Hawaii-Aleutian Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_10,\n};\n\nexport const HeardAndMcDonaldIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.HeardAndMcDonaldIslandsTime,\n  name: 'Heard and McDonald Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const HongKongTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.HongKongTime,\n  name: 'Hong Kong Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const HovdSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.HovdSummerTime,\n  name: 'Hovd Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const HovdTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.HovdTime,\n  name: 'Hovd Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const IndianOceanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IndianOceanTime,\n  name: 'Indian Ocean Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const IndianStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IndianStandardTime,\n  name: 'Indian Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_5_30,\n};\n\nexport const IndochinaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IndochinaTime,\n  name: 'Indochina Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const InternationalDayLineWestTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.InternationalDayLineWestTime,\n  name: 'International Day Line West Time',\n  offset: TimezoneOffset.UTC_MINUS_12,\n};\n\nexport const IranDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.IranDaylightTime,\n  name: 'Iran Daylight Time',\n  offset: TimezoneOffset.UTC_PLUS_4_30,\n};\n\nexport const IranStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IranStandardTime,\n  name: 'Iran Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_3_30,\n};\n\nexport const IrishStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IrishStandardTime,\n  name: 'Irish Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const IrkutskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IrkutskTime,\n  name: 'Irkutsk Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const IsraelDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.IsraelDaylightTime,\n  name: 'Israel Daylight Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const IsraelStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IsraelStandardTime,\n  name: 'Israel Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const JapanStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.JapanStandardTime,\n  name: 'Japan Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const KaliningradTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KaliningradTime,\n  name: 'Kaliningrad Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const KamchatkaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KamchatkaTime,\n  name: 'Kamchatka Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const KoreaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KoreaStandardTime,\n  name: 'Korea Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const KosraeTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KosraeTime,\n  name: 'Kosrae Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const KrasnoyarskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KrasnoyarskTime,\n  name: 'Krasnoyarsk Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const KyrgyzstanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KyrgyzstanTime,\n  name: 'Kyrgyzstan Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const LineIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.LineIslandsTime,\n  name: 'Line Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_14,\n};\n\nexport const LordHoweStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.LordHoweStandardTime,\n  name: 'Lord Howe Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_10_30,\n};\n\nexport const LordHoweSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.LordHoweSummerTime,\n  name: 'Lord Howe Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const MacquarieIslandStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MacquarieIslandStationTime,\n  name: 'Macquarie Island Station Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const MagadanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MagadanTime,\n  name: 'Magadan Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const MalaysiaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MalaysiaStandardTime,\n  name: 'Malaysia Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const MalaysiaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MalaysiaTime,\n  name: 'Malaysia Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const MaldivesTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MaldivesTime,\n  name: 'Maldives Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const MarquesasIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MarquesasIslandsTime,\n  name: 'Marquesas Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n};\n\nexport const MarshallIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MarshallIslandsTime,\n  name: 'Marshall Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const MauritiusTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MauritiusTime,\n  name: 'Mauritius Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const MawsonStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MawsonStationTime,\n  name: 'Mawson Station Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const MiddleEuropeanSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MiddleEuropeanSummerTime,\n  name: 'Middle European Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const MiddleEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MiddleEuropeanTime,\n  name: 'Middle European Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const MoscowTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MoscowTime,\n  name: 'Moscow Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const MountainDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MountainDaylightTime,\n  name: 'Mountain Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_6,\n};\n\nexport const MountainStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MountainStandardTime,\n  name: 'Mountain Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_7,\n};\n\nexport const MyanmarStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MyanmarStandardTime,\n  name: 'Myanmar Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_6_30,\n};\n\nexport const NepalTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NepalTime,\n  name: 'Nepal Time',\n  offset: TimezoneOffset.UTC_PLUS_5_45,\n};\n\nexport const NauruTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NauruTime,\n  name: 'Nauru Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const NewCaledoniaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NewCaledoniaTime,\n  name: 'New Caledonia Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const NewZealandDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NewZealandDaylightTime,\n  name: 'New Zealand Daylight Time',\n  offset: TimezoneOffset.UTC_PLUS_13,\n};\n\nexport const NewZealandStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NewZealandStandardTime,\n  name: 'New Zealand Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const NewfoundlandDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NewfoundlandDaylightTime,\n  name: 'Newfoundland Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_2_30,\n};\n\nexport const NewfoundlandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n\n  id: Timezones.NewfoundlandTime,\n  name: 'Newfoundland Time',\n  offset: TimezoneOffset.UTC_MINUS_3_30,\n};\n\nexport const NiueTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NiueTime,\n  name: 'Niue Time',\n  offset: TimezoneOffset.UTC_MINUS_11,\n};\n\nexport const NorfolkIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n\n  id: Timezones.NorfolkIslandTime,\n  name: 'Norfolk Island Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const NovosibirskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NovosibirskTime,\n  name: 'Novosibirsk Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const OmskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.OmskTime,\n  name: 'Omsk Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const OralTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.OralTime,\n  name: 'Oral Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const PacificDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PacificDaylightTime,\n  name: 'Pacific Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_7,\n};\n\nexport const PacificStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PacificStandardTime,\n  name: 'Pacific Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_8,\n};\n\nexport const PakistanStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PakistanStandardTime,\n  name: 'Pakistan Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const PalauTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PalauTime,\n  name: 'Palau Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const PapuaNewGuineaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PapuaNewGuineaTime,\n  name: 'Papua New Guinea Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const ParaguaySummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ParaguaySummerTime,\n  name: 'Paraguay Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const ParaguayTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ParaguayTime,\n  name: 'Paraguay Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const PeruTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PeruTime,\n  name: 'Peru Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const PhilippineStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PhilippineStandardTime,\n  name: 'Philippine Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const PhillipineTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PhilippineTime,\n  name: 'Philippine Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const PhoenixIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PhoenixIslandTime,\n  name: 'Phoenix Island Time',\n  offset: TimezoneOffset.UTC_PLUS_13,\n};\n\nexport const PitcairnTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PitcairnTime,\n  name: 'Pitcairn Time',\n  offset: TimezoneOffset.UTC_MINUS_8,\n};\n\nexport const PohnpeiStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PohnpeiStandardTime,\n  name: 'Pohnpei Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const ReunionTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ReunionTime,\n  name: 'Reunion Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const RotheraResearchStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.RotheraResearchStationTime,\n  name: 'Rothera Research Station Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const SaintPierreAndMiquelonDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SaintPierreAndMiquelonDaylightTime,\n  name: 'Saint Pierre and Miquelon Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const SaintPierreAndMiquelonStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SaintPierreAndMiquelonStandardTime,\n  name: 'Saint Pierre and Miquelon Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const SakhalinIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SakhalinIslandTime,\n  name: 'Sakhalin Island Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const SamaraTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SamaraTime,\n  name: 'Samara Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const SamoaDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SamoaDaylightTime,\n  name: 'Samoa Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_10,\n};\n\nexport const SamoaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SamoaStandardTime,\n  name: 'Samoa Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_11,\n};\n\nexport const SeychellesTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SeychellesTime,\n  name: 'Seychelles Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const ShowaStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ShowaStationTime,\n  name: 'Showa Station Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const SingaporeStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SingaporeStandardTime,\n  name: 'Singapore Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const SingaporeTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SingaporeTime,\n  name: 'Singapore Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const SolomonIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SolomonIslandsTime,\n  name: 'Solomon Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const SouthAfricanStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SouthAfricanStandardTime,\n  name: 'South African Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const SouthGeorgiaAndTheSouthSandwichIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SouthGeorgiaAndTheSouthSandwichIslandsTime,\n  name: 'South Georgia and the South Sandwich Islands Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const SrednekolymskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SrednekolymskTime,\n  name: 'Srednekolymsk Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const SriLankaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SriLankaStandardTime,\n  name: 'Sri Lanka Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_5_30,\n};\n\nexport const SurinameTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SurinameTime,\n  name: 'Suriname Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const TahitiTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TahitiTime,\n  name: 'Tahiti Time',\n  offset: TimezoneOffset.UTC_MINUS_10,\n};\n\nexport const TajikistanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TajikistanTime,\n  name: 'Tajikistan Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const ThailandStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ThailandStandardTime,\n  name: 'Thailand Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const TimorLesteTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TimorLesteTime,\n  name: 'Timor-Leste Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const TokelauTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TokelauTime,\n  name: 'Tokelau Time',\n  offset: TimezoneOffset.UTC_PLUS_13,\n};\n\nexport const TongaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TongaTime,\n  name: 'Tonga Time',\n  offset: TimezoneOffset.UTC_PLUS_13,\n};\n\nexport const TurkeyTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TurkeyTime,\n  name: 'Turkey Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const TurkmenistanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TurkmenistanTime,\n  name: 'Turkmenistan Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const TuvaluTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TuvaluTime,\n  name: 'Tuvalu Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const UlaanbaatarStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UlaanbaatarStandardTime,\n  name: 'Ulaanbaatar Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const UlaanbaatarSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UlaanbaatarSummerTime,\n  name: 'Ulaanbaatar Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const UruguayStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UruguayStandardTime,\n  name: 'Uruguay Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const UruguaySummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UruguaySummerTime,\n  name: 'Uruguay Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const UzbekistanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UzbekistanTime,\n  name: 'Uzbekistan Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const VanuatuTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VanuatuTime,\n  name: 'Vanuatu Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const VenezuelaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VenezuelaStandardTime,\n  name: 'Venezuela Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const VladivostokTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VladivostokTime,\n  name: 'Vladivostok Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const VolgogradTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VolgogradTime,\n  name: 'Volgograd Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const VostokStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VostokStationTime,\n  name: 'Vostok Station Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const WakeIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WakeIslandTime,\n  name: 'Wake Island Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const WestAfricaSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestAfricaSummerTime,\n  name: 'West Africa Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const WestAfricaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestAfricaTime,\n  name: 'West Africa Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const WestGreenlandSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestGreenlandSummerTime,\n  name: 'West Greenland Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const WestGreenlandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestGreenlandTime,\n  name: 'West Greenland Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const WestKazakhstanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestKazakhstanTime,\n  name: 'West Kazakhstan Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const WesternEuropeanSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WesternEuropeanSummerTime,\n  name: 'Western European Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const WesternEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WesternEuropeanTime,\n  name: 'Western European Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const WesternIndonesianTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WesternIndonesianTime,\n  name: 'Western Indonesian Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const WesternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WesternStandardTime,\n  name: 'Western Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const YakutskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.YakutskTime,\n  name: 'Yakutsk Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const YekaterinburgTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.YekaterinburgTime,\n  name: 'Yekaterinburg Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n", "export enum Region {\n  Africa = 'Africa',\n  Americas = 'Americas',\n  Asia = 'Asia',\n  Europe = 'Europe',\n  Oceania = 'Oceania',\n  Polar = 'Polar',\n}\n\nexport enum SubRegion {\n  CentralAmerica = 'Central America',\n  EasternAsia = 'Eastern Asia',\n  EasternEurope = 'Eastern Europe',\n  EasternAfrica = 'Eastern Africa',\n  MiddleAfrica = 'Middle Africa',\n  MiddleEast = 'Middle East',\n  NorthernAfrica = 'Northern Africa',\n  NorthernAmerica = 'Northern America',\n  NorthernEurope = 'Northern Europe',\n  Polynesia = 'Polynesia',\n  SouthAmerica = 'South America',\n  SouthernAfrica = 'Southern Africa',\n  SouthernAsia = 'Southern Asia',\n  SouthernEurope = 'Southern Europe',\n  WesternAfrica = 'Western Africa',\n  WesternAsia = 'Western Asia',\n  WesternEurope = 'Western Europe',\n  WesternAustralia = 'Western Australia',\n}\n", "import { CurrencyCode } from '../currency/index.js';\nimport { LocaleCode } from '../locale/index.js';\nimport { TimezoneRegions } from '../time/region.js';\nimport { TimezoneOffset } from '../time/timezone.js';\nimport { Timezones } from '../time/timezones.js';\nimport { CountryCode } from './country.js';\nimport { Country } from './country';\nimport { Region, SubRegion } from './region.js';\n\nexport const Countries: Record<Country['name']['short'], Country> = {\n  Afghanistan: {\n    i18n: {\n      calling_codes: [93],\n      currencies: [CurrencyCode.AfghanistanAfghani],\n      languages: [\n        LocaleCode.Pashto,\n        LocaleCode.Dari,\n        LocaleCode.Turkmen,\n        LocaleCode.Uzbek,\n      ],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_4_30],\n        regions: [TimezoneRegions.AsiaKabul],\n        timezones: [Timezones.AfghanistanTime],\n      },\n    },\n    id: CountryCode.Afghanistan,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDEB',\n        emoji_unicode: 'U+1F1E6 U+1F1EB',\n        svg: 'https://www.countryflags.io/af/flat/64.svg',\n      },\n      tld: ['.af'],\n    },\n    iso: {\n      alpha2: CountryCode.Afghanistan,\n      alpha3: 'AFG',\n      numeric: '004',\n    },\n    name: {\n      alt_spellings: ['AF', 'Af\u0121\u0101nist\u0101n'],\n      demonym: 'Afghan',\n      native: {\n        endonym: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n      },\n      official: 'Islamic Republic of Afghanistan',\n      short: 'Afghanistan',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Afghanistan',\n        [LocaleCode.Albanian]: 'Shqip\u00EBri',\n        [LocaleCode.Amharic]: '\u12A0\u134D\u130B\u1295',\n        [LocaleCode.Arabic]: '\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Basque]: 'Afganist\u00E1n',\n        [LocaleCode.Belarusian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Bengali]: '\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8',\n        [LocaleCode.Berber]: '\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Bhutani]: '\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D',\n        [LocaleCode.Bosnian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Breton]: 'Afganistan',\n        [LocaleCode.Bulgarian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Burmese]: '\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A',\n        [LocaleCode.Catalan]: 'Afganistan',\n        [LocaleCode.Chinese]: '\u963F\u5BCC\u6C57',\n        [LocaleCode.Croatian]: 'Afganistan',\n        [LocaleCode.Czech]: 'Afganistan',\n        [LocaleCode.Danish]: 'Afghanistan',\n        [LocaleCode.Dutch]: 'Afghanistan',\n        [LocaleCode.English]: 'Afghanistan',\n        [LocaleCode.Esperanto]: 'Afganistan',\n        [LocaleCode.Estonian]: 'Afganistan',\n        [LocaleCode.Finnish]: 'Afghanistan',\n        [LocaleCode.French]: 'Afghanistan',\n        [LocaleCode.Frisian]: 'Afghanistan',\n        [LocaleCode.Galician]: 'Afganist\u00E1n',\n        [LocaleCode.Georgian]: '\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8',\n        [LocaleCode.German]: 'Afghanistan',\n        [LocaleCode.Greenlandic]: 'Afghanistan',\n        [LocaleCode.Greek]: '\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD',\n        [LocaleCode.Gujarati]: '\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8',\n        [LocaleCode.Haitian]: 'Afghanistan',\n        [LocaleCode.Hausa]: 'Afghanistan',\n        [LocaleCode.Hebrew]: '\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF',\n        [LocaleCode.Hindi]: '\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928',\n        [LocaleCode.Hungarian]: 'Afganistan',\n        [LocaleCode.Icelandic]: 'Afghanistan',\n        [LocaleCode.Igbo]: 'Afghanistan',\n        [LocaleCode.Indonesian]: 'Afghanistan',\n        [LocaleCode.Irish]: 'Afghanistan',\n        [LocaleCode.Italian]: 'Afghanistan',\n        [LocaleCode.Japanese]: '\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3',\n        [LocaleCode.Javanese]: 'Afghanistan',\n        [LocaleCode.Kannada]: '\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8',\n        [LocaleCode.Kazakh]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780',\n        [LocaleCode.Korean]: '\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4',\n        [LocaleCode.Kurdish]: 'Afghanistan',\n        [LocaleCode.Kyrgyz]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99',\n        [LocaleCode.Latin]: 'Afghanistan',\n        [LocaleCode.Latvian]: 'Afghanistan',\n        [LocaleCode.Lithuanian]: 'Afganistanas',\n        [LocaleCode.Luxembourgish]: 'Afghanistan',\n        [LocaleCode.Macedonian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Malagasy]: 'Afghanistan',\n        [LocaleCode.Malay]: 'Afghanistan',\n        [LocaleCode.Malayalam]: '\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28',\n        [LocaleCode.Maltese]: 'Afghanistan',\n        [LocaleCode.Maori]: 'Afghanistan',\n        [LocaleCode.Marathi]: '\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928',\n        [LocaleCode.Mongolian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Nepali]: '\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928',\n        [LocaleCode.Norwegian]: 'Afghanistan',\n        [LocaleCode.Pashto]: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Persian]: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Polish]: 'Afganistan',\n        [LocaleCode.Portuguese]: 'Afghanistan',\n        [LocaleCode.Punjabi]: 'Afghanistan',\n        [LocaleCode.Romanian]: 'Afghanistan',\n        [LocaleCode.Polish]: 'Afganistan',\n        [LocaleCode.Russian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Samoan]: 'Afghanistan',\n        [LocaleCode.Sanskrit]: '\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928',\n        [LocaleCode.Scots]: 'Afghanistan',\n        [LocaleCode.Serbian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Sesotho]: 'Afghanistan',\n        [LocaleCode.Shona]: 'Afghanistan',\n        [LocaleCode.Sindhi]: 'Afghanistan',\n        [LocaleCode.Sinhala]: '\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0',\n        [LocaleCode.Slovak]: 'Afganistan',\n        [LocaleCode.Slovenian]: 'Afganistan',\n        [LocaleCode.Somali]: 'Afghanistan',\n        [LocaleCode.Spanish]: 'Afganist\u00E1n',\n        [LocaleCode.Sudanese]: 'Afghanistan',\n        [LocaleCode.Swahili]: 'Afghanistan',\n        [LocaleCode.Swedish]: 'Afghanistan',\n        [LocaleCode.Tagalog]: 'Afghanistan',\n        [LocaleCode.Tajik]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Tatar]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Tamil]: '\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD',\n        [LocaleCode.Telugu]: '\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D',\n        [LocaleCode.Thai]: '\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19',\n        [LocaleCode.Tibetan]: '\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D',\n        [LocaleCode.Turkish]: 'Afganistan',\n        [LocaleCode.Ukrainian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Urdu]: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Uzbek]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Vietnamese]: 'Afghanistan',\n        [LocaleCode.Welsh]: 'Afghanistan',\n        [LocaleCode.Xhosa]: 'Afghanistan',\n        [LocaleCode.Yiddish]: 'Afghanistan',\n        [LocaleCode.Yoruba]: 'Afghanistan',\n        [LocaleCode.Zulu]: 'Afghanistan',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Kabul',\n          total: 34100000,\n        },\n      },\n      geography: {\n        area: 652230,\n        region: Region.Asia,\n        sub_region: SubRegion.SouthernAsia,\n      },\n      government: {\n        capital: 'Kabul',\n        type: 'Islamic Emirate',\n      },\n    },\n  },\n  Albania: {\n    i18n: {\n      calling_codes: [355],\n      currencies: [CurrencyCode.AlbaniaLek],\n      languages: [LocaleCode.Albanian, LocaleCode.Greek, LocaleCode.Turkish],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1],\n        regions: [TimezoneRegions.EuropeBrussels],\n        timezones: [Timezones.CentralEuropeanTime],\n      },\n    },\n    id: CountryCode.Albania,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF1',\n        emoji_unicode: 'U+1F1E6 U+1F1F1',\n        svg: 'https://www.countryflags.io/al/flat/64.svg',\n      },\n      tld: ['.al'],\n    },\n    iso: {\n      alpha2: CountryCode.Albania,\n      alpha3: 'ALB',\n      numeric: '008',\n    },\n    name: {\n      alt_spellings: ['AL', 'Shqip\u00EBri', 'Shqip\u00EBria', 'Shqipnia'],\n      demonym: 'Albanian',\n      native: {\n        endonym: 'Shqip\u00EBri',\n      },\n      official: 'Republic of Albania',\n      short: 'Albania',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Albania',\n        [LocaleCode.Albanian]: 'Albania',\n        [LocaleCode.Amharic]: '\u12A0\u120D\u1263\u1295\u12EB',\n        [LocaleCode.Arabic]: '\u0623\u0644\u0628\u0627\u0646\u064A\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Basque]: 'Albania',\n        [LocaleCode.Belarusian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Bengali]: '\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE',\n        [LocaleCode.Berber]: '\u0623\u0644\u0628\u0627\u0646\u064A\u0627',\n        [LocaleCode.Bhutani]: '\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B',\n        [LocaleCode.Bosnian]: 'Albanija',\n        [LocaleCode.Breton]: 'Albania',\n        [LocaleCode.Bulgarian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Burmese]: '\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A',\n        [LocaleCode.Catalan]: 'Alb\u00E0nia',\n        [LocaleCode.Chinese]: '\u963F\u5C14\u5DF4\u5C3C\u4E9A',\n        [LocaleCode.Croatian]: 'Albanija',\n        [LocaleCode.Czech]: 'Alb\u00E1nie',\n        [LocaleCode.Danish]: 'Albanien',\n        [LocaleCode.Dutch]: 'Albani\u00EB',\n        [LocaleCode.English]: 'Albania',\n        [LocaleCode.Esperanto]: 'Albanio',\n        [LocaleCode.Estonian]: 'Albaania',\n        [LocaleCode.Finnish]: 'Albania',\n        [LocaleCode.French]: 'Albanie',\n        [LocaleCode.Frisian]: 'Albani\u00EB',\n        [LocaleCode.Galician]: 'Alb\u00E2nia',\n        [LocaleCode.Georgian]: '\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0',\n        [LocaleCode.German]: 'Albanien',\n        [LocaleCode.Greenlandic]: 'Albania',\n        [LocaleCode.Greek]: '\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1',\n        [LocaleCode.Gujarati]: '\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE',\n        [LocaleCode.Haitian]: 'Albanais',\n        [LocaleCode.Hausa]: 'Albania',\n        [LocaleCode.Hebrew]: '\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E',\n        [LocaleCode.Hungarian]: 'Alb\u00E1nia',\n        [LocaleCode.Icelandic]: 'Alb\u00FAnir',\n        [LocaleCode.Igbo]: 'Albania',\n        [LocaleCode.Indonesian]: 'Albania',\n        [LocaleCode.Irish]: 'Alb\u00E1in',\n        [LocaleCode.Italian]: 'Albania',\n        [LocaleCode.Japanese]: '\u30A2\u30EB\u30D0\u30CB\u30A2',\n        [LocaleCode.Javanese]: 'Albania',\n        [LocaleCode.Kannada]: '\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE',\n        [LocaleCode.Kazakh]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8',\n        [LocaleCode.Korean]: '\uC54C\uBC14\uB2C8\uC544',\n        [LocaleCode.Kurdish]: '\u0622\u0644\u0628\u0627\u0646\u06CC\u0627',\n        [LocaleCode.Kyrgyz]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5',\n        [LocaleCode.Latin]: 'Albania',\n        [LocaleCode.Latvian]: 'Alb\u0101nija',\n        [LocaleCode.Lithuanian]: 'Albanija',\n        [LocaleCode.Luxembourgish]: 'Albani\u00EB',\n        [LocaleCode.Macedonian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430',\n        [LocaleCode.Malagasy]: 'Albania',\n        [LocaleCode.Malay]: 'Albania',\n        [LocaleCode.Malayalam]: '\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E',\n        [LocaleCode.Maltese]: 'Albania',\n        [LocaleCode.Maori]: 'Albania',\n        [LocaleCode.Marathi]: '\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Nepali]: '\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E',\n        [LocaleCode.Norwegian]: 'Albania',\n        [LocaleCode.Pashto]: '\u0627\u0627\u0644\u0628\u0627\u0646\u06CC',\n        [LocaleCode.Persian]: '\u0622\u0644\u0628\u0627\u0646\u06CC',\n        [LocaleCode.Polish]: 'Albania',\n        [LocaleCode.Portuguese]: 'Alb\u00E2nia',\n        [LocaleCode.Punjabi]: '\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06',\n        [LocaleCode.Romanian]: 'Alb\u0103n',\n        [LocaleCode.Russian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Samoan]: 'Albania',\n        [LocaleCode.Sanskrit]: 'Albani',\n        [LocaleCode.Scots]: 'Alb\u00E0inia',\n        [LocaleCode.Serbian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430',\n        [LocaleCode.Sesotho]: 'Albania',\n        [LocaleCode.Shona]: 'Albania',\n        [LocaleCode.Sindhi]: 'Albania',\n        [LocaleCode.Sinhala]: '\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA',\n        [LocaleCode.Slovak]: 'Alb\u00E1nsko',\n        [LocaleCode.Slovenian]: 'Albanija',\n        [LocaleCode.Somali]: 'Albania',\n        [LocaleCode.Spanish]: 'Albania',\n        [LocaleCode.Sudanese]: 'Albania',\n        [LocaleCode.Swahili]: 'Albania',\n        [LocaleCode.Swedish]: 'Albanien',\n        [LocaleCode.Tagalog]: 'Albania',\n        [LocaleCode.Tajik]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Tamil]: '\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Telugu]: '\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35',\n        [LocaleCode.Tibetan]: '\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72',\n        [LocaleCode.Turkish]: 'Albaniye',\n        [LocaleCode.Ukrainian]: '\u0410\u043B\u0431\u0430\u043D\u0456\u044F',\n        [LocaleCode.Urdu]: '\u0622\u0644\u0628\u0627\u0646\u06CC',\n        [LocaleCode.Uzbek]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Vietnamese]: 'Albanie',\n        [LocaleCode.Welsh]: 'Albania',\n        [LocaleCode.Xhosa]: 'Albania',\n        [LocaleCode.Yiddish]: '\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9',\n        [LocaleCode.Yoruba]: 'Albania',\n        [LocaleCode.Zulu]: 'Albania',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Tirana',\n          total: 2853000,\n        },\n      },\n      geography: {\n        area: 28748,\n        region: Region.Europe,\n        sub_region: SubRegion.SouthernEurope,\n      },\n      government: {\n        capital: 'Tirana',\n        type: 'Republic',\n      },\n    },\n  },\n  Algeria: {\n    i18n: {\n      calling_codes: [213],\n      currencies: [CurrencyCode.AlgeriaDinar],\n      languages: [\n        LocaleCode.Arabic,\n        LocaleCode.French,\n        LocaleCode.Berber,\n        LocaleCode.Tamazight,\n      ],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1, TimezoneOffset.UTC_PLUS_2],\n        regions: [TimezoneRegions.AfricaAlgiers],\n        timezones: [Timezones.CentralEuropeanTime],\n      },\n    },\n\n    id: CountryCode.Algeria,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE9\uD83C\uDDFF',\n        emoji_unicode: 'U+1F1E9 U+1F1FF',\n        svg: 'https://www.countryflags.io/dz/flat/64.svg',\n      },\n      tld: ['.dz', '.\u062C\u0632\u0627\u0626\u0631'],\n    },\n    iso: {\n      alpha2: CountryCode.Algeria,\n      alpha3: 'DZA',\n      numeric: '012',\n    },\n    name: {\n      alt_spellings: ['DZ', 'Dzayer', 'Alg\u00E9rie'],\n      demonym: 'Algerian',\n      native: {\n        endonym: '\u0627\u0644\u062C\u0632\u0627\u0626\u0631',\n      },\n      official: \"People's Democratic Republic of Algeria\",\n      short: 'Algeria',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Algerije',\n        [LocaleCode.Albanian]: 'Algeria',\n        [LocaleCode.Amharic]: '\u12A0\u120D\u1300\u122D\u1235',\n        [LocaleCode.Arabic]: '\u0627\u0644\u062C\u0632\u0627\u0626\u0631',\n        [LocaleCode.Armenian]: '\u0531\u056C\u0563\u0578\u0580\u056B\u0561',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Basque]: 'Algeria',\n        [LocaleCode.Belarusian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Bengali]: '\u0986\u09B2\u099C\u09C7\u09B0',\n        [LocaleCode.Berber]: '\u062C\u0632\u0627\u0626\u0631',\n        [LocaleCode.Bhutani]: '\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41',\n        [LocaleCode.Bosnian]: 'Al\u017Eir',\n        [LocaleCode.Breton]: 'Algeria',\n        [LocaleCode.Bulgarian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Burmese]: '\u1021\u102C\u101B\u1015\u103A',\n        [LocaleCode.Catalan]: 'Alg\u00E8ria',\n        [LocaleCode.Chinese]: '\u963F\u5C14\u53CA\u5229\u4E9A',\n        [LocaleCode.Croatian]: 'Al\u017Eir',\n        [LocaleCode.Czech]: 'Al\u017E\u00EDrsko',\n        [LocaleCode.Danish]: 'Algeriet',\n        [LocaleCode.Dutch]: 'Algerije',\n        [LocaleCode.English]: 'Algeria',\n        [LocaleCode.Esperanto]: 'Al\u011Derio',\n        [LocaleCode.Estonian]: 'Al\u017Eira',\n        [LocaleCode.Finnish]: 'Algeria',\n        [LocaleCode.French]: 'Alg\u00E9rie',\n        [LocaleCode.Frisian]: 'Algeri\u00EB',\n        [LocaleCode.Galician]: 'Alxeria',\n        [LocaleCode.Georgian]: '\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8',\n        [LocaleCode.German]: 'Algerien',\n        [LocaleCode.Greenlandic]: 'Algeria',\n        [LocaleCode.Greek]: '\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1',\n        [LocaleCode.Gujarati]: '\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE',\n        [LocaleCode.Haitian]: 'Alg\u00E9rie',\n        [LocaleCode.Hausa]: 'Algeria',\n        [LocaleCode.Hebrew]: '\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4',\n        [LocaleCode.Hindi]: '\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E',\n        [LocaleCode.Hungarian]: 'Alg\u00E1r',\n        [LocaleCode.Icelandic]: 'Alg\u00FAra',\n        [LocaleCode.Igbo]: 'Algeria',\n        [LocaleCode.Indonesian]: 'Aljir',\n        [LocaleCode.Irish]: 'Alg\u00E9rie',\n        [LocaleCode.Italian]: 'Algeria',\n        [LocaleCode.Japanese]: '\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2',\n        [LocaleCode.Javanese]: 'Aljir',\n        [LocaleCode.Kannada]: '\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD',\n        [LocaleCode.Kazakh]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8',\n        [LocaleCode.Korean]: '\uC54C\uC81C\uB9AC',\n        [LocaleCode.Kurdish]: '\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631',\n        [LocaleCode.Kyrgyz]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99',\n        [LocaleCode.Latin]: 'Algeria',\n        [LocaleCode.Latvian]: 'Al\u017E\u012Brija',\n        [LocaleCode.Lithuanian]: 'Al\u017Eyras',\n        [LocaleCode.Luxembourgish]: 'Algeria',\n        [LocaleCode.Macedonian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Malagasy]: 'Alg\u00E9rie',\n        [LocaleCode.Malay]: 'Aljir',\n        [LocaleCode.Malayalam]: '\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B',\n        [LocaleCode.Maltese]: 'Alg\u00E9rie',\n        [LocaleCode.Maori]: 'Algeria',\n        [LocaleCode.Marathi]: '\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Nepali]: '\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E',\n        [LocaleCode.Norwegian]: 'Algeria',\n        [LocaleCode.Pashto]: '\u0627\u0644\u062C\u0632\u0627\u0626\u0631',\n        [LocaleCode.Persian]: '\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628',\n        [LocaleCode.Polish]: 'Algieria',\n        [LocaleCode.Portuguese]: 'Alg\u00E9ria',\n        [LocaleCode.Punjabi]: '\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06',\n        [LocaleCode.Romanian]: 'Algeria',\n        [LocaleCode.Russian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Samoan]: 'Algeria',\n        [LocaleCode.Sanskrit]: '\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E',\n        [LocaleCode.Scots]: 'Algeria',\n        [LocaleCode.Serbian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Sesotho]: 'Algeria',\n        [LocaleCode.Shona]: 'Algeria',\n        [LocaleCode.Sindhi]: 'Algeria',\n        [LocaleCode.Sinhala]: '\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA',\n        [LocaleCode.Slovak]: 'Al\u017E\u00EDrsko',\n        [LocaleCode.Slovenian]: 'Al\u017Eir',\n        [LocaleCode.Somali]: 'Algeria',\n        [LocaleCode.Spanish]: 'Algeria',\n        [LocaleCode.Sudanese]: 'Aljir',\n        [LocaleCode.Swahili]: 'Aljir',\n        [LocaleCode.Swedish]: 'Algeriet',\n        [LocaleCode.Tagalog]: 'Algeria',\n        [LocaleCode.Tajik]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Tamil]: '\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Telugu]: '\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19',\n        [LocaleCode.Tibetan]: '\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72',\n        [LocaleCode.Turkish]: 'Cezayir',\n        [LocaleCode.Ukrainian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Urdu]: '\u0622\u0644\u062C\u06CC\u0631',\n        [LocaleCode.Uzbek]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Vietnamese]: '\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5',\n        [LocaleCode.Welsh]: 'Algeria',\n        [LocaleCode.Xhosa]: 'Algeria',\n        [LocaleCode.Yiddish]: '\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4',\n        [LocaleCode.Yoruba]: 'Algeria',\n        [LocaleCode.Zulu]: 'Algeria',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Oran',\n          total: 37100000,\n        },\n      },\n      geography: {\n        area: 2381740,\n        region: Region.Africa,\n        sub_region: SubRegion.NorthernAfrica,\n      },\n      government: {\n        capital: 'Algiers',\n        type: 'Republic',\n      },\n    },\n  },\n  AmericanSamoa: {\n    i18n: {\n      calling_codes: [1684],\n      currencies: [CurrencyCode.AmericanSamoaTala],\n\n      languages: [LocaleCode.English, LocaleCode.Samoan],\n      tz: {\n        offsets: [TimezoneOffset.UTC_MINUS_11],\n        regions: [TimezoneRegions.PacificSamoa],\n        timezones: [Timezones.SamoaStandardTime],\n      },\n    },\n    id: CountryCode.AmericanSamoa,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF8',\n        emoji_unicode: 'U+1F1E6 U+1F1F8',\n        svg: 'https://www.countryflags.io/as/flat/64.svg',\n      },\n      tld: ['.as'],\n    },\n    iso: {\n      alpha2: CountryCode.AmericanSamoa,\n      alpha3: 'ASM',\n      numeric: '016',\n    },\n    name: {\n      alt_spellings: ['AS', 'Amerika S\u0101moa', 'Amelika S\u0101moa', 'S\u0101moa Amelika'],\n      demonym: 'American Samoan',\n      native: {\n        endonym: 'American Samoa',\n      },\n      official: 'American Samoa',\n      short: 'American Samoa',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Amerikaans Samoa',\n        [LocaleCode.Albanian]: 'Samoa Amerikane',\n        [LocaleCode.Amharic]: '\u1233\u121E\u12A0\u122D',\n        [LocaleCode.Arabic]: '\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629',\n        [LocaleCode.Armenian]: '\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561',\n        [LocaleCode.Azerbaijani]: 'Samoa Amerikana',\n        [LocaleCode.Bashkir]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Basque]: 'Samoa Amerikana',\n        [LocaleCode.Belarusian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Bengali]: '\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE',\n        [LocaleCode.Berber]: '\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629',\n        [LocaleCode.Bhutani]: '\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D',\n        [LocaleCode.Bosnian]: 'Ameri\u010Dka Samoa',\n        [LocaleCode.Breton]: 'Samoa Amerikan',\n        [LocaleCode.Bulgarian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Burmese]: '\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C',\n        [LocaleCode.Catalan]: 'Samoa Americana',\n        [LocaleCode.Chinese]: '\u7F8E\u5C5E\u8428\u6469\u4E9A',\n        [LocaleCode.Croatian]: 'Ameri\u010Dka Samoa',\n        [LocaleCode.Czech]: 'Americk\u00E1 Samoa',\n        [LocaleCode.Danish]: 'Amerikansk Samoa',\n        [LocaleCode.Dutch]: 'Amerikaans Samoa',\n        [LocaleCode.English]: 'American Samoa',\n        [LocaleCode.Esperanto]: 'Samoa Amerika',\n        [LocaleCode.Estonian]: 'Ameerika Samoa',\n        [LocaleCode.Finnish]: 'Amerikka Samoa',\n        [LocaleCode.French]: 'American Samoa',\n        [LocaleCode.Frisian]: 'Amerikaans Samoa',\n        [LocaleCode.Galician]: 'Samoa Americana',\n        [LocaleCode.Georgian]: '\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0',\n        [LocaleCode.German]: 'Amerikanisch-Samoa',\n        [LocaleCode.Greenlandic]: 'Amerikaans Samoa',\n        [LocaleCode.Greek]: '\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1',\n        [LocaleCode.Gujarati]: '\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE',\n        [LocaleCode.Haitian]: 'Amerikaans Samoa',\n        [LocaleCode.Hausa]: 'Amerikaans Samoa',\n        [LocaleCode.Hebrew]: '\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906',\n        [LocaleCode.Hungarian]: 'Amerikai Szamoa',\n        [LocaleCode.Icelandic]: 'Amerikai Szamoa',\n        [LocaleCode.Igbo]: 'Ikina Amerika',\n        [LocaleCode.Indonesian]: 'Samoa Amerika',\n        [LocaleCode.Irish]: 'Samoa Amerikana',\n        [LocaleCode.Italian]: 'Samoa Americane',\n        [LocaleCode.Japanese]: '\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2',\n        [LocaleCode.Javanese]: 'Samoa Amerika',\n        [LocaleCode.Kannada]: '\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86',\n        [LocaleCode.Kazakh]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB',\n        [LocaleCode.Korean]: '\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544',\n        [LocaleCode.Kurdish]: 'Amerikaans Samoa',\n        [LocaleCode.Kyrgyz]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94',\n        [LocaleCode.Latin]: 'Samoa Amerikana',\n        [LocaleCode.Latvian]: 'Amerikas Samoa',\n        [LocaleCode.Lithuanian]: 'Amerikos Samoa',\n        [LocaleCode.Luxembourgish]: 'Amerikaans Samoa',\n        [LocaleCode.Macedonian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Malagasy]: 'Samoa Amerika',\n        [LocaleCode.Malay]: 'Amerika Samo',\n        [LocaleCode.Malayalam]: '\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06',\n        [LocaleCode.Maltese]: 'Samoa Amerika',\n        [LocaleCode.Maori]: 'Samoa Amerika',\n        [LocaleCode.Marathi]: '\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906',\n        [LocaleCode.Mongolian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Nepali]: '\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906',\n        [LocaleCode.Norwegian]: 'Amerikansk Samoa',\n        [LocaleCode.Pashto]: '\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627',\n        [LocaleCode.Persian]: '\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627',\n        [LocaleCode.Polish]: 'Samoa Ameryka\u0144skie',\n        [LocaleCode.Portuguese]: 'Samoa Americana',\n        [LocaleCode.Punjabi]: '\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06',\n        [LocaleCode.Romanian]: 'Samoa americane',\n        [LocaleCode.Russian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Samoan]: 'Samoa Amerika',\n        [LocaleCode.Sanskrit]: '\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906',\n        [LocaleCode.Scots]: 'Amerikaans Samoa',\n        [LocaleCode.Serbian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Sesotho]: 'Amerikaans Samoa',\n        [LocaleCode.Shona]: 'Amerikaans Samoa',\n        [LocaleCode.Sindhi]: 'Amerikaans Samoa',\n        [LocaleCode.Sinhala]: '\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0',\n        [LocaleCode.Slovak]: 'Amerikaans Samoa',\n        [LocaleCode.Slovenian]: 'Amerikaans Samoa',\n        [LocaleCode.Somali]: 'Amerikaans Samoa',\n        [LocaleCode.Spanish]: 'Samoa Americana',\n        [LocaleCode.Sudanese]: 'Amerikaans Samoa',\n        [LocaleCode.Swahili]: 'Amerikaans Samoa',\n        [LocaleCode.Swedish]: 'Amerikansk Samoa',\n        [LocaleCode.Tagalog]: 'Amerikaans Samoa',\n        [LocaleCode.Tajik]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430',\n        [LocaleCode.Tamil]: '\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430',\n        [LocaleCode.Telugu]: '\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E',\n        [LocaleCode.Thai]: '\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32',\n        [LocaleCode.Tibetan]: '\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40',\n        [LocaleCode.Turkish]: 'Amerikan Samoas\u0131',\n        [LocaleCode.Ukrainian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Urdu]: '\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627',\n        [LocaleCode.Uzbek]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430',\n        [LocaleCode.Vietnamese]: 'Amerikaans Samoa',\n        [LocaleCode.Welsh]: 'Amerikaans Samoa',\n        [LocaleCode.Xhosa]: 'Amerikaans Samoa',\n        [LocaleCode.Yiddish]: 'Amerikaans Samoa',\n        [LocaleCode.Yoruba]: 'Amerikaans Samoa',\n        [LocaleCode.Zulu]: 'Amerikaans Samoa',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Pago Pago',\n          total: 558000,\n        },\n      },\n      geography: {\n        area: 199,\n        region: Region.Oceania,\n        sub_region: SubRegion.Polynesia,\n      },\n      government: {\n        capital: 'Pago Pago',\n        type: 'Nonmetropolitan Territory of the US',\n      },\n    },\n  },\n  Andorra: {\n    i18n: {\n      calling_codes: [376],\n      currencies: [CurrencyCode.Euro],\n      languages: [LocaleCode.Catalan, LocaleCode.Spanish],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1, TimezoneOffset.UTC_PLUS_2],\n        regions: [TimezoneRegions.EuropeAndorra],\n        timezones: [Timezones.CentralEuropeanTime],\n      },\n    },\n    id: CountryCode.Andorra,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF4',\n        emoji_unicode: 'U+1F1E6 U+1F1F4',\n        svg: 'https://www.countryflags.io/ad/flat/64.svg',\n      },\n      tld: ['.ad'],\n    },\n    iso: {\n      alpha2: CountryCode.Andorra,\n      alpha3: 'AND',\n      numeric: '020',\n    },\n    name: {\n      alt_spellings: ['AD', 'Principality of Andorra', \"Principat d'Andorra\"],\n      demonym: 'Andorran',\n      native: {\n        endonym: 'Andorra',\n      },\n      official: 'Principality of Andorra',\n      short: 'Andorra',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Andorra',\n        [LocaleCode.Albanian]: 'Andorra',\n        [LocaleCode.Amharic]: '\u12A0\u1295\u12F6\u122B',\n        [LocaleCode.Arabic]: '\u0623\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584',\n        [LocaleCode.Azerbaijani]: 'Andorra',\n        [LocaleCode.Bashkir]: '\u0410\u043D\u0434\u043E\u0440\u0430',\n        [LocaleCode.Basque]: 'Andorra',\n        [LocaleCode.Belarusian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Bengali]: '\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE',\n        [LocaleCode.Berber]: '\u0623\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Bhutani]: '\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B',\n        [LocaleCode.Bosnian]: 'Andora',\n        [LocaleCode.Breton]: 'Andorra',\n        [LocaleCode.Bulgarian]: '\u0410\u043D\u0434\u043E\u0440\u0430',\n        [LocaleCode.Burmese]: '\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038',\n        [LocaleCode.Catalan]: 'Andorra',\n        [LocaleCode.Chinese]: '\u5B89\u9053\u5C14',\n        [LocaleCode.Croatian]: 'Andora',\n        [LocaleCode.Czech]: 'Andorra',\n        [LocaleCode.Danish]: 'Andorra',\n        [LocaleCode.Dutch]: 'Andorra',\n        [LocaleCode.English]: 'Andorra',\n        [LocaleCode.Esperanto]: 'Andora',\n        [LocaleCode.Estonian]: 'Andorra',\n        [LocaleCode.Finnish]: 'Andorra',\n        [LocaleCode.French]: 'Andorra',\n        [LocaleCode.Frisian]: 'Andorra',\n        [LocaleCode.Galician]: 'Andorra',\n        [LocaleCode.Georgian]: '\u12A0\u1295\u12F6\u122B',\n        [LocaleCode.German]: 'Andorra',\n        [LocaleCode.Greek]: '\u0391\u03BD\u03B4\u03CC\u03C1\u03B1',\n        [LocaleCode.Hebrew]: '\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Hungarian]: 'Andorra',\n        [LocaleCode.Icelandic]: 'Andorra',\n        [LocaleCode.Igbo]: 'Andorra',\n        [LocaleCode.Indonesian]: 'Andorra',\n        [LocaleCode.Irish]: 'Andorra',\n        [LocaleCode.Italian]: 'Andorra',\n        [LocaleCode.Japanese]: '\u30A2\u30F3\u30C9\u30E9',\n        [LocaleCode.Javanese]: 'Andorra',\n        [LocaleCode.Kannada]: '\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD',\n        [LocaleCode.Kazakh]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Khmer]: '\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6',\n        [LocaleCode.Korean]: '\uC548\uB3C4\uB77C',\n        [LocaleCode.Kurdish]: 'Andorra',\n        [LocaleCode.Kyrgyz]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Lao]: '\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2',\n        [LocaleCode.Latin]: 'Andorra',\n        [LocaleCode.Latvian]: 'Andora',\n        [LocaleCode.Lithuanian]: 'Andora',\n        [LocaleCode.Luxembourgish]: 'Andorra',\n        [LocaleCode.Macedonian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Malagasy]: 'Andorra',\n        [LocaleCode.Malay]: 'Andorra',\n        [LocaleCode.Malayalam]: '\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D',\n        [LocaleCode.Maltese]: 'Andorra',\n        [LocaleCode.Maori]: 'Andorra',\n        [LocaleCode.Marathi]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Nepali]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Norwegian]: 'Andorra',\n        [LocaleCode.Pashto]: '\u0622\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Persian]: '\u0622\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Polish]: 'Andora',\n        [LocaleCode.Portuguese]: 'Andorra',\n        [LocaleCode.Punjabi]: '\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E',\n        [LocaleCode.Romanian]: 'Andorra',\n        [LocaleCode.Russian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Samoan]: 'Andorra',\n        [LocaleCode.Sanskrit]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Scots]: 'Andorra',\n        [LocaleCode.Serbian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Sesotho]: 'Andorra',\n        [LocaleCode.Shona]: 'Andorra',\n        [LocaleCode.Sindhi]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Sinhala]: '\u0D86\u0DB1\u0DCA\u0DAF\u0DDA',\n        [LocaleCode.Slovak]: 'Andorra',\n        [LocaleCode.Slovenian]: 'Andora',\n        [LocaleCode.Somali]: 'Andorra',\n        [LocaleCode.Spanish]: 'Andorra',\n        [LocaleCode.Sudanese]: 'Andorra',\n        [LocaleCode.Swahili]: 'Andorra',\n        [LocaleCode.Swedish]: 'Andorra',\n        [LocaleCode.Tagalog]: 'Andorra',\n        [LocaleCode.Tajik]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Tamil]: '\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Telugu]: '\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32',\n        [LocaleCode.Tibetan]: '\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B',\n        [LocaleCode.Turkish]: 'Andora',\n        [LocaleCode.Ukrainian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Urdu]: '\u0622\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Uzbek]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Vietnamese]: 'Andorra',\n        [LocaleCode.Welsh]: 'Andorra',\n        [LocaleCode.Xhosa]: 'Andorra',\n        [LocaleCode.Yiddish]: '\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4',\n        [LocaleCode.Yoruba]: 'Andorra',\n        [LocaleCode.Zulu]: 'Andorra',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Andorra la Vella',\n          total: 78000,\n        },\n      },\n      geography: {\n        area: 468,\n        region: Region.Europe,\n        sub_region: SubRegion.SouthernEurope,\n      },\n      government: {\n        capital: 'Andorra la Vella',\n        type: 'Constitutional Monarchy',\n      },\n    },\n  },\n  Angola: {\n    i18n: {\n      calling_codes: [244],\n      currencies: [CurrencyCode.AngolaKwanza],\n      languages: [\n        LocaleCode.Portuguese,\n        LocaleCode.Spanish,\n        LocaleCode.French,\n        LocaleCode.Italian,\n        LocaleCode.German,\n        LocaleCode.English,\n      ],\n      tz: {\n        offsets: [\n          TimezoneOffset.UTC_0,\n          TimezoneOffset.UTC_PLUS_1,\n          TimezoneOffset.UTC_PLUS_2,\n        ],\n        regions: [TimezoneRegions.AfricaLuanda],\n        timezones: [Timezones.WestAfricaTime],\n      },\n    },\n    id: CountryCode.Angola,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDEC',\n        emoji_unicode: 'U+1F1E6 U+1F1EC',\n        svg: 'https://www.countryflags.io/ao/flat/64.svg',\n      },\n      tld: ['.ao'],\n    },\n    iso: {\n      alpha2: CountryCode.Angola,\n      alpha3: 'AGO',\n      numeric: '024',\n    },\n    name: {\n      alt_spellings: ['AO', 'Rep\u00FAblica de Angola', '\u0281\u025Bpublika de an'],\n      demonym: 'Angolan',\n      native: {\n        endonym: 'Angola',\n      },\n      official: 'Republic of Angola',\n      short: 'Angola',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Angola',\n        [LocaleCode.Albanian]: 'Ang\u00F2la',\n        [LocaleCode.Amharic]: '\u12A0\u1295\u130E\u120A\u12EB',\n        [LocaleCode.Arabic]: '\u0623\u0646\u063A\u0648\u0644\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561',\n        [LocaleCode.Azerbaijani]: 'Ang\u0259l',\n        [LocaleCode.Bashkir]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Basque]: 'Angola',\n        [LocaleCode.Belarusian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Bengali]: '\u0985\u0999\u09CD\u0997\u09B2\u09BE',\n        [LocaleCode.Berber]: 'Angola',\n        [LocaleCode.Bhutani]: '\u0F60\u0F56\u0FB2\u0F74\u0F42',\n        [LocaleCode.Bosnian]: 'Angola',\n        [LocaleCode.Breton]: 'Angola',\n        [LocaleCode.Bulgarian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Burmese]: '\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A',\n        [LocaleCode.Catalan]: 'Angola',\n        [LocaleCode.Chinese]: '\u5B89\u54E5\u62C9',\n        [LocaleCode.Croatian]: 'Angola',\n        [LocaleCode.Czech]: 'Angola',\n        [LocaleCode.Danish]: 'Angola',\n        [LocaleCode.Dutch]: 'Angola',\n        [LocaleCode.English]: 'Angola',\n        [LocaleCode.Esperanto]: 'Angolo',\n        [LocaleCode.Estonian]: 'Angola',\n        [LocaleCode.Finnish]: 'Angola',\n        [LocaleCode.French]: 'Angola',\n        [LocaleCode.Frisian]: 'Angola',\n        [LocaleCode.Galician]: 'Angola',\n        [LocaleCode.Georgian]: '\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0',\n        [LocaleCode.German]: 'Angola',\n        [LocaleCode.Greenlandic]: 'Angola',\n        [LocaleCode.Greek]: '\u0391\u03B3\u03BA\u03CC\u03BB\u03B1',\n        [LocaleCode.Gujarati]: '\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE',\n        [LocaleCode.Haitian]: 'Angola',\n        [LocaleCode.Hausa]: 'Angola',\n        [LocaleCode.Hebrew]: '\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Hungarian]: 'Angola',\n        [LocaleCode.Icelandic]: 'Angola',\n        [LocaleCode.Igbo]: 'Angola',\n        [LocaleCode.Indonesian]: 'Angola',\n        [LocaleCode.Irish]: 'Angola',\n        [LocaleCode.Italian]: 'Angola',\n        [LocaleCode.Japanese]: '\u30A2\u30F3\u30B4\u30E9',\n        [LocaleCode.Javanese]: 'Anggol',\n        [LocaleCode.Kannada]: '\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE',\n        [LocaleCode.Kazakh]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Khmer]: '\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F',\n        [LocaleCode.Korean]: '\uC559\uACE8\uB77C',\n        [LocaleCode.Kurdish]: 'Angola',\n        [LocaleCode.Kyrgyz]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Lao]: '\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2',\n        [LocaleCode.Latin]: 'Angola',\n        [LocaleCode.Latvian]: 'Angola',\n        [LocaleCode.Lithuanian]: 'Angola',\n        [LocaleCode.Luxembourgish]: 'Angola',\n        [LocaleCode.Macedonian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Malagasy]: 'Angola',\n        [LocaleCode.Malay]: 'Angola',\n        [LocaleCode.Malayalam]: '\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E',\n        [LocaleCode.Maltese]: 'Angola',\n        [LocaleCode.Maori]: 'Angola',\n        [LocaleCode.Marathi]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Nepali]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Norwegian]: 'Angola',\n        [LocaleCode.Pashto]: '\u0627\u0646\u06AB\u0648\u0644\u0627',\n        [LocaleCode.Persian]: '\u0622\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Polish]: 'Angola',\n        [LocaleCode.Portuguese]: 'Angola',\n        [LocaleCode.Punjabi]: '\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E',\n        [LocaleCode.Romanian]: 'Angole',\n        [LocaleCode.Russian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Samoan]: 'Angola',\n        [LocaleCode.Sanskrit]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Scots]: 'Angola',\n        [LocaleCode.Serbian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Sesotho]: 'Angola',\n        [LocaleCode.Shona]: 'Angola',\n        [LocaleCode.Sindhi]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Sinhala]: '\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0',\n        [LocaleCode.Slovak]: 'Angola',\n        [LocaleCode.Slovenian]: 'Angola',\n        [LocaleCode.Somali]: 'Angola',\n        [LocaleCode.Spanish]: 'Angola',\n        [LocaleCode.Sudanese]: 'Angola',\n        [LocaleCode.Swahili]: 'Angola',\n        [LocaleCode.Swedish]: 'Angola',\n        [LocaleCode.Tagalog]: 'Angola',\n        [LocaleCode.Tajik]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Tamil]: '\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Telugu]: '\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19',\n        [LocaleCode.Tibetan]: '\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B',\n        [LocaleCode.Turkish]: 'Angola',\n        [LocaleCode.Ukrainian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Urdu]: '\u0627\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Uzbek]: 'Angola',\n        [LocaleCode.Vietnamese]: 'Angola',\n        [LocaleCode.Xhosa]: 'Angola',\n        [LocaleCode.Welsh]: 'Angola',\n        [LocaleCode.Yiddish]: '\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4',\n        [LocaleCode.Yoruba]: 'Angola',\n        [LocaleCode.Zulu]: 'Angola',\n      },\n    },\n  },\n  Anguilla: {\n    i18n: {\n      calling_codes: [1264],\n      currencies: [\n        CurrencyCode.DominicaDollar,\n        CurrencyCode.EastCaribbeanDollar,\n        CurrencyCode.Euro,\n        CurrencyCode.UnitedStatesDollar,\n        CurrencyCode.BritishPound,\n      ],\n      languages: [LocaleCode.English, LocaleCode.Spanish],\n      tz: {\n        offsets: [TimezoneOffset.UTC_MINUS_4],\n        regions: [TimezoneRegions.AmericaAnguilla],\n        timezones: [Timezones.AtlanticStandardTime],\n      },\n    },\n    id: CountryCode.Anguilla,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDEC',\n        emoji_unicode: 'U+1F1E6 U+1F1EC',\n        svg: 'https://www.countryflags.io/ai/flat/64.svg',\n      },\n      tld: ['.ai'],\n    },\n    iso: {\n      alpha2: CountryCode.Anguilla,\n      alpha3: 'AIA',\n      numeric: '660',\n    },\n    name: {\n      alt_spellings: ['AI'],\n      demonym: 'Anguillian',\n      native: {\n        endonym: 'Anguilla',\n      },\n      official: 'Anguilla',\n      short: 'Anguilla',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Anguilla',\n        [LocaleCode.Albanian]: 'Anguilla',\n        [LocaleCode.Amharic]: '\u12A0\u1295\u1309\u120B',\n        [LocaleCode.Arabic]: '\u0623\u0646\u063A\u0648\u064A\u0644\u0627',\n        [LocaleCode.Armenian]: '\u0531\u0576\u0563\u056B\u056C\u0561',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Basque]: 'Angila',\n        [LocaleCode.Belarusian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Bengali]: '\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE',\n        [LocaleCode.Berber]: '\u0623\u0646\u063A\u0648\u064A\u0644\u0627',\n        [LocaleCode.Bhutani]: '\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B',\n        [LocaleCode.Bosnian]: 'Angila',\n        [LocaleCode.Breton]: 'Angila',\n        [LocaleCode.Bulgarian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Burmese]: '\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A',\n        [LocaleCode.Catalan]: 'Angilla',\n        [LocaleCode.Chinese]: '\u5B89\u572D\u62C9',\n        [LocaleCode.Croatian]: 'Angila',\n        [LocaleCode.Czech]: 'Anguilla',\n        [LocaleCode.Danish]: 'Anguilla',\n        [LocaleCode.Dutch]: 'Anguilla',\n        [LocaleCode.English]: 'Anguilla',\n        [LocaleCode.Esperanto]: 'Angila',\n        [LocaleCode.Estonian]: 'Anguilla',\n        [LocaleCode.Finnish]: 'Anguilla',\n        [LocaleCode.French]: 'Anguilla',\n        [LocaleCode.Frisian]: 'Angila',\n        [LocaleCode.Galician]: 'Anguilla',\n        [LocaleCode.Georgian]: '\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0',\n        [LocaleCode.German]: 'Anguilla',\n        [LocaleCode.Greenlandic]: 'Anguilla',\n        [LocaleCode.Greek]: '\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC',\n        [LocaleCode.Gujarati]: '\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE',\n        [LocaleCode.Haitian]: 'Anguilla',\n        [LocaleCode.Hausa]: 'Anguilla',\n        [LocaleCode.Hebrew]: '\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Hungarian]: 'Anguilla',\n        [LocaleCode.Icelandic]: 'Anguilla',\n        [LocaleCode.Igbo]: 'Anguilla',\n        [LocaleCode.Indonesian]: 'Anguilla',\n        [LocaleCode.Irish]: 'Anguilla',\n        [LocaleCode.Italian]: 'Anguilla',\n        [LocaleCode.Japanese]: '\u30A2\u30F3\u30AE\u30E9',\n        [LocaleCode.Javanese]: 'Anguilla',\n        [LocaleCode.Kannada]: '\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE',\n        [LocaleCode.Kazakh]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Khmer]: '\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798',\n        [LocaleCode.Korean]: '\uC575\uADC8\uB77C',\n        [LocaleCode.Kurdish]: 'Anguilla',\n        [LocaleCode.Kyrgyz]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Lao]: '\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3',\n        [LocaleCode.Latin]: 'Anguilla',\n        [LocaleCode.Latvian]: 'Anguilla',\n        [LocaleCode.Lithuanian]: 'Anguilla',\n        [LocaleCode.Luxembourgish]: 'Angilla',\n        [LocaleCode.Macedonian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Malagasy]: 'Angila',\n        [LocaleCode.Malay]: 'Anguilla',\n        [LocaleCode.Malayalam]: '\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E',\n        [LocaleCode.Maltese]: 'Anguilla',\n        [LocaleCode.Maori]: 'Anguilla',\n        [LocaleCode.Marathi]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Nepali]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Norwegian]: 'Anguilla',\n        [LocaleCode.Pashto]: '\u0622\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Persian]: '\u0622\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Polish]: 'Anguilla',\n        [LocaleCode.Portuguese]: 'Anguilla',\n        [LocaleCode.Punjabi]: '\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E',\n        [LocaleCode.Romanian]: 'Anguilla',\n        [LocaleCode.Russian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Samoan]: 'Anguilla',\n        [LocaleCode.Sanskrit]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Scots]: 'Anguilla',\n        [LocaleCode.Serbian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Sesotho]: 'Anguilla',\n        [LocaleCode.Shona]: 'Anguilla',\n        [LocaleCode.Sindhi]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Sinhala]: '\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0',\n        [LocaleCode.Slovak]: 'Anguilla',\n        [LocaleCode.Slovenian]: 'Anguilla',\n        [LocaleCode.Somali]: 'Anguilla',\n        [LocaleCode.Spanish]: 'Anguilla',\n        [LocaleCode.Sudanese]: 'Anguilla',\n        [LocaleCode.Swahili]: 'Anguilla',\n        [LocaleCode.Swedish]: 'Anguilla',\n        [LocaleCode.Tagalog]: 'Anguilla',\n        [LocaleCode.Tajik]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Tamil]: '\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Telugu]: '\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32',\n        [LocaleCode.Tibetan]: '\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B',\n        [LocaleCode.Turkish]: 'Anguilla',\n        [LocaleCode.Ukrainian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Urdu]: '\u0622\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Uzbek]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Vietnamese]: 'Anguilla',\n        [LocaleCode.Welsh]: 'Anguilla',\n        [LocaleCode.Xhosa]: 'Anguilla',\n        [LocaleCode.Yiddish]: 'Anguilla',\n        [LocaleCode.Yoruba]: 'Anguilla',\n        [LocaleCode.Zulu]: 'Anguilla',\n      },\n    },\n  },\n  Antarctica: {\n    i18n: {\n      calling_codes: [672],\n      currencies: [CurrencyCode.UnitedStatesDollar, CurrencyCode.Euro],\n      languages: [\n        LocaleCode.English,\n        LocaleCode.Spanish,\n        LocaleCode.French,\n        LocaleCode.Portuguese,\n        LocaleCode.Italian,\n        LocaleCode.Dutch,\n        LocaleCode.German,\n        LocaleCode.Swedish,\n        LocaleCode.Norwegian,\n        LocaleCode.Danish,\n        LocaleCode.Finnish,\n      ],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1, TimezoneOffset.UTC_PLUS_2],\n        regions: [\n          TimezoneRegions.AntarcticaCasey,\n          TimezoneRegions.AntarcticaDavis,\n          TimezoneRegions.AntarcticaMcMurdo,\n          TimezoneRegions.AntarcticaPalmer,\n          TimezoneRegions.AntarcticaRothera,\n        ],\n        timezones: [\n          Timezones.AtlanticStandardTime,\n          Timezones.CentralTime,\n          Timezones.EasternTime,\n          Timezones.AtlanticStandardTime,\n          Timezones.AzoresStandardTime,\n          Timezones.NewfoundlandStandardTime,\n        ],\n      },\n    },\n    id: CountryCode.Antarctica,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF6',\n        emoji_unicode: 'U+1F1E6 U+1F1F6',\n        svg: 'https://www.countryflags.io/aq/flat/64.svg',\n      },\n      tld: ['.aq'],\n    },\n    iso: {\n      alpha2: CountryCode.Antarctica,\n      alpha3: 'ATA',\n      numeric: '010',\n    },\n    name: {\n      alt_spellings: ['AQ'],\n      demonym: 'Antarctican',\n      native: {\n        endonym: 'Antarctica',\n      },\n      official: 'Antarctica',\n      short: 'Antarctica',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Antarctica',\n        [LocaleCode.Albanian]: 'Antarktika',\n        [LocaleCode.Amharic]: '\u12A0\u1295\u1272\u120D\u12AB\u1293',\n        [LocaleCode.Arabic]: '\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Basque]: 'Antarktika',\n        [LocaleCode.Belarusian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Bengali]: '\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0',\n        [LocaleCode.Berber]: '\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627',\n        [LocaleCode.Bhutani]: '\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B',\n        [LocaleCode.Bosnian]: 'Antarktika',\n        [LocaleCode.Breton]: 'Antarktika',\n        [LocaleCode.Bulgarian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Burmese]: '\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038',\n        [LocaleCode.Catalan]: 'Ant\u00E0rtida',\n        [LocaleCode.Chinese]: '\u5357\u6781\u6D32',\n        [LocaleCode.Croatian]: 'Antarktika',\n        [LocaleCode.Czech]: 'Antarktida',\n        [LocaleCode.Danish]: 'Antarktis',\n        [LocaleCode.Dutch]: 'Antarctica',\n        [LocaleCode.English]: 'Antarctica',\n        [LocaleCode.Esperanto]: 'Antarktika',\n        [LocaleCode.Estonian]: 'Antarktika',\n        [LocaleCode.Finnish]: 'Antarktis',\n        [LocaleCode.French]: 'Antarctica',\n        [LocaleCode.Frisian]: 'Antarktis',\n        [LocaleCode.Galician]: 'Ant\u00E1rtida',\n        [LocaleCode.Georgian]: '\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0',\n        [LocaleCode.German]: 'Antarktis',\n        [LocaleCode.Greenlandic]: 'Antarktis',\n        [LocaleCode.Greek]: '\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE',\n        [LocaleCode.Gujarati]: '\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0',\n        [LocaleCode.Haitian]: 'Antarctica',\n        [LocaleCode.Hausa]: 'Antarktika',\n        [LocaleCode.Hebrew]: '\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930',\n        [LocaleCode.Hungarian]: 'Antarktika',\n        [LocaleCode.Icelandic]: 'Antarktis',\n        [LocaleCode.Igbo]: 'Antarktika',\n        [LocaleCode.Indonesian]: 'Antarktika',\n        [LocaleCode.Irish]: 'Antarktika',\n        [LocaleCode.Italian]: 'Antartide',\n        [LocaleCode.Japanese]: '\u5357\u6975',\n        [LocaleCode.Javanese]: 'Antarktika',\n        [LocaleCode.Kannada]: '\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF',\n        [LocaleCode.Kazakh]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Khmer]: '\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799',\n        [LocaleCode.Korean]: '\uC564\uD2F0\uCE74\uD1A0\uB2C9',\n        [LocaleCode.Kurdish]: 'Antarktika',\n        [LocaleCode.Kyrgyz]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Lao]: '\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0',\n        [LocaleCode.Latin]: 'Antarctica',\n        [LocaleCode.Latvian]: 'Antarktika',\n        [LocaleCode.Lithuanian]: 'Antarktis',\n        [LocaleCode.Luxembourgish]: 'Antarktis',\n        [LocaleCode.Macedonian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Malagasy]: 'Antarctica',\n        [LocaleCode.Malay]: 'Antarktika',\n        [LocaleCode.Malayalam]: '\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F',\n        [LocaleCode.Maltese]: 'Antarktika',\n        [LocaleCode.Maori]: 'Antarktika',\n        [LocaleCode.Marathi]: '\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Nepali]: '\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E',\n        [LocaleCode.Norwegian]: 'Antarktis',\n        [LocaleCode.Pashto]: '\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627',\n        [LocaleCode.Persian]: '\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627',\n        [LocaleCode.Polish]: 'Antarktyka',\n        [LocaleCode.Portuguese]: 'Ant\u00E1rtida',\n        [LocaleCode.Punjabi]: '\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E',\n        [LocaleCode.Romanian]: 'Antarctica',\n        [LocaleCode.Russian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Samoan]: 'Antarktika',\n        [LocaleCode.Sanskrit]: '\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E',\n        [LocaleCode.Scots]: 'Antarktika',\n        [LocaleCode.Serbian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Sesotho]: 'Antarktika',\n        [LocaleCode.Shona]: 'Antarktika',\n        [LocaleCode.Sindhi]: 'Antarktika',\n        [LocaleCode.Sinhala]: '\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0',\n        [LocaleCode.Slovak]: 'Antarktika',\n        [LocaleCode.Slovenian]: 'Antarktika',\n        [LocaleCode.Somali]: 'Antarktika',\n        [LocaleCode.Spanish]: 'Ant\u00E1rtida',\n        [LocaleCode.Sudanese]: 'Antarktika',\n        [LocaleCode.Swahili]: 'Antarktika',\n        [LocaleCode.Swedish]: 'Antarktis',\n        [LocaleCode.Tagalog]: 'Antarktika',\n        [LocaleCode.Tajik]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Tamil]: '\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD',\n        [LocaleCode.Tatar]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Telugu]: '\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E',\n        [LocaleCode.Thai]: '\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32',\n        [LocaleCode.Tibetan]: '\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72',\n        [LocaleCode.Turkish]: 'Antarktika',\n        [LocaleCode.Ukrainian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Urdu]: '\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627',\n        [LocaleCode.Uzbek]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Vietnamese]: '\u0110\u1EA5t Antarktik',\n        [LocaleCode.Welsh]: 'Antarktika',\n        [LocaleCode.Xhosa]: 'Antarktika',\n        [LocaleCode.Yiddish]: 'Antarktika',\n        [LocaleCode.Yoruba]: 'Antarktika',\n        [LocaleCode.Zulu]: 'Antarktika',\n      },\n    },\n  },\n  Armenia: {\n    i18n: {\n      calling_codes: [374],\n      currencies: [CurrencyCode.ArmeniaDram],\n      languages: [LocaleCode.Armenian],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_4],\n        regions: [TimezoneRegions.AsiaJakarta],\n        timezones: [Timezones.ArmeniaTime],\n      },\n    },\n    id: CountryCode.Armenia,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF2',\n        emoji_unicode: 'U+1F1E6 U+1F1F2',\n        svg: 'https://www.countryflags.io/am/flat/64.svg',\n      },\n      tld: ['.am'],\n    },\n    iso: {\n      alpha2: CountryCode.Armenia,\n      alpha3: 'ARM',\n      numeric: '051',\n    },\n    name: {\n      alt_spellings: ['AM', 'Hayastan', 'Republic of Armenia', '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576'],\n      demonym: 'Armenian',\n      native: {\n        endonym: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576',\n      },\n      official: 'Republic of Armenia',\n      short: 'Armenia',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Armeni\u00EB',\n        [LocaleCode.Albanian]: 'Armenia',\n        [LocaleCode.Amharic]: '\u12A0\u121B\u122D\u129B',\n        [LocaleCode.Arabic]: '\u0623\u0631\u0645\u064A\u0646\u064A\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Basque]: 'Arm\u00E9nia',\n        [LocaleCode.Belarusian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Bengali]: '\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF',\n        [LocaleCode.Berber]: '\u0623\u0631\u0645\u064A\u0646\u064A\u0627',\n        [LocaleCode.Bhutani]: '\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42',\n        [LocaleCode.Bosnian]: 'Armenija',\n        [LocaleCode.Breton]: 'Armeni\u00EB',\n        [LocaleCode.Bulgarian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Burmese]: '\u1021\u102C\u1019\u1010\u102D\u1010\u1039',\n        [LocaleCode.Catalan]: 'Arm\u00E8nia',\n        [LocaleCode.Chinese]: '\u4E9A\u7F8E\u5C3C\u4E9A',\n        [LocaleCode.Croatian]: 'Armenija',\n        [LocaleCode.Czech]: 'Arm\u00E9nie',\n        [LocaleCode.Danish]: 'Armenien',\n        [LocaleCode.Dutch]: 'Armeni\u00EB',\n        [LocaleCode.English]: 'Armenia',\n        [LocaleCode.Esperanto]: 'Armenia',\n        [LocaleCode.Estonian]: 'Armeenia',\n        [LocaleCode.Finnish]: 'Armenia',\n        [LocaleCode.French]: 'Armenia',\n        [LocaleCode.Frisian]: 'Armeenia',\n        [LocaleCode.Galician]: 'Arm\u00E9nia',\n        [LocaleCode.Georgian]: '\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8',\n        [LocaleCode.German]: 'Armenien',\n        [LocaleCode.Greenlandic]: 'Armenia',\n        [LocaleCode.Greek]: '\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1',\n        [LocaleCode.Gujarati]: '\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF',\n        [LocaleCode.Haitian]: 'Armenia',\n        [LocaleCode.Hausa]: 'Armenia',\n        [LocaleCode.Hebrew]: '\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E',\n        [LocaleCode.Hungarian]: '\u00D6rm\u00E9nyorsz\u00E1g',\n        [LocaleCode.Icelandic]: 'Armenia',\n        [LocaleCode.Igbo]: 'Armenia',\n        [LocaleCode.Indonesian]: 'Armenia',\n        [LocaleCode.Irish]: 'Armenia',\n        [LocaleCode.Italian]: 'Armenia',\n        [LocaleCode.Japanese]: '\u30A2\u30EB\u30E1\u30CB\u30A2',\n        [LocaleCode.Javanese]: 'Armenia',\n        [LocaleCode.Kannada]: '\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF',\n        [LocaleCode.Kazakh]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8',\n        [LocaleCode.Korean]: '\uC544\uB974\uBA54\uB2C8\uC544',\n        [LocaleCode.Kurdish]: 'Armenia',\n        [LocaleCode.Kyrgyz]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2',\n        [LocaleCode.Latin]: 'Armenia',\n        [LocaleCode.Latvian]: 'Armeenia',\n        [LocaleCode.Lithuanian]: 'Arm\u0117nija',\n        [LocaleCode.Luxembourgish]: 'Armenien',\n        [LocaleCode.Macedonian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430',\n        [LocaleCode.Malagasy]: 'Armenia',\n        [LocaleCode.Malay]: 'Armenia',\n        [LocaleCode.Malayalam]: '\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F',\n        [LocaleCode.Maltese]: 'Armenia',\n        [LocaleCode.Maori]: 'Armenia',\n        [LocaleCode.Marathi]: '\u0905\u0930\u094D\u092E\u0947\u0928\u093F',\n        [LocaleCode.Mongolian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Nepali]: '\u0905\u0930\u094D\u092E\u0947\u0928\u093F',\n        [LocaleCode.Norwegian]: 'Armenia',\n        [LocaleCode.Pashto]: '\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627',\n        [LocaleCode.Persian]: '\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Polish]: 'Armenia',\n        [LocaleCode.Portuguese]: 'Armenia',\n        [LocaleCode.Punjabi]: '\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40',\n        [LocaleCode.Romanian]: 'Armenia',\n        [LocaleCode.Russian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Samoan]: 'Armenia',\n        [LocaleCode.Sanskrit]: 'Armenia',\n        [LocaleCode.Scots]: 'Armenia',\n        [LocaleCode.Serbian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430',\n        [LocaleCode.Sesotho]: 'Armenia',\n        [LocaleCode.Shona]: 'Armenia',\n        [LocaleCode.Sindhi]: 'Armenia',\n        [LocaleCode.Sinhala]: '\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2',\n        [LocaleCode.Slovak]: 'Armenia',\n        [LocaleCode.Slovenian]: 'Armenija',\n        [LocaleCode.Somali]: 'Armenia',\n        [LocaleCode.Spanish]: 'Armenia',\n        [LocaleCode.Sudanese]: 'Armenia',\n        [LocaleCode.Swahili]: 'Armenia',\n        [LocaleCode.Swedish]: 'Armenien',\n        [LocaleCode.Tagalog]: 'Armenia',\n        [LocaleCode.Tajik]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Tamil]: '\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD',\n        [LocaleCode.Tatar]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Telugu]: '\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F',\n        [LocaleCode.Thai]: '\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19',\n        [LocaleCode.Tibetan]: '\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D',\n        [LocaleCode.Turkish]: 'Ermenistan',\n        [LocaleCode.Ukrainian]: '\u0410\u0440\u043C\u0435\u043D\u0456\u044F',\n        [LocaleCode.Urdu]: '\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Uzbek]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Vietnamese]: 'Armenia',\n        [LocaleCode.Welsh]: 'Armenia',\n        [LocaleCode.Xhosa]: 'Armenia',\n        [LocaleCode.Yiddish]: '\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4',\n        [LocaleCode.Yoruba]: 'Armenia',\n        [LocaleCode.Zulu]: 'Armenia',\n      },\n    },\n  },\n\n  SomeCountry: {\n    i18n: {\n      calling_codes: [],\n      currencies: [],\n      languages: [],\n      tz: {\n        offsets: [],\n        regions: [],\n        timezones: [],\n      },\n    },\n    id: CountryCode.AmericanSamoa,\n    info: {\n      flag: {\n        emoji: '',\n        emoji_unicode: '',\n        svg: '',\n      },\n      tld: [],\n    },\n    iso: {\n      alpha2: CountryCode.AmericanSamoa,\n      alpha3: '',\n      numeric: '',\n    },\n    name: {\n      alt_spellings: [],\n      demonym: '',\n      native: {\n        endonym: '',\n      },\n      official: '',\n      short: '',\n      translations: {\n        [LocaleCode.Afrikaans]: '',\n        [LocaleCode.Albanian]: '',\n        [LocaleCode.Amharic]: '',\n        [LocaleCode.Arabic]: '',\n        [LocaleCode.Armenian]: '',\n        [LocaleCode.Azerbaijani]: '',\n        [LocaleCode.Bashkir]: '',\n        [LocaleCode.Basque]: '',\n        [LocaleCode.Belarusian]: '',\n        [LocaleCode.Bengali]: '',\n        [LocaleCode.Berber]: '',\n        [LocaleCode.Bhutani]: '',\n        [LocaleCode.Bosnian]: '',\n        [LocaleCode.Breton]: '',\n        [LocaleCode.Bulgarian]: '',\n        [LocaleCode.Burmese]: '',\n        [LocaleCode.Catalan]: '',\n        [LocaleCode.Chinese]: '',\n        [LocaleCode.Croatian]: '',\n        [LocaleCode.Czech]: '',\n        [LocaleCode.Danish]: '',\n        [LocaleCode.Dutch]: '',\n        [LocaleCode.English]: '',\n        [LocaleCode.Esperanto]: '',\n        [LocaleCode.Estonian]: '',\n        [LocaleCode.Finnish]: '',\n        [LocaleCode.French]: '',\n        [LocaleCode.Frisian]: '',\n        [LocaleCode.Galician]: '',\n        [LocaleCode.Georgian]: '',\n        [LocaleCode.German]: '',\n        [LocaleCode.Greenlandic]: '',\n        [LocaleCode.Greek]: '',\n        [LocaleCode.Gujarati]: '',\n        [LocaleCode.Haitian]: '',\n        [LocaleCode.Hausa]: '',\n        [LocaleCode.Hebrew]: '',\n        [LocaleCode.Hindi]: '',\n        [LocaleCode.Hungarian]: '',\n        [LocaleCode.Icelandic]: '',\n        [LocaleCode.Igbo]: '',\n        [LocaleCode.Indonesian]: '',\n        [LocaleCode.Irish]: '',\n        [LocaleCode.Italian]: '',\n        [LocaleCode.Japanese]: '',\n        [LocaleCode.Javanese]: '',\n        [LocaleCode.Kannada]: '',\n        [LocaleCode.Kazakh]: '',\n        [LocaleCode.Khmer]: '',\n        [LocaleCode.Korean]: '',\n        [LocaleCode.Kurdish]: '',\n        [LocaleCode.Kyrgyz]: '',\n        [LocaleCode.Lao]: '',\n        [LocaleCode.Latin]: '',\n        [LocaleCode.Latvian]: '',\n        [LocaleCode.Lithuanian]: '',\n        [LocaleCode.Luxembourgish]: '',\n        [LocaleCode.Macedonian]: '',\n        [LocaleCode.Malagasy]: '',\n        [LocaleCode.Malay]: '',\n        [LocaleCode.Malayalam]: '',\n        [LocaleCode.Maltese]: '',\n        [LocaleCode.Maori]: '',\n        [LocaleCode.Marathi]: '',\n        [LocaleCode.Mongolian]: '',\n        [LocaleCode.Nepali]: '',\n        [LocaleCode.Norwegian]: '',\n        [LocaleCode.Pashto]: '',\n        [LocaleCode.Persian]: '',\n        [LocaleCode.Polish]: '',\n        [LocaleCode.Portuguese]: '',\n        [LocaleCode.Punjabi]: '',\n        [LocaleCode.Romanian]: '',\n        [LocaleCode.Russian]: '',\n        [LocaleCode.Samoan]: '',\n        [LocaleCode.Sanskrit]: '',\n        [LocaleCode.Scots]: '',\n        [LocaleCode.Serbian]: '',\n        [LocaleCode.Sesotho]: '',\n        [LocaleCode.Shona]: '',\n        [LocaleCode.Sindhi]: '',\n        [LocaleCode.Sinhala]: '',\n        [LocaleCode.Slovak]: '',\n        [LocaleCode.Slovenian]: '',\n        [LocaleCode.Somali]: '',\n        [LocaleCode.Spanish]: '',\n        [LocaleCode.Sudanese]: '',\n        [LocaleCode.Swahili]: '',\n        [LocaleCode.Swedish]: '',\n        [LocaleCode.Tagalog]: '',\n        [LocaleCode.Tajik]: '',\n        [LocaleCode.Tamil]: '',\n        [LocaleCode.Tatar]: '',\n        [LocaleCode.Telugu]: '',\n        [LocaleCode.Thai]: '',\n        [LocaleCode.Tibetan]: '',\n        [LocaleCode.Turkish]: '',\n        [LocaleCode.Ukrainian]: '',\n        [LocaleCode.Urdu]: '',\n        [LocaleCode.Uzbek]: '',\n        [LocaleCode.Vietnamese]: '',\n        [LocaleCode.Welsh]: '',\n        [LocaleCode.Xhosa]: '',\n        [LocaleCode.Yiddish]: '',\n        [LocaleCode.Yoruba]: '',\n        [LocaleCode.Zulu]: '',\n      },\n    },\n  },\n};\n", "import { LanguageCode } from '../language/index.js';\nimport { LocaleCode } from './index.js';\nimport { Locale } from '.';\nimport { CountryCode } from './country.js';\n\nexport const Afrikaans: Locale = {\n  id: LocaleCode.Afrikaans,\n  language: {\n    code: LanguageCode.Afrikaans,\n    name: 'Afrikaans',\n    native: 'Afrikaans',\n  },\n  name: 'Afrikaans',\n  native_name: 'Afrikaans',\n  rtl: false,\n};\n\nexport const AfrikaansSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.AfrikaansSouthAfrica,\n  language: {\n    code: LanguageCode.Afrikaans,\n    name: 'Afrikaans',\n    native: 'Afrikaans',\n  },\n  name: 'Afrikaans (South Africa)',\n  native_name: 'Afrikaans (Suid-Afrika)',\n  rtl: false,\n};\n\nexport const Albanian: Locale = {\n  id: LocaleCode.Albanian,\n  language: {\n    code: LanguageCode.Albanian,\n    name: 'Albanian',\n    native: 'Shqip',\n  },\n  name: 'Albanian',\n  native_name: 'Shqip',\n  rtl: false,\n};\n\nexport const AlbanianAlbania: Locale = {\n  country: {\n    code: CountryCode.Albania,\n    name: 'Albania',\n    native: 'Shqip\u00EBria',\n  },\n  id: LocaleCode.AlbanianAlbania,\n  language: {\n    code: LanguageCode.Albanian,\n    name: 'Albanian',\n    native: 'Shqip',\n  },\n  name: 'Albanian (Albania)',\n  native_name: 'Shqip (Shqip\u00EBria)',\n  rtl: false,\n};\n\nexport const Amharic: Locale = {\n  id: LocaleCode.Amharic,\n  language: {\n    code: LanguageCode.Amharic,\n    name: 'Amharic',\n    native: '\u12A0\u121B\u122D\u129B',\n  },\n  name: 'Amharic',\n  native_name: '\u12A0\u121B\u122D\u129B',\n  rtl: false,\n};\n\nexport const AmharicEthiopia: Locale = {\n  country: {\n    code: CountryCode.Ethiopia,\n    name: 'Ethiopia',\n    native: '\u12A2\u1275\u12EE\u1335\u12EB',\n  },\n  id: LocaleCode.AmharicEthiopia,\n  language: {\n    code: LanguageCode.Amharic,\n    name: 'Amharic',\n    native: '\u12A0\u121B\u122D\u129B',\n  },\n  name: 'Amharic (Ethiopia)',\n  native_name: '\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)',\n  rtl: false,\n};\n\nexport const Arabic: Locale = {\n  id: LocaleCode.Arabic,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  rtl: true,\n};\n\nexport const ArabicAlgeria: Locale = {\n  country: {\n    code: CountryCode.Algeria,\n    name: 'Algeria',\n    native: '\u0627\u0644\u062C\u0632\u0627\u0626\u0631',\n  },\n  id: LocaleCode.ArabicAlgeria,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Algeria)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)',\n  rtl: true,\n};\n\nexport const ArabicBahrain: Locale = {\n  country: {\n    code: CountryCode.Bahrain,\n    name: 'Bahrain',\n    native: '\u0627\u0644\u0628\u062D\u0631\u064A\u0646',\n  },\n  id: LocaleCode.ArabicBahrain,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Bahrain)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)',\n  rtl: true,\n};\n\nexport const ArabicEgypt: Locale = {\n  country: {\n    code: CountryCode.Egypt,\n    name: 'Egypt',\n    native: '\u0645\u0635\u0631',\n  },\n  id: LocaleCode.ArabicEgypt,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Egypt)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)',\n  rtl: true,\n};\n\nexport const ArabicIraq: Locale = {\n  country: {\n    code: CountryCode.Iraq,\n    name: 'Iraq',\n    native: '\u0627\u0644\u0639\u0631\u0627\u0642',\n  },\n  id: LocaleCode.ArabicIraq,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Iraq)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)',\n  rtl: true,\n};\n\nexport const ArabicJordan: Locale = {\n  country: {\n    code: CountryCode.Jordan,\n    name: 'Jordan',\n    native: '\u0627\u0644\u0623\u0631\u062F\u0646',\n  },\n  id: LocaleCode.ArabicJordan,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Jordan)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)',\n  rtl: true,\n};\n\nexport const ArabicKuwait: Locale = {\n  country: {\n    code: CountryCode.Kuwait,\n    name: 'Kuwait',\n    native: '\u0627\u0644\u0643\u0648\u064A\u062A',\n  },\n\n  id: LocaleCode.ArabicKuwait,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Kuwait)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)',\n  rtl: true,\n};\n\nexport const ArabicLebanon: Locale = {\n  country: {\n    code: CountryCode.Lebanon,\n    name: 'Lebanon',\n    native: '\u0644\u0628\u0646\u0627\u0646',\n  },\n  id: LocaleCode.ArabicLebanon,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Lebanon)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)',\n  rtl: true,\n};\n\nexport const ArabicLibya: Locale = {\n  country: {\n    code: CountryCode.Libya,\n    name: 'Libya',\n    native: '\u0644\u064A\u0628\u064A\u0627',\n  },\n  id: LocaleCode.ArabicLibya,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Libya)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)',\n  rtl: true,\n};\n\nexport const ArabicMorocco: Locale = {\n  country: {\n    code: CountryCode.Morocco,\n    name: 'Morocco',\n    native: '\u0627\u0644\u0645\u063A\u0631\u0628',\n  },\n  id: LocaleCode.ArabicMorocco,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Morocco)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)',\n  rtl: true,\n};\n\nexport const ArabicOman: Locale = {\n  country: {\n    code: CountryCode.Oman,\n    name: 'Oman',\n    native: '\u0639\u0645\u0627\u0646',\n  },\n  id: LocaleCode.ArabicOman,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Oman)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)',\n  rtl: true,\n};\n\nexport const ArabicQatar: Locale = {\n  country: {\n    code: CountryCode.Qatar,\n    name: 'Qatar',\n    native: '\u0642\u0637\u0631',\n  },\n  id: LocaleCode.ArabicQatar,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Qatar)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)',\n  rtl: true,\n};\n\nexport const ArabicSaudiArabia: Locale = {\n  country: {\n    code: CountryCode.SaudiArabia,\n    name: 'Saudi Arabia',\n    native: '\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629',\n  },\n  id: LocaleCode.ArabicSaudiArabia,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Saudi Arabia)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)',\n  rtl: true,\n};\n\nexport const ArabicTunisia: Locale = {\n  country: {\n    code: CountryCode.Tunisia,\n    name: 'Tunisia',\n    native: '\u062A\u0648\u0646\u0633',\n  },\n  id: LocaleCode.ArabicTunisia,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Tunisia)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)',\n  rtl: true,\n};\n\nexport const ArabicUnitedArabEmirates: Locale = {\n  country: {\n    code: CountryCode.UnitedArabEmirates,\n    name: 'United Arab Emirates',\n    native: '\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629',\n  },\n  id: LocaleCode.ArabicUnitedArabEmirates,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (United Arab Emirates)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)',\n  rtl: true,\n};\n\nexport const ArabicYemen: Locale = {\n  country: {\n    code: CountryCode.Yemen,\n    name: 'Yemen',\n    native: '\u0627\u0644\u064A\u0645\u0646',\n  },\n  id: LocaleCode.ArabicYemen,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Yemen)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)',\n  rtl: true,\n};\n\nexport const Armenian: Locale = {\n  id: LocaleCode.Armenian,\n  language: {\n    code: LanguageCode.Armenian,\n    name: 'Armenian',\n    native: '\u0540\u0561\u0575\u0565\u0580\u0565\u0576',\n  },\n  name: 'Armenian',\n  native_name: '\u0540\u0561\u0575\u0565\u0580\u0565\u0576',\n  rtl: false,\n};\n\nexport const ArmenianArmenia: Locale = {\n  country: { code: CountryCode.Armenia, name: 'Armenia', native: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576' },\n  id: LocaleCode.ArmenianArmenia,\n  language: {\n    code: LanguageCode.Armenian,\n    name: 'Armenian',\n    native: '\u0570\u0561\u0575\u0565\u0580\u0565\u0576',\n  },\n  name: 'Armenian (Armenia)',\n  native_name: '\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)',\n  rtl: false,\n};\n\nexport const Azerbaijani = {\n  id: LocaleCode.Azerbaijani,\n  language: {\n    code: LanguageCode.Azerbaijani,\n    name: 'Azeribaijani',\n    native: 'Az\u0259rbaycan',\n  },\n  name: 'Azeri',\n  native_name: 'Az\u0259rbaycan',\n  rtl: false,\n};\n\nexport const AzerbaijaniAzerbaijan: Locale = {\n  country: {\n    code: CountryCode.Azerbaijan,\n    name: 'Azerbaijan',\n    native: 'Az\u0259rbaycan',\n  },\n  id: LocaleCode.AzerbaijaniAzerbaijan,\n  language: {\n    code: LanguageCode.Azerbaijani,\n    name: 'Azerbaijani',\n    native: 'Az\u0259rbaycan',\n  },\n  name: 'Azeri (Azerbaijan)',\n  native_name: 'Az\u0259rbaycan (Az\u0259rbaycan)',\n  rtl: false,\n};\n\nexport const Basque: Locale = {\n  id: LocaleCode.Basque,\n  language: {\n    code: LanguageCode.Basque,\n    name: 'Basque',\n    native: 'Euskara',\n  },\n  name: 'Basque',\n  native_name: 'Euskara',\n  rtl: false,\n};\n\nexport const BasqueSpain: Locale = {\n  country: {\n    code: CountryCode.Spain,\n    name: 'Spain',\n    native: 'Espa\u00F1a',\n  },\n  id: LocaleCode.BasqueSpain,\n  language: {\n    code: LanguageCode.Basque,\n    name: 'Basque',\n    native: 'Euskara',\n  },\n  name: 'Basque (Spain)',\n  native_name: 'Euskara (Espa\u00F1a)',\n  rtl: false,\n};\n\nexport const Belarusian: Locale = {\n  id: LocaleCode.Belarusian,\n  language: {\n    code: LanguageCode.Belarusian,\n    name: 'Belarusian',\n    native: '\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F',\n  },\n  name: 'Belarusian',\n  native_name: '\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F',\n  rtl: false,\n};\n\nexport const BelarusianBelarus: Locale = {\n  country: {\n    code: CountryCode.Belarus,\n    name: 'Belarus',\n    native: '\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C',\n  },\n  id: LocaleCode.BelarusianBelarus,\n  language: {\n    code: LanguageCode.Belarusian,\n    name: 'Belarusian',\n    native: '\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F',\n  },\n  name: 'Belarusian (Belarus)',\n  native_name: '\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)',\n  rtl: false,\n};\n\nexport const Bengali: Locale = {\n  id: LocaleCode.Bengali,\n  language: {\n    code: LanguageCode.Bengali,\n    name: 'Bengali',\n    native: '\u09AC\u09BE\u0982\u09B2\u09BE',\n  },\n  name: 'Bengali',\n  native_name: '\u09AC\u09BE\u0982\u09B2\u09BE',\n  rtl: false,\n};\n\nexport const BengaliBangladesh: Locale = {\n  country: {\n    code: CountryCode.Bangladesh,\n    name: 'Bangladesh',\n    native: '\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6',\n  },\n  id: LocaleCode.BengaliBangladesh,\n  language: {\n    code: LanguageCode.Bengali,\n    name: 'Bengali',\n    native: '\u09AC\u09BE\u0982\u09B2\u09BE',\n  },\n  name: 'Bengali (Bangladesh)',\n  native_name: '\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)',\n  rtl: false,\n};\n\nexport const Bhutani: Locale = {\n  id: LocaleCode.Bhutani,\n  language: {\n    code: LanguageCode.Bhutani,\n    name: 'Bhutani',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Bhutani',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  rtl: false,\n};\n\nexport const BhutaniBhutan: Locale = {\n  country: {\n    code: CountryCode.Bhutan,\n    name: 'Bhutan',\n    native: '\u0F60\u0F56\u0FB2\u0F74\u0F42',\n  },\n  id: LocaleCode.BhutaniBhutan,\n  language: {\n    code: LanguageCode.Bhutani,\n    name: 'Bhutani',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Bhutani (Bhutan)',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)',\n  rtl: false,\n};\n\nexport const Bulgarian: Locale = {\n  id: LocaleCode.Bulgarian,\n  language: {\n    code: LanguageCode.Bulgarian,\n    name: 'Bulgarian',\n    native: '\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438',\n  },\n  name: 'Bulgarian',\n  native_name: '\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438',\n  rtl: false,\n};\n\nexport const BulgarianBulgaria: Locale = {\n  country: {\n    code: CountryCode.Bulgaria,\n    name: 'Bulgaria',\n    native: '\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F',\n  },\n  id: LocaleCode.BulgarianBulgaria,\n  language: {\n    code: LanguageCode.Bulgarian,\n    name: 'Bulgarian',\n    native: '\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438',\n  },\n  name: 'Bulgarian (Bulgaria)',\n  native_name: '\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)',\n  rtl: false,\n};\n\nexport const Burmese: Locale = {\n  id: LocaleCode.Burmese,\n  language: {\n    code: LanguageCode.Burmese,\n    name: 'Burmese',\n    native: '\u1017\u1019\u102C\u1005\u102C',\n  },\n  name: 'Burmese',\n  native_name: '\u1017\u1019\u102C\u1005\u102C',\n  rtl: false,\n};\n\nexport const BurmeseMyanmar: Locale = {\n  country: {\n    code: CountryCode.Myanmar,\n    name: 'Myanmar',\n    native: '\u1019\u103C\u1014\u103A\u1019\u102C',\n  },\n  id: LocaleCode.BurmeseMyanmar,\n  language: {\n    code: LanguageCode.Burmese,\n    name: 'Burmese',\n    native: '\u1017\u1019\u102C\u1005\u102C',\n  },\n  name: 'Burmese (Myanmar)',\n  native_name: '\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)',\n  rtl: false,\n};\n\nexport const Cantonese: Locale = {\n  id: LocaleCode.Cantonese,\n  language: {\n    code: LanguageCode.Cantonese,\n    name: 'Cantonese',\n    native: '\u5EE3\u6771\u8A71',\n  },\n  name: 'Cantonese',\n  native_name: '\u5EE3\u6771\u8A71',\n  rtl: false,\n};\n\nexport const CantoneseHongKong: Locale = {\n  country: {\n    code: CountryCode.HongKong,\n    name: 'Hong Kong',\n    native: '\u9999\u6E2F',\n  },\n  id: LocaleCode.CantoneseHongKong,\n  language: {\n    code: LanguageCode.Cantonese,\n    name: 'Cantonese',\n    native: '\u5EE3\u6771\u8A71',\n  },\n  name: 'Cantonese (Hong Kong)',\n  native_name: '\u5EE3\u6771\u8A71 (\u9999\u6E2F)',\n  rtl: false,\n};\n\nexport const Catalan: Locale = {\n  id: LocaleCode.Catalan,\n  language: {\n    code: LanguageCode.Catalan,\n    name: 'Catalan',\n    native: 'Catal\u00E0',\n  },\n  name: 'Catalan',\n  native_name: 'Catal\u00E0',\n  rtl: false,\n};\n\nexport const CatalanSpain: Locale = {\n  country: {\n    code: CountryCode.Spain,\n    name: 'Spain',\n    native: 'Espa\u00F1a',\n  },\n  id: LocaleCode.CatalanSpain,\n  language: {\n    code: LanguageCode.Catalan,\n    name: 'Catalan',\n    native: 'Catal\u00E0',\n  },\n  name: 'Catalan (Spain)',\n  native_name: 'Catal\u00E0 (Espanya)',\n  rtl: false,\n};\n\nexport const ChineseSimplified: Locale = {\n  id: LocaleCode.ChineseSimplified,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified)',\n  native_name: '\u4E2D\u6587',\n  rtl: false,\n};\n\nexport const ChineseSimplifiedChina: Locale = {\n  country: {\n    code: CountryCode.China,\n    name: 'China',\n    native: '\u4E2D\u56FD',\n  },\n  id: LocaleCode.ChineseSimplifiedChina,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified/China)',\n  native_name: '\u4E2D\u6587 (\u4E2D\u56FD)',\n  rtl: false,\n};\n\nexport const ChineseSimplifiedHongKong: Locale = {\n  country: {\n    code: CountryCode.HongKong,\n    name: 'Hong Kong',\n    native: '\u9999\u6E2F',\n  },\n  id: LocaleCode.ChineseSimplifiedHongKong,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified/Hong Kong)',\n  native_name: '\u4E2D\u6587 (\u9999\u6E2F)',\n  rtl: false,\n};\n\nexport const ChineseSimplifiedMacau: Locale = {\n  country: {\n    code: CountryCode.Macau,\n    name: 'Macau',\n    native: '\u6FB3\u9580',\n  },\n  id: LocaleCode.ChineseSimplifiedMacau,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified/Macau)',\n  native_name: '\u4E2D\u6587 (\u6FB3\u9580)',\n  rtl: false,\n};\n\nexport const ChineseSimplifiedSingapore: Locale = {\n  country: {\n    code: CountryCode.Singapore,\n    name: 'Singapore',\n    native: '\u65B0\u52A0\u5761',\n  },\n  id: LocaleCode.ChineseSimplifiedSingapore,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified/Singapore)',\n  native_name: '\u4E2D\u6587 (\u65B0\u52A0\u5761)',\n  rtl: false,\n};\n\nexport const ChineseTraditional: Locale = {\n  id: LocaleCode.ChineseTraditional,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Traditional)',\n  native_name: '\u4E2D\u6587',\n  rtl: false,\n};\n\nexport const ChineseTraditionalHongKong: Locale = {\n  country: {\n    code: CountryCode.HongKong,\n    name: 'Hong Kong',\n    native: '\u9999\u6E2F',\n  },\n  id: LocaleCode.ChineseTraditionalHongKong,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese (Traditional/Hong Kong)',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Hong Kong)',\n  native_name: '\u4E2D\u6587 (\u9999\u6E2F)',\n  rtl: false,\n};\n\nexport const ChineseTraditionalMacau: Locale = {\n  country: {\n    code: CountryCode.Macau,\n    name: 'Macau',\n    native: '\u6FB3\u9580',\n  },\n  id: LocaleCode.ChineseTraditionalMacau,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese (Traditional/Macau)',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Macau)',\n  native_name: '\u4E2D\u6587 (\u6FB3\u9580)',\n  rtl: false,\n};\n\nexport const ChineseTraditionalSingapore: Locale = {\n  country: {\n    code: CountryCode.Singapore,\n    name: 'Singapore',\n    native: '\u65B0\u52A0\u5761',\n  },\n  id: LocaleCode.ChineseTraditionalSingapore,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese (Traditional/Singapore)',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Singapore)',\n  native_name: '\u4E2D\u6587 (\u65B0\u52A0\u5761)',\n  rtl: false,\n};\n\nexport const Croatian: Locale = {\n  id: LocaleCode.Croatian,\n  language: {\n    code: LanguageCode.Croatian,\n    name: 'Croatian',\n    native: 'Hrvatski',\n  },\n  name: 'Croatian',\n  native_name: 'Hrvatski',\n  rtl: false,\n};\n\nexport const CroatianBosniaAndHerzegovina: Locale = {\n  country: {\n    code: CountryCode.BosniaAndHerzegovina,\n    name: 'Bosnia and Herzegovina',\n    native: 'Bosna i Hercegovina',\n  },\n  id: LocaleCode.CroatianBosniaAndHerzegovina,\n  language: {\n    code: LanguageCode.Croatian,\n    name: 'Croatian',\n    native: 'Hrvatski',\n  },\n  name: 'Croatian (Bosnia and Herzegovina)',\n  native_name: 'Hrvatski (Bosna i Hercegovina)',\n  rtl: false,\n};\n\nexport const CroatianCroatia: Locale = {\n  country: {\n    code: CountryCode.Croatia,\n    name: 'Croatia',\n    native: 'Hrvatska',\n  },\n  id: LocaleCode.CroatianCroatia,\n  language: {\n    code: LanguageCode.Croatian,\n    name: 'Croatian',\n    native: 'Hrvatski',\n  },\n  name: 'Croatian (Croatia)',\n  native_name: 'Hrvatski (Hrvatska)',\n  rtl: false,\n};\n\nexport const Czech: Locale = {\n  id: LocaleCode.Czech,\n  language: {\n    code: LanguageCode.Czech,\n    name: 'Czech',\n    native: '\u010Ce\u0161tina',\n  },\n  name: 'Czech',\n  native_name: '\u010Ce\u0161tina',\n  rtl: false,\n};\n\nexport const CzechCzechRepublic: Locale = {\n  country: {\n    code: CountryCode.CzechRepublic,\n    name: 'Czech Republic',\n    native: '\u010Cesk\u00E1 republika',\n  },\n  id: LocaleCode.CzechCzechRepublic,\n  language: {\n    code: LanguageCode.Czech,\n    name: 'Czech',\n    native: '\u010Ce\u0161tina',\n  },\n  name: 'Czech (Czech Republic)',\n  native_name: '\u010Ce\u0161tina (\u010Cesk\u00E1 republika)',\n  rtl: false,\n};\n\nexport const Danish: Locale = {\n  id: LocaleCode.Danish,\n  language: {\n    code: LanguageCode.Danish,\n    name: 'Danish',\n    native: 'Dansk',\n  },\n  name: 'Danish',\n  native_name: 'Dansk',\n  rtl: false,\n};\n\nexport const DanishDenmark: Locale = {\n  country: {\n    code: CountryCode.Denmark,\n    name: 'Denmark',\n    native: 'Danmark',\n  },\n  id: LocaleCode.DanishDenmark,\n  language: {\n    code: LanguageCode.Danish,\n    name: 'Danish',\n    native: 'Dansk',\n  },\n  name: 'Danish (Denmark)',\n  native_name: 'Dansk (Danmark)',\n  rtl: false,\n};\n\nexport const Divehi: Locale = {\n  id: LocaleCode.Divehi,\n  language: {\n    code: LanguageCode.Divehi,\n    name: 'Divehi',\n    native: '\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0',\n  },\n  name: 'Divehi',\n  native_name: '\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0',\n  rtl: true,\n};\n\nexport const DivehiMaldives: Locale = {\n  country: {\n    code: CountryCode.Maldives,\n    name: 'Maldives',\n    native: '\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC',\n  },\n  id: LocaleCode.DivehiMaldives,\n  language: {\n    code: LanguageCode.Divehi,\n    name: 'Divehi',\n    native: '\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0',\n  },\n  name: 'Divehi (Maldives)',\n  native_name: '\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)',\n  rtl: true,\n};\n\nexport const Dutch: Locale = {\n  id: LocaleCode.Dutch,\n  language: {\n    code: LanguageCode.Dutch,\n    name: 'Dutch',\n    native: 'Nederlands',\n  },\n  name: 'Dutch',\n  native_name: 'Nederlands',\n  rtl: false,\n};\n\nexport const DutchBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgi\u00EB',\n  },\n  id: LocaleCode.DutchBelgium,\n  language: {\n    code: LanguageCode.Dutch,\n    name: 'Dutch',\n    native: 'Nederlands',\n  },\n  name: 'Dutch (Belgium)',\n  native_name: 'Nederlands (Belgi\u00EB)',\n  rtl: false,\n};\n\nexport const DutchNetherlands: Locale = {\n  country: {\n    code: CountryCode.Netherlands,\n    name: 'Netherlands',\n    native: 'Nederland',\n  },\n  id: LocaleCode.DutchNetherlands,\n  language: {\n    code: LanguageCode.Dutch,\n    name: 'Dutch',\n    native: 'Nederlands',\n  },\n  name: 'Dutch (Netherlands)',\n  native_name: 'Nederlands (Nederland)',\n  rtl: false,\n};\n\nexport const English: Locale = {\n  id: LocaleCode.English,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English',\n  native_name: 'English',\n  rtl: false,\n};\n\nexport const EnglishAustralia: Locale = {\n  country: {\n    code: CountryCode.Australia,\n    name: 'Australia',\n    native: 'Australia',\n  },\n  id: LocaleCode.EnglishAustralia,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Australia)',\n  native_name: 'English (Australia)',\n  rtl: false,\n};\n\nexport const EnglishBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgi\u00EB',\n  },\n  id: LocaleCode.EnglishBelgium,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Belgium)',\n  native_name: 'English (Belgi\u00EB)',\n  rtl: false,\n};\n\nexport const EnglishCanada: Locale = {\n  country: {\n    code: CountryCode.Canada,\n    name: 'Canada',\n    native: 'Canada',\n  },\n  id: LocaleCode.EnglishCanada,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Canada)',\n  native_name: 'English (Canada)',\n  rtl: false,\n};\n\nexport const EnglishIreland: Locale = {\n  country: {\n    code: CountryCode.Ireland,\n    name: 'Ireland',\n    native: '\u00C9ire',\n  },\n  id: LocaleCode.EnglishIreland,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Ireland)',\n  native_name: 'English (\u00C9ire)',\n  rtl: false,\n};\n\nexport const EnglishJamaica: Locale = {\n  country: {\n    code: CountryCode.Jamaica,\n    name: 'Jamaica',\n    native: 'Jamaica',\n  },\n  id: LocaleCode.EnglishJamaica,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Jamaica)',\n  native_name: 'English (Jamaica)',\n  rtl: false,\n};\n\nexport const EnglishNewZealand: Locale = {\n  country: {\n    code: CountryCode.NewZealand,\n    name: 'New Zealand',\n    native: 'New Zealand',\n  },\n  id: LocaleCode.EnglishNewZealand,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (New Zealand)',\n  native_name: 'English (New Zealand)',\n  rtl: false,\n};\n\nexport const EnglishPhilippines: Locale = {\n  country: {\n    code: CountryCode.Philippines,\n    name: 'Philippines',\n    native: 'Philippines',\n  },\n  id: LocaleCode.EnglishPhilippines,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Philippines)',\n  native_name: 'English (Philippines)',\n  rtl: false,\n};\n\nexport const EnglishSingapore: Locale = {\n  country: {\n    code: CountryCode.Singapore,\n    name: 'Singapore',\n    native: 'Singapore',\n  },\n  id: LocaleCode.EnglishSingapore,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Singapore)',\n  native_name: 'English (Singapore)',\n  rtl: false,\n};\n\nexport const EnglishSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.EnglishSouthAfrica,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (South Africa)',\n  native_name: 'English (South Africa)',\n  rtl: false,\n};\n\nexport const EnglishTrinidadAndTobago: Locale = {\n  country: {\n    code: CountryCode.TrinidadAndTobago,\n    name: 'Trinidad and Tobago',\n    native: 'Trinidad and Tobago',\n  },\n  id: LocaleCode.EnglishTrinidadAndTobago,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Trinidad and Tobago)',\n  native_name: 'English (Trinidad and Tobago)',\n  rtl: false,\n};\n\nexport const EnglishUnitedKingdom: Locale = {\n  country: {\n    code: CountryCode.UnitedKingdom,\n    name: 'United Kingdom',\n    native: 'United Kingdom',\n  },\n  id: LocaleCode.EnglishUnitedKingdom,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (United Kingdom)',\n  native_name: 'English (United Kingdom)',\n  rtl: false,\n};\n\nexport const EnglishUnitedStates: Locale = {\n  country: {\n    code: CountryCode.UnitedStates,\n    name: 'United States',\n    native: 'United States',\n  },\n  id: LocaleCode.EnglishUnitedStates,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (United States)',\n  native_name: 'English (United States)',\n  rtl: false,\n};\n\nexport const EnglishZimbabwe: Locale = {\n  country: {\n    code: CountryCode.Zimbabwe,\n    name: 'Zimbabwe',\n    native: 'Zimbabwe',\n  },\n  id: LocaleCode.EnglishZimbabwe,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Zimbabwe)',\n  native_name: 'English (Zimbabwe)',\n  rtl: false,\n};\n\nexport const Esperanto: Locale = {\n  id: LocaleCode.Esperanto,\n  language: {\n    code: LanguageCode.Esperanto,\n    name: 'Esperanto',\n    native: 'Esperanto',\n  },\n  name: 'Esperanto',\n  native_name: 'Esperanto',\n  rtl: false,\n};\n\nexport const Estonian: Locale = {\n  id: LocaleCode.Estonian,\n  language: {\n    code: LanguageCode.Estonian,\n    name: 'Estonian',\n    native: 'Eesti',\n  },\n  name: 'Estonian',\n  native_name: 'Eesti',\n  rtl: false,\n};\n\nexport const EstonianEstonia: Locale = {\n  country: {\n    code: CountryCode.Estonia,\n    name: 'Estonia',\n    native: 'Eesti',\n  },\n  id: LocaleCode.EstonianEstonia,\n  language: {\n    code: LanguageCode.Estonian,\n    name: 'Estonian',\n    native: 'Eesti',\n  },\n  name: 'Estonian (Estonia)',\n  native_name: 'Eesti (Eesti)',\n  rtl: false,\n};\n\nexport const Faroese: Locale = {\n  id: LocaleCode.Faroese,\n  language: {\n    code: LanguageCode.Faroese,\n    name: 'Faroese',\n    native: 'F\u00F8royskt',\n  },\n  name: 'Faroese',\n  native_name: 'F\u00F8royskt',\n  rtl: false,\n};\n\nexport const FaroeseFaroeIslands: Locale = {\n  country: {\n    code: CountryCode.FaroeIslands,\n    name: 'Faroe Islands',\n    native: 'F\u00F8royar',\n  },\n  id: LocaleCode.FaroeseFaroeIslands,\n  language: {\n    code: LanguageCode.Faroese,\n    name: 'Faroese',\n    native: 'F\u00F8royskt',\n  },\n  name: 'Faroese (Faroe Islands)',\n  native_name: 'F\u00F8royskt (F\u00F8royar)',\n  rtl: false,\n};\n\nexport const Farsi: Locale = {\n  id: LocaleCode.Farsi,\n  language: {\n    code: LanguageCode.Farsi,\n    name: 'Farsi',\n    native: '\u0641\u0627\u0631\u0633\u06CC',\n  },\n  name: 'Farsi',\n  native_name: '\u0641\u0627\u0631\u0633\u06CC',\n  rtl: true,\n};\n\nexport const FarsiIran: Locale = {\n  country: {\n    code: CountryCode.Iran,\n    name: 'Iran',\n    native: '\u0627\u06CC\u0631\u0627\u0646',\n  },\n  id: LocaleCode.FarsiIran,\n  language: {\n    code: LanguageCode.Farsi,\n    name: 'Farsi',\n    native: '\u0641\u0627\u0631\u0633\u06CC',\n  },\n  name: 'Farsi (Iran)',\n  native_name: '\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)',\n  rtl: true,\n};\n\nexport const Filipino: Locale = {\n  id: LocaleCode.Filipino,\n  language: {\n    code: LanguageCode.Filipino,\n    name: 'Filipino',\n    native: 'Filipino',\n  },\n  name: 'Filipino',\n  native_name: 'Filipino',\n  rtl: false,\n};\n\nexport const FilipinoPhilippines: Locale = {\n  country: {\n    code: CountryCode.Philippines,\n    name: 'Philippines',\n    native: 'Pilipinas',\n  },\n  id: LocaleCode.FilipinoPhilippines,\n  language: {\n    code: LanguageCode.Filipino,\n    name: 'Filipino',\n    native: 'Filipino',\n  },\n  name: 'Filipino (Philippines)',\n  native_name: 'Filipino (Pilipinas)',\n  rtl: false,\n};\n\nexport const Finnish: Locale = {\n  id: LocaleCode.Finnish,\n  language: {\n    code: LanguageCode.Finnish,\n    name: 'Finnish',\n    native: 'Suomi',\n  },\n  name: 'Finnish',\n  native_name: 'Suomi',\n  rtl: false,\n};\n\nexport const FinnishFinland: Locale = {\n  country: {\n    code: CountryCode.Finland,\n    name: 'Finland',\n    native: 'Suomi',\n  },\n  id: LocaleCode.FinnishFinland,\n  language: {\n    code: LanguageCode.Finnish,\n    name: 'Finnish',\n    native: 'Suomi',\n  },\n  name: 'Finnish (Finland)',\n  native_name: 'Suomi (Suomi)',\n  rtl: false,\n};\n\nexport const French: Locale = {\n  id: LocaleCode.French,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French',\n  native_name: 'Fran\u00E7ais',\n  rtl: false,\n};\n\nexport const FrenchBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgique',\n  },\n  id: LocaleCode.FrenchBelgium,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Belgium)',\n  native_name: 'Fran\u00E7ais (Belgique)',\n  rtl: false,\n};\n\nexport const FrenchCanada: Locale = {\n  country: {\n    code: CountryCode.Canada,\n    name: 'Canada',\n    native: 'Canada',\n  },\n  id: LocaleCode.FrenchCanada,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Canada)',\n  native_name: 'Fran\u00E7ais (Canada)',\n  rtl: false,\n};\n\nexport const FrenchFrance: Locale = {\n  country: {\n    code: CountryCode.France,\n    name: 'France',\n    native: 'France',\n  },\n  id: LocaleCode.FrenchFrance,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (France)',\n  native_name: 'Fran\u00E7ais (France)',\n  rtl: false,\n};\n\nexport const FrenchLuxembourg: Locale = {\n  country: {\n    code: CountryCode.Luxembourg,\n    name: 'Luxembourg',\n    native: 'Luxembourg',\n  },\n  id: LocaleCode.FrenchLuxembourg,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Luxembourg)',\n  native_name: 'Fran\u00E7ais (Luxembourg)',\n  rtl: false,\n};\n\nexport const FrenchMonaco: Locale = {\n  country: {\n    code: CountryCode.Monaco,\n    name: 'Monaco',\n    native: 'Monaco',\n  },\n  id: LocaleCode.FrenchMonaco,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Monaco)',\n  native_name: 'Fran\u00E7ais (Monaco)',\n  rtl: false,\n};\n\nexport const FrenchReunion: Locale = {\n  country: {\n    code: CountryCode.Reunion,\n    name: 'Reunion',\n    native: 'La R\u00E9union',\n  },\n  id: LocaleCode.FrenchReunion,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Reunion)',\n  native_name: 'Fran\u00E7ais (La R\u00E9union)',\n  rtl: false,\n};\n\nexport const FrenchSwitzerland: Locale = {\n  country: {\n    code: CountryCode.Switzerland,\n    name: 'Switzerland',\n    native: 'Suisse',\n  },\n  id: LocaleCode.FrenchSwitzerland,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Switzerland)',\n  native_name: 'Fran\u00E7ais (Suisse)',\n  rtl: false,\n};\n\nexport const Frisian: Locale = {\n  id: LocaleCode.Frisian,\n  language: {\n    code: LanguageCode.Frisian,\n    name: 'Frisian',\n    native: 'Frysk',\n  },\n  name: 'Frisian',\n  native_name: 'Frysk',\n  rtl: false,\n};\n\nexport const FrisianNetherlands: Locale = {\n  country: {\n    code: CountryCode.Netherlands,\n    name: 'Netherlands',\n    native: 'Nederland',\n  },\n  id: LocaleCode.FrisianNetherlands,\n  language: {\n    code: LanguageCode.Frisian,\n    name: 'Frisian',\n    native: 'Frysk',\n  },\n  name: 'Frisian (Netherlands)',\n  native_name: 'Frysk (Nederland)',\n  rtl: false,\n};\n\nexport const Galician: Locale = {\n  id: LocaleCode.Galician,\n  language: {\n    code: LanguageCode.Galician,\n    name: 'Galician',\n    native: 'Galego',\n  },\n  name: 'Galician',\n  native_name: 'Galego',\n  rtl: false,\n};\n\nexport const GalicianSpain: Locale = {\n  country: {\n    code: CountryCode.Spain,\n    name: 'Spain',\n    native: 'Espa\u00F1a',\n  },\n  id: LocaleCode.GalicianSpain,\n  language: {\n    code: LanguageCode.Galician,\n    name: 'Galician',\n    native: 'Galego',\n  },\n  name: 'Galician (Spain)',\n  native_name: 'Galego (Espa\u00F1a)',\n  rtl: false,\n};\n\nexport const Georgian: Locale = {\n  id: LocaleCode.Georgian,\n  language: {\n    code: LanguageCode.Georgian,\n    name: 'Georgian',\n    native: '\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8',\n  },\n  name: 'Georgian',\n  native_name: '\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8',\n  rtl: false,\n};\n\nexport const GeorgianGeorgia: Locale = {\n  country: {\n    code: CountryCode.Georgia,\n    name: 'Georgia',\n    native: '\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD',\n  },\n  id: LocaleCode.GeorgianGeorgia,\n  language: {\n    code: LanguageCode.Georgian,\n    name: 'Georgian',\n    native: '\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8',\n  },\n  name: 'Georgian (Georgia)',\n  native_name: '\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)',\n  rtl: false,\n};\n\nexport const German: Locale = {\n  id: LocaleCode.German,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German',\n  native_name: 'Deutsch',\n  rtl: false,\n};\n\nexport const GermanAustria: Locale = {\n  country: {\n    code: CountryCode.Austria,\n    name: 'Austria',\n    native: '\u00D6sterreich',\n  },\n  id: LocaleCode.GermanAustria,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Austria)',\n  native_name: 'Deutsch (\u00D6sterreich)',\n  rtl: false,\n};\n\nexport const GermanBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgi\u00EB',\n  },\n  id: LocaleCode.GermanBelgium,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Belgium)',\n  native_name: 'Deutsch (Belgi\u00EB)',\n  rtl: false,\n};\n\nexport const GermanSwitzerland: Locale = {\n  country: {\n    code: CountryCode.Switzerland,\n    name: 'Switzerland',\n    native: 'Suisse',\n  },\n  id: LocaleCode.GermanSwitzerland,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Switzerland)',\n  native_name: 'Deutsch (Suisse)',\n  rtl: false,\n};\n\nexport const GermanLiechtenstein: Locale = {\n  country: {\n    code: CountryCode.Liechtenstein,\n    name: 'Liechtenstein',\n    native: 'Liechtenstein',\n  },\n  id: LocaleCode.GermanLiechtenstein,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Liechtenstein)',\n  native_name: 'Deutsch (Liechtenstein)',\n  rtl: false,\n};\n\nexport const GermanLuxembourg: Locale = {\n  country: {\n    code: CountryCode.Luxembourg,\n    name: 'Luxembourg',\n    native: 'Luxembourg',\n  },\n  id: LocaleCode.GermanLuxembourg,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Luxembourg)',\n  native_name: 'Deutsch (Luxembourg)',\n  rtl: false,\n};\n\nexport const Greek: Locale = {\n  id: LocaleCode.Greek,\n  language: {\n    code: LanguageCode.Greek,\n    name: 'Greek',\n    native: '\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC',\n  },\n  name: 'Greek',\n  native_name: '\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC',\n  rtl: false,\n};\n\nexport const GreekGreece: Locale = {\n  country: {\n    code: CountryCode.Greece,\n    name: 'Greece',\n    native: '\u0395\u03BB\u03BB\u03AC\u03B4\u03B1',\n  },\n  id: LocaleCode.GreekGreece,\n  language: {\n    code: LanguageCode.Greek,\n    name: 'Greek',\n    native: '\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC',\n  },\n  name: 'Greek (Greece)',\n  native_name: '\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)',\n  rtl: false,\n};\n\nexport const Greenlandic: Locale = {\n  id: LocaleCode.Greenlandic,\n  language: {\n    code: LanguageCode.Greenlandic,\n    name: 'Greenlandic',\n    native: 'Kalaallisut',\n  },\n  name: 'Greenlandic',\n  native_name: 'Kalaallisut',\n  rtl: false,\n};\n\nexport const GreenlandicGreenland: Locale = {\n  country: {\n    code: CountryCode.Greenland,\n    name: 'Greenland',\n    native: 'Kalaallit Nunaat',\n  },\n  id: LocaleCode.GreenlandicGreenland,\n  language: {\n    code: LanguageCode.Greenlandic,\n    name: 'Greenlandic',\n    native: 'Kalaallisut',\n  },\n  name: 'Greenlandic (Greenland)',\n  native_name: 'Kalaallisut (Kalaallit Nunaat)',\n  rtl: false,\n};\n\nexport const Gujarati: Locale = {\n  id: LocaleCode.Gujarati,\n  language: {\n    code: LanguageCode.Gujarati,\n    name: 'Gujarati',\n    native: '\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0',\n  },\n  name: 'Gujarati',\n  native_name: '\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0',\n  rtl: false,\n};\n\nexport const GujaratiIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.GujaratiIndia,\n  language: {\n    code: LanguageCode.Gujarati,\n    name: 'Gujarati',\n    native: '\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0',\n  },\n  name: 'Gujarati (India)',\n  native_name: '\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Hausa: Locale = {\n  id: LocaleCode.Hausa,\n  language: {\n    code: LanguageCode.Hausa,\n    name: 'Hausa',\n    native: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  },\n  name: 'Hausa',\n  native_name: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  rtl: false,\n};\n\nexport const HausaGhana: Locale = {\n  country: {\n    code: CountryCode.Ghana,\n    name: 'Ghana',\n    native: 'Ghana',\n  },\n  id: LocaleCode.HausaGhana,\n  language: {\n    code: LanguageCode.Hausa,\n    name: 'Hausa',\n    native: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  },\n  name: 'Hausa (Ghana)',\n  native_name: '\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)',\n  rtl: false,\n};\n\nexport const HausaNiger: Locale = {\n  country: {\n    code: CountryCode.Niger,\n    name: 'Niger',\n    native: 'Niger',\n  },\n  id: LocaleCode.HausaNiger,\n  language: {\n    code: LanguageCode.Hausa,\n    name: 'Hausa',\n    native: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  },\n  name: 'Hausa (Niger)',\n  native_name: '\u0647\u064E\u0648\u064F\u0633\u064E (Niger)',\n  rtl: false,\n};\n\nexport const HausaNigeria: Locale = {\n  country: {\n    code: CountryCode.Nigeria,\n    name: 'Nigeria',\n    native: 'Nigeria',\n  },\n  id: LocaleCode.HausaNigeria,\n  language: {\n    code: LanguageCode.Hausa,\n    name: 'Hausa',\n    native: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  },\n  name: 'Hausa (Nigeria)',\n  native_name: '\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)',\n  rtl: false,\n};\n\nexport const Hebrew: Locale = {\n  id: LocaleCode.Hebrew,\n  language: {\n    code: LanguageCode.Hebrew,\n    name: 'Hebrew',\n    native: '\u05E2\u05D1\u05E8\u05D9\u05EA',\n  },\n  name: 'Hebrew',\n  native_name: '\u05E2\u05D1\u05E8\u05D9\u05EA',\n  rtl: true,\n};\n\n// TODO: Figure this out since Github is censoring it\nexport const HebrewIsrael: Locale = {\n  country: {\n    code: CountryCode.Israel,\n    name: 'Hebrew',\n    native: '',\n  },\n  id: LocaleCode.HebrewIsrael,\n  language: {\n    code: LanguageCode.Hebrew,\n    name: 'Hebrew',\n    native: '',\n  },\n  name: 'Hebrew (Israel)',\n  native_name: '',\n  rtl: true,\n};\n\nexport const Hindi: Locale = {\n  id: LocaleCode.Hindi,\n  language: {\n    code: LanguageCode.Hindi,\n    name: 'Hindi',\n    native: '\u0939\u093F\u0928\u094D\u0926\u0940',\n  },\n  name: 'Hindi',\n  native_name: '\u0939\u093F\u0928\u094D\u0926\u0940',\n  rtl: false,\n};\n\nexport const HindiIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.HindiIndia,\n  language: {\n    code: LanguageCode.Hindi,\n    name: 'Hindi',\n    native: '\u092D\u093E\u0930\u0924\u0940\u092F',\n  },\n  name: 'Hindi (India)',\n  native_name: '\u092D\u093E\u0930\u0924\u0940\u092F',\n  rtl: false,\n};\n\nexport const Hungarian: Locale = {\n  id: LocaleCode.Hungarian,\n  language: {\n    code: LanguageCode.Hungarian,\n    name: 'Hungarian',\n    native: 'Magyar',\n  },\n  name: 'Hungarian',\n  native_name: 'Magyar',\n  rtl: false,\n};\n\nexport const HungarianHungary: Locale = {\n  country: {\n    code: CountryCode.Hungary,\n    name: 'Hungary',\n    native: 'Magyarorsz\u00E1g',\n  },\n  id: LocaleCode.HungarianHungary,\n  language: {\n    code: LanguageCode.Hungarian,\n    name: 'Hungarian',\n    native: 'Magyar',\n  },\n  name: 'Hungarian (Hungary)',\n  native_name: 'Magyar (Magyarorsz\u00E1g)',\n  rtl: false,\n};\n\nexport const Icelandic: Locale = {\n  id: LocaleCode.Icelandic,\n  language: {\n    code: LanguageCode.Icelandic,\n    name: 'Icelandic',\n    native: '\u00CDslenska',\n  },\n  name: 'Icelandic',\n  native_name: '\u00CDslenska',\n  rtl: false,\n};\n\nexport const IcelandicIceland: Locale = {\n  country: {\n    code: CountryCode.Iceland,\n    name: 'Iceland',\n    native: '\u00CDsland',\n  },\n  id: LocaleCode.IcelandicIceland,\n  language: {\n    code: LanguageCode.Icelandic,\n    name: 'Icelandic',\n    native: '\u00CDslenska',\n  },\n  name: 'Icelandic (Iceland)',\n  native_name: '\u00CDslenska (\u00CDsland)',\n  rtl: false,\n};\n\nexport const Igbo: Locale = {\n  id: LocaleCode.Igbo,\n  language: {\n    code: LanguageCode.Igbo,\n    name: 'Igbo',\n    native: 'Igbo',\n  },\n  name: 'Igbo',\n  native_name: 'Igbo',\n  rtl: false,\n};\n\nexport const Indonesian: Locale = {\n  id: LocaleCode.Indonesian,\n  language: {\n    code: LanguageCode.Indonesian,\n    name: 'Indonesian',\n    native: 'Bahasa Indonesia',\n  },\n  name: 'Indonesian',\n  native_name: 'Bahasa Indonesia',\n  rtl: false,\n};\n\nexport const IndonesianIndonesia: Locale = {\n  country: {\n    code: CountryCode.Indonesia,\n    name: 'Indonesia',\n    native: 'Indonesia',\n  },\n  id: LocaleCode.IndonesianIndonesia,\n  language: {\n    code: LanguageCode.Indonesian,\n    name: 'Indonesian',\n    native: 'Bahasa Indonesia',\n  },\n  name: 'Indonesian (Indonesia)',\n  native_name: 'Bahasa Indonesia (Indonesia)',\n  rtl: false,\n};\n\nexport const Irish: Locale = {\n  id: LocaleCode.Irish,\n  language: {\n    code: LanguageCode.Irish,\n    name: 'Irish',\n    native: 'Gaeilge',\n  },\n  name: 'Irish',\n  native_name: 'Gaeilge',\n  rtl: false,\n};\n\nexport const IrishIreland: Locale = {\n  country: {\n    code: CountryCode.Ireland,\n    name: 'Ireland',\n    native: '\u00C9ire',\n  },\n  id: LocaleCode.IrishIreland,\n  language: {\n    code: LanguageCode.Irish,\n    name: 'Irish',\n    native: 'Gaeilge',\n  },\n  name: 'Irish (Ireland)',\n  native_name: 'Gaeilge (\u00C9ire)',\n  rtl: false,\n};\n\nexport const Italian: Locale = {\n  id: LocaleCode.Italian,\n  language: {\n    code: LanguageCode.Italian,\n    name: 'Italian',\n    native: 'Italiano',\n  },\n  name: 'Italian',\n  native_name: 'Italiano',\n  rtl: false,\n};\n\nexport const ItalianItaly: Locale = {\n  country: {\n    code: CountryCode.Italy,\n    name: 'Italy',\n    native: 'Italia',\n  },\n  id: LocaleCode.ItalianItaly,\n  language: {\n    code: LanguageCode.Italian,\n    name: 'Italian',\n    native: 'Italiano',\n  },\n  name: 'Italian (Italy)',\n  native_name: 'Italiano (Italia)',\n  rtl: false,\n};\n\nexport const ItalianSwitzerland: Locale = {\n  country: {\n    code: CountryCode.Switzerland,\n    name: 'Switzerland',\n    native: 'Schweiz',\n  },\n  id: LocaleCode.ItalianSwitzerland,\n  language: {\n    code: LanguageCode.Italian,\n    name: 'Italian',\n    native: 'Italiano',\n  },\n  name: 'Italian (Switzerland)',\n  native_name: 'Italiano (Svizzera)',\n  rtl: false,\n};\n\nexport const Japanese: Locale = {\n  id: LocaleCode.Japanese,\n  language: {\n    code: LanguageCode.Japanese,\n    name: 'Japanese',\n    native: '\u65E5\u672C\u8A9E',\n  },\n  name: 'Japanese',\n  native_name: '\u65E5\u672C\u8A9E',\n  rtl: false,\n};\n\nexport const JapaneseJapan: Locale = {\n  country: {\n    code: CountryCode.Japan,\n    name: 'Japan',\n    native: '\u65E5\u672C',\n  },\n  id: LocaleCode.JapaneseJapan,\n  language: {\n    code: LanguageCode.Japanese,\n    name: 'Japanese',\n    native: '\u65E5\u672C\u8A9E',\n  },\n  name: 'Japanese (Japan)',\n  native_name: '\u65E5\u672C\u8A9E (\u65E5\u672C)',\n  rtl: false,\n};\n\nexport const Kannada: Locale = {\n  id: LocaleCode.Kannada,\n  language: {\n    code: LanguageCode.Kannada,\n    name: 'Kannada',\n    native: '\u0C95\u0CA8\u0CCD\u0CA8\u0CA1',\n  },\n  name: 'Kannada',\n  native_name: '\u0C95\u0CA8\u0CCD\u0CA8\u0CA1',\n  rtl: false,\n};\n\nexport const KannadaIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0CAD\u0CBE\u0CB0\u0CA4',\n  },\n  id: LocaleCode.KannadaIndia,\n  language: {\n    code: LanguageCode.Kannada,\n    name: 'Kannada',\n    native: '\u0C95\u0CA8\u0CCD\u0CA8\u0CA1',\n  },\n  name: 'Kannada (India)',\n  native_name: '\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)',\n  rtl: false,\n};\n\nexport const Kazakh: Locale = {\n  id: LocaleCode.Kazakh,\n  language: {\n    code: LanguageCode.Kazakh,\n    name: 'Kazakh',\n    native: '\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456',\n  },\n  name: 'Kazakh',\n  native_name: '\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456',\n  rtl: false,\n};\n\nexport const KazakhKazakhstan: Locale = {\n  country: {\n    code: CountryCode.Kazakhstan,\n    name: 'Kazakhstan',\n    native: '\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D',\n  },\n  id: LocaleCode.KazakhKazakhstan,\n  language: {\n    code: LanguageCode.Kazakh,\n    name: 'Kazakh',\n    native: '\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456',\n  },\n  name: 'Kazakh (Kazakhstan)',\n  native_name: '\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)',\n  rtl: false,\n};\n\nexport const Khmer: Locale = {\n  id: LocaleCode.Khmer,\n  language: {\n    code: LanguageCode.Khmer,\n    name: 'Khmer',\n    native: '\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A',\n  },\n  name: 'Khmer',\n  native_name: '\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A',\n  rtl: false,\n};\n\nexport const KhmerCambodia: Locale = {\n  country: {\n    code: CountryCode.Cambodia,\n    name: 'Cambodia',\n    native: '\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6',\n  },\n  id: LocaleCode.KhmerCambodia,\n  language: {\n    code: LanguageCode.Khmer,\n    name: 'Khmer',\n    native: '\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A',\n  },\n  name: 'Khmer (Cambodia)',\n  native_name: '\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)',\n  rtl: false,\n};\n\nexport const Konkani: Locale = {\n  id: LocaleCode.Konkani,\n  language: {\n    code: LanguageCode.Konkani,\n    name: 'Konkani',\n    native: '\u0915\u094B\u0902\u0915\u0923\u0940',\n  },\n  name: 'Konkani',\n  native_name: '\u0915\u094B\u0902\u0915\u0923\u0940',\n  rtl: false,\n};\n\nexport const KonkaniIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.KonkaniIndia,\n  language: {\n    code: LanguageCode.Konkani,\n    name: 'Konkani',\n    native: '\u0915\u094B\u0902\u0915\u0923\u0940',\n  },\n  name: 'Konkani (India)',\n  native_name: '\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Korean: Locale = {\n  id: LocaleCode.Korean,\n  language: {\n    code: LanguageCode.Korean,\n    name: 'Korean',\n    native: '\uD55C\uAD6D\uC5B4',\n  },\n  name: 'Korean',\n  native_name: '\uD55C\uAD6D\uC5B4',\n  rtl: false,\n};\n\nexport const KoreanSouthKorea: Locale = {\n  country: {\n    code: CountryCode.SouthKorea,\n    name: 'South Korea',\n    native: '\uB300\uD55C\uBBFC\uAD6D',\n  },\n  id: LocaleCode.KoreanSouthKorea,\n  language: {\n    code: LanguageCode.Korean,\n    name: 'Korean',\n    native: '\uD55C\uAD6D\uC5B4',\n  },\n  name: 'Korean (South Korea)',\n  native_name: '\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)',\n  rtl: false,\n};\n\nexport const Kurdish: Locale = {\n  id: LocaleCode.Kurdish,\n  language: {\n    code: LanguageCode.Kurdish,\n    name: 'Kurdish',\n    native: 'Kurd\u00EE',\n  },\n  name: 'Kurdish',\n  native_name: 'Kurd\u00EE',\n  rtl: false,\n};\n\nexport const KurdishIraq: Locale = {\n  country: {\n    code: CountryCode.Iraq,\n    name: 'Iraq',\n    native: '\u0627\u0644\u0639\u0631\u0627\u0642',\n  },\n  id: LocaleCode.KurdishIraq,\n  language: {\n    code: LanguageCode.Kurdish,\n    name: 'Kurdish',\n    native: 'Kurd\u00EE',\n  },\n  name: 'Kurdish (Iraq)',\n  native_name: 'Kurd\u00EE (\u0627\u0644\u0639\u0631\u0627\u0642)',\n  rtl: false,\n};\n\nexport const KurdishTurkey: Locale = {\n  country: {\n    code: CountryCode.Turkey,\n    name: 'Turkey',\n    native: 'T\u00FCrkiye',\n  },\n  id: LocaleCode.KurdishTurkey,\n  language: {\n    code: LanguageCode.Kurdish,\n    name: 'Kurdish',\n    native: 'Kurd\u00EE',\n  },\n  name: 'Kurdish (Turkey)',\n  native_name: 'Kurd\u00EE (T\u00FCrkiye)',\n  rtl: false,\n};\n\nexport const Kyrgyz: Locale = {\n  id: LocaleCode.Kyrgyz,\n  language: {\n    code: LanguageCode.Kyrgyz,\n    name: 'Kyrgyz',\n    native: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430',\n  },\n  name: 'Kyrgyz',\n  native_name: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430',\n  rtl: false,\n};\n\nexport const KyrgyzKyrgyzstan: Locale = {\n  country: {\n    code: CountryCode.Kyrgyzstan,\n    name: 'Kyrgyzstan',\n    native: '\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D',\n  },\n  id: LocaleCode.KyrgyzKyrgyzstan,\n  language: {\n    code: LanguageCode.Kyrgyz,\n    name: 'Kyrgyz',\n    native: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430',\n  },\n  name: 'Kyrgyz (Kyrgyzstan)',\n  native_name: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)',\n  rtl: false,\n};\n\nexport const Lao: Locale = {\n  id: LocaleCode.Lao,\n  language: {\n    code: LanguageCode.Lao,\n    name: 'Lao',\n    native: '\u0EA5\u0EB2\u0EA7',\n  },\n  name: 'Lao',\n  native_name: '\u0EA5\u0EB2\u0EA7',\n  rtl: false,\n};\n\nexport const LaoLaos: Locale = {\n  country: {\n    code: CountryCode.Laos,\n    name: 'Laos',\n    native: '\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95',\n  },\n  id: LocaleCode.LaoLaos,\n  language: {\n    code: LanguageCode.Lao,\n    name: 'Lao',\n    native: '\u0EA5\u0EB2\u0EA7',\n  },\n  name: 'Lao (Laos)',\n  native_name: '\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)',\n  rtl: false,\n};\n\nexport const Latvian: Locale = {\n  id: LocaleCode.Latvian,\n  language: {\n    code: LanguageCode.Latvian,\n    name: 'Latvian',\n    native: 'Latvie\u0161u',\n  },\n  name: 'Latvian',\n  native_name: 'Latvie\u0161u',\n  rtl: false,\n};\n\nexport const LatvianLatvia: Locale = {\n  country: {\n    code: CountryCode.Latvia,\n    name: 'Latvia',\n    native: 'Latvija',\n  },\n  id: LocaleCode.LatvianLatvia,\n  language: {\n    code: LanguageCode.Latvian,\n    name: 'Latvian',\n    native: 'Latvie\u0161u',\n  },\n  name: 'Latvian (Latvia)',\n  native_name: 'Latvie\u0161u (Latvija)',\n  rtl: false,\n};\n\nexport const Lithuanian: Locale = {\n  id: LocaleCode.Lithuanian,\n  language: {\n    code: LanguageCode.Lithuanian,\n    name: 'Lithuanian',\n    native: 'Lietuvi\u0173',\n  },\n  name: 'Lithuanian',\n  native_name: 'Lietuvi\u0173',\n  rtl: false,\n};\n\nexport const LithuanianLithuania: Locale = {\n  country: {\n    code: CountryCode.Lithuania,\n    name: 'Lithuania',\n    native: 'Lietuva',\n  },\n  id: LocaleCode.LithuanianLithuania,\n  language: {\n    code: LanguageCode.Lithuanian,\n    name: 'Lithuanian',\n    native: 'Lietuvi\u0173',\n  },\n  name: 'Lithuanian (Lithuania)',\n  native_name: 'Lietuvi\u0173 (Lietuva)',\n  rtl: false,\n};\n\nexport const Luxembourgish: Locale = {\n  id: LocaleCode.Luxembourgish,\n  language: {\n    code: LanguageCode.Luxembourgish,\n    name: 'Luxembourgish',\n    native: 'L\u00EBtzebuergesch',\n  },\n  name: 'Luxembourgish',\n  native_name: 'L\u00EBtzebuergesch',\n  rtl: false,\n};\n\nexport const LuxembourgishBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgi\u00EB',\n  },\n  id: LocaleCode.LuxembourgishBelgium,\n  language: {\n    code: LanguageCode.Luxembourgish,\n    name: 'Luxembourgish',\n    native: 'L\u00EBtzebuergesch',\n  },\n  name: 'Luxembourgish (Belgium)',\n  native_name: 'L\u00EBtzebuergesch (Belgi\u00EB)',\n  rtl: false,\n};\n\nexport const LuxembourgishLuxembourg: Locale = {\n  country: {\n    code: CountryCode.Luxembourg,\n    name: 'Luxembourg',\n    native: 'Luxembourg',\n  },\n  id: LocaleCode.LuxembourgishLuxembourg,\n  language: {\n    code: LanguageCode.Luxembourgish,\n    name: 'Luxembourgish',\n    native: 'L\u00EBtzebuergesch',\n  },\n  name: 'Luxembourgish (Luxembourg)',\n  native_name: 'L\u00EBtzebuergesch (Luxembourg)',\n  rtl: false,\n};\n\nexport const Macedonian: Locale = {\n  id: LocaleCode.Macedonian,\n  language: {\n    code: LanguageCode.Macedonian,\n    name: 'Macedonian',\n    native: '\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438',\n  },\n  name: 'Macedonian',\n  native_name: '\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438',\n  rtl: false,\n};\n\nexport const MacedonianNorthMacedonia: Locale = {\n  country: {\n    code: CountryCode.NorthMacedonia,\n    name: 'Macedonia',\n    native: '\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430',\n  },\n  id: LocaleCode.MacedonianNorthMacedonia,\n  language: {\n    code: LanguageCode.Macedonian,\n    name: 'Macedonian',\n    native: '\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438',\n  },\n  name: 'Macedonian (North Macedonia)',\n  native_name: '\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)',\n  rtl: false,\n};\n\nexport const Malay: Locale = {\n  id: LocaleCode.Malay,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay',\n  native_name: 'Bahasa Melayu',\n  rtl: false,\n};\n\nexport const MalayBrunei: Locale = {\n  country: {\n    code: CountryCode.Brunei,\n    name: 'Brunei',\n    native: 'Negara Brunei Darussalam',\n  },\n  id: LocaleCode.MalayBrunei,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay (Brunei)',\n  native_name: 'Bahasa Melayu (Negara Brunei Darussalam)',\n  rtl: false,\n};\n\nexport const MalayMalaysia: Locale = {\n  country: {\n    code: CountryCode.Malaysia,\n    name: 'Malaysia',\n    native: 'Malaysia',\n  },\n  id: LocaleCode.MalayMalaysia,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay (Malaysia)',\n  native_name: 'Bahasa Melayu (Malaysia)',\n  rtl: false,\n};\n\nexport const MalaySingapore: Locale = {\n  country: {\n    code: CountryCode.Singapore,\n    name: 'Singapore',\n    native: 'Singapore',\n  },\n  id: LocaleCode.MalaySingapore,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay (Singapore)',\n  native_name: 'Bahasa Melayu (Singapore)',\n  rtl: false,\n};\n\nexport const MalayIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.MalayIndia,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay (India)',\n  native_name: 'Bahasa Melayu (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Maltese: Locale = {\n  id: LocaleCode.Maltese,\n  language: {\n    code: LanguageCode.Maltese,\n    name: 'Maltese',\n    native: 'Malti',\n  },\n  name: 'Maltese',\n  native_name: 'Malti',\n  rtl: false,\n};\n\nexport const MalteseMalta: Locale = {\n  country: {\n    code: CountryCode.Malta,\n    name: 'Malta',\n    native: 'Malta',\n  },\n  id: LocaleCode.MalteseMalta,\n  language: {\n    code: LanguageCode.Maltese,\n    name: 'Maltese',\n    native: 'Malti',\n  },\n  name: 'Maltese (Malta)',\n  native_name: 'Malti (Malta)',\n  rtl: false,\n};\n\nexport const Maori: Locale = {\n  id: LocaleCode.Maori,\n  language: {\n    code: LanguageCode.Maori,\n    name: 'Maori',\n    native: 'M\u0101ori',\n  },\n  name: 'Maori',\n  native_name: 'M\u0101ori',\n  rtl: false,\n};\n\nexport const MaoriNewZealand: Locale = {\n  country: {\n    code: CountryCode.NewZealand,\n    name: 'New Zealand',\n    native: 'New Zealand',\n  },\n  id: LocaleCode.MaoriNewZealand,\n  language: {\n    code: LanguageCode.Maori,\n    name: 'Maori',\n    native: 'M\u0101ori',\n  },\n  name: 'Maori (New Zealand)',\n  native_name: 'M\u0101ori (New Zealand)',\n  rtl: false,\n};\n\nexport const Marathi: Locale = {\n  id: LocaleCode.Marathi,\n  language: {\n    code: LanguageCode.Marathi,\n    name: 'Marathi',\n    native: '\u092E\u0930\u093E\u0920\u0940',\n  },\n  name: 'Marathi',\n  native_name: '\u092E\u0930\u093E\u0920\u0940',\n  rtl: false,\n};\n\nexport const MarathiIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.MarathiIndia,\n  language: {\n    code: LanguageCode.Marathi,\n    name: 'Marathi',\n    native: '\u092E\u0930\u093E\u0920\u0940',\n  },\n  name: 'Marathi (India)',\n  native_name: '\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Mongolian: Locale = {\n  id: LocaleCode.Mongolian,\n  language: {\n    code: LanguageCode.Mongolian,\n    name: 'Mongolian',\n    native: '\u041C\u043E\u043D\u0433\u043E\u043B',\n  },\n  name: 'Mongolian',\n  native_name: '\u041C\u043E\u043D\u0433\u043E\u043B',\n  rtl: false,\n};\n\nexport const MongolianMongolia: Locale = {\n  country: {\n    code: CountryCode.Mongolia,\n    name: 'Mongolia',\n    native: '\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441',\n  },\n  id: LocaleCode.MongolianMongolia,\n  language: {\n    code: LanguageCode.Mongolian,\n    name: 'Mongolian',\n    native: '\u041C\u043E\u043D\u0433\u043E\u043B',\n  },\n  name: 'Mongolian (Mongolia)',\n  native_name: '\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)',\n  rtl: false,\n};\n\nexport const Montenegrin: Locale = {\n  id: LocaleCode.Montenegrin,\n  language: {\n    code: LanguageCode.Montenegrin,\n    name: 'Montenegrin',\n    native: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A',\n  },\n  name: 'Montenegrin',\n  native_name: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A',\n  rtl: false,\n};\n\nexport const MontenegrinMontenegro: Locale = {\n  country: {\n    code: CountryCode.Montenegro,\n    name: 'Montenegro',\n    native: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A',\n  },\n  id: LocaleCode.MontenegrinMontenegro,\n  language: {\n    code: LanguageCode.Montenegrin,\n    name: 'Montenegrin',\n    native: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A',\n  },\n  name: 'Montenegrin (Montenegro)',\n  native_name: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)',\n  rtl: false,\n};\n\nexport const Nepali: Locale = {\n  id: LocaleCode.Nepali,\n  language: {\n    code: LanguageCode.Nepali,\n    name: 'Nepali',\n    native: '\u0928\u0947\u092A\u093E\u0932\u0940',\n  },\n  name: 'Nepali',\n  native_name: '\u0928\u0947\u092A\u093E\u0932\u0940',\n  rtl: false,\n};\n\nexport const NepaliNepal: Locale = {\n  country: {\n    code: CountryCode.Nepal,\n    name: 'Nepal',\n    native: '\u0928\u0947\u092A\u093E\u0932',\n  },\n  id: LocaleCode.NepaliNepal,\n  language: {\n    code: LanguageCode.Nepali,\n    name: 'Nepali',\n    native: '\u0928\u0947\u092A\u093E\u0932\u0940',\n  },\n  name: 'Nepali (Nepal)',\n  native_name: '\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)',\n  rtl: false,\n};\n\nexport const NorthernSotho: Locale = {\n  id: LocaleCode.NorthernSotho,\n  language: {\n    code: LanguageCode.NorthernSotho,\n    name: 'Northern Sotho',\n    native: 'Sesotho sa Leboa',\n  },\n  name: 'Northern Sotho',\n  native_name: 'Sesotho sa Leboa',\n  rtl: false,\n};\n\nexport const NorthernSothoSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.NorthernSothoSouthAfrica,\n  language: {\n    code: LanguageCode.NorthernSotho,\n    name: 'Northern Sotho',\n    native: 'Sesotho sa Leboa',\n  },\n  name: 'Northern Sotho (South Africa)',\n  native_name: 'Sesotho sa Leboa (South Africa)',\n  rtl: false,\n};\n\nexport const Norwegian: Locale = {\n  id: LocaleCode.Norwegian,\n  language: {\n    code: LanguageCode.Norwegian,\n    name: 'Norwegian',\n    native: 'Norsk',\n  },\n  name: 'Norwegian',\n  native_name: 'Norsk',\n  rtl: false,\n};\n\nexport const NorwegianBokmalNorway: Locale = {\n  country: {\n    code: CountryCode.Norway,\n    name: 'Norway',\n    native: 'Norge',\n  },\n  id: LocaleCode.NorwegianBokmalNorway,\n  language: {\n    code: LanguageCode.NorwegianBokmal,\n    name: 'Norwegian',\n    native: 'Norsk',\n  },\n  name: 'Norwegian (Bokmal)',\n  native_name: 'Norsk (Bokm\u00E5l)',\n  rtl: false,\n};\n\nexport const NorwegianNynorskNorway: Locale = {\n  country: {\n    code: CountryCode.Norway,\n    name: 'Norway',\n    native: 'Norge',\n  },\n  id: LocaleCode.NorwegianNynorskNorway,\n  language: {\n    code: LanguageCode.NorwegianNynorsk,\n    name: 'Norwegian',\n    native: 'Norsk',\n  },\n  name: 'Norwegian (Nynorsk)',\n  native_name: 'Norsk (Nynorsk)',\n  rtl: false,\n};\n\nexport const Oriya: Locale = {\n  id: LocaleCode.Oriya,\n  language: {\n    code: LanguageCode.Oriya,\n    name: 'Oriya',\n    native: '\u0B13\u0B21\u0B3C\u0B3F\u0B06',\n  },\n  name: 'Oriya',\n  native_name: '\u0B13\u0B21\u0B3C\u0B3F\u0B06',\n  rtl: false,\n};\n\nexport const OriyaIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE',\n  },\n  id: LocaleCode.OriyaIndia,\n  language: {\n    code: LanguageCode.Oriya,\n    name: 'Oriya',\n    native: '\u0B13\u0B21\u0B3C\u0B3F\u0B06',\n  },\n  name: 'Oriya (India)',\n  native_name: '\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)',\n  rtl: false,\n};\n\nexport const Pashto: Locale = {\n  id: LocaleCode.Pashto,\n  language: {\n    code: LanguageCode.Pashto,\n    name: 'Pashto',\n    native: '\u067E\u069A\u062A\u0648',\n  },\n  name: 'Pashto',\n  native_name: '\u067E\u069A\u062A\u0648',\n  rtl: true,\n};\n\nexport const PashtoAfghanistan: Locale = {\n  country: {\n    code: CountryCode.Afghanistan,\n    name: 'Afghanistan',\n    native: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n  },\n  id: LocaleCode.PashtoAfghanistan,\n  language: {\n    code: LanguageCode.Pashto,\n    name: 'Pashto',\n    native: '\u067E\u069A\u062A\u0648',\n  },\n  name: 'Pashto (Afghanistan)',\n  native_name: '\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)',\n  rtl: true,\n};\n\nexport const Persian: Locale = {\n  id: LocaleCode.Persian,\n  language: {\n    code: LanguageCode.Persian,\n    name: 'Persian',\n    native: '\u0641\u0627\u0631\u0633\u06CC',\n  },\n  name: 'Persian',\n  native_name: '\u0641\u0627\u0631\u0633\u06CC',\n  rtl: true,\n};\n\nexport const PersianIran: Locale = {\n  country: {\n    code: CountryCode.Iran,\n    name: 'Iran',\n    native: '\u0627\u06CC\u0631\u0627\u0646',\n  },\n  id: LocaleCode.PersianIran,\n  language: {\n    code: LanguageCode.Persian,\n    name: 'Persian',\n    native: '\u0641\u0627\u0631\u0633\u06CC',\n  },\n  name: 'Persian (Iran)',\n  native_name: '\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)',\n  rtl: true,\n};\n\nexport const Polish: Locale = {\n  id: LocaleCode.Polish,\n  language: {\n    code: LanguageCode.Polish,\n    name: 'Polish',\n    native: 'Polski',\n  },\n  name: 'Polish',\n  native_name: 'Polski',\n  rtl: false,\n};\n\nexport const PolishPoland: Locale = {\n  country: {\n    code: CountryCode.Poland,\n    name: 'Poland',\n    native: 'Polska',\n  },\n  id: LocaleCode.PolishPoland,\n  language: {\n    code: LanguageCode.Polish,\n    name: 'Polish',\n    native: 'Polski',\n  },\n  name: 'Polish (Poland)',\n  native_name: 'Polski (Polska)',\n  rtl: false,\n};\n\nexport const Portuguese: Locale = {\n  id: LocaleCode.Portuguese,\n  language: {\n    code: LanguageCode.Portuguese,\n    name: 'Portuguese',\n    native: 'Portugu\u00EAs',\n  },\n  name: 'Portuguese',\n  native_name: 'Portugu\u00EAs',\n  rtl: false,\n};\n\nexport const PortugueseBrazil: Locale = {\n  country: {\n    code: CountryCode.Brazil,\n    name: 'Brazil',\n    native: 'Brasil',\n  },\n  id: LocaleCode.PortugueseBrazil,\n  language: {\n    code: LanguageCode.Portuguese,\n    name: 'Portuguese',\n    native: 'Portugu\u00EAs',\n  },\n  name: 'Portuguese (Brazil)',\n  native_name: 'Portugu\u00EAs (Brasil)',\n  rtl: false,\n};\n\nexport const PortuguesePortugal: Locale = {\n  country: {\n    code: CountryCode.Portugal,\n    name: 'Portugal',\n    native: 'Portugal',\n  },\n  id: LocaleCode.PortuguesePortugal,\n  language: {\n    code: LanguageCode.Portuguese,\n    name: 'Portuguese',\n    native: 'Portugu\u00EAs',\n  },\n  name: 'Portuguese (Portugal)',\n  native_name: 'Portugu\u00EAs (Portugal)',\n  rtl: false,\n};\n\nexport const Punjabi: Locale = {\n  id: LocaleCode.Punjabi,\n  language: {\n    code: LanguageCode.Punjabi,\n    name: 'Punjabi',\n    native: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40',\n  },\n  name: 'Punjabi',\n  native_name: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40',\n  rtl: true,\n};\n\nexport const PunjabiPakistan: Locale = {\n  country: {\n    code: CountryCode.Pakistan,\n    name: 'Pakistan',\n    native: '\u067E\u0627\u06A9\u0633\u062A\u0627\u0646',\n  },\n  id: LocaleCode.PunjabiPakistan,\n  language: {\n    code: LanguageCode.Punjabi,\n    name: 'Punjabi',\n    native: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40',\n  },\n  name: 'Punjabi (Pakistan)',\n  native_name: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)',\n  rtl: true,\n};\n\nexport const PunjabiIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0A2D\u0A3E\u0A30\u0A24',\n  },\n  id: LocaleCode.PunjabiIndia,\n  language: {\n    code: LanguageCode.Punjabi,\n    name: 'Punjabi',\n    native: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40',\n  },\n  name: 'Punjabi (India)',\n  native_name: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)',\n  rtl: true,\n};\n\nexport const Quechua: Locale = {\n  id: LocaleCode.Quechua,\n  language: {\n    code: LanguageCode.Quechua,\n    name: 'Quechua',\n    native: 'Runa Simi',\n  },\n  name: 'Quechua',\n  native_name: 'Runa Simi',\n  rtl: false,\n};\n\nexport const QuechuaBolivia: Locale = {\n  country: {\n    code: CountryCode.Bolivia,\n    name: 'Bolivia',\n    native: 'Bolivia',\n  },\n  id: LocaleCode.QuechuaBolivia,\n  language: {\n    code: LanguageCode.Quechua,\n    name: 'Quechua',\n    native: 'Runa Simi',\n  },\n  name: 'Quechua (Bolivia)',\n  native_name: 'Runa Simi (Bolivia)',\n  rtl: false,\n};\n\nexport const QuechuaEcuador: Locale = {\n  country: {\n    code: CountryCode.Ecuador,\n    name: 'Ecuador',\n    native: 'Ecuador',\n  },\n  id: LocaleCode.QuechuaEcuador,\n  language: {\n    code: LanguageCode.Quechua,\n    name: 'Quechua',\n    native: 'Runa Simi',\n  },\n  name: 'Quechua (Ecuador)',\n  native_name: 'Runa Simi (Ecuador)',\n  rtl: false,\n};\n\nexport const QuechuaPeru: Locale = {\n  country: {\n    code: CountryCode.Peru,\n    name: 'Peru',\n    native: 'Per\u00FA',\n  },\n  id: LocaleCode.QuechuaPeru,\n  language: {\n    code: LanguageCode.Quechua,\n    name: 'Quechua',\n    native: 'Runa Simi',\n  },\n  name: 'Quechua (Peru)',\n  native_name: 'Runa Simi (Per\u00FA)',\n  rtl: false,\n};\n\nexport const Romanian: Locale = {\n  id: LocaleCode.Romanian,\n  language: {\n    code: LanguageCode.Romanian,\n    name: 'Romanian',\n    native: 'Rom\u00E2n\u0103',\n  },\n  name: 'Romanian',\n  native_name: 'Rom\u00E2n\u0103',\n  rtl: false,\n};\n\nexport const RomanianRomania: Locale = {\n  country: {\n    code: CountryCode.Romania,\n    name: 'Romania',\n    native: 'Rom\u00E2nia',\n  },\n  id: LocaleCode.RomanianRomania,\n  language: {\n    code: LanguageCode.Romanian,\n    name: 'Romanian',\n    native: 'Rom\u00E2n\u0103',\n  },\n  name: 'Romanian (Romania)',\n  native_name: 'Rom\u00E2n\u0103 (Rom\u00E2nia)',\n  rtl: false,\n};\n\nexport const Russian: Locale = {\n  id: LocaleCode.Russian,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  rtl: false,\n};\n\nexport const RussianRussia: Locale = {\n  country: {\n    code: CountryCode.RussianFederation,\n    name: 'Russian Federation',\n    native: '\u0420\u043E\u0441\u0441\u0438\u044F',\n  },\n  id: LocaleCode.RussianRussia,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian (Russia)',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)',\n  rtl: false,\n};\n\nexport const RussianUkraine: Locale = {\n  country: {\n    code: CountryCode.Ukraine,\n    name: 'Ukraine',\n    native: '\u0423\u043A\u0440\u0430\u0457\u043D\u0430',\n  },\n  id: LocaleCode.RussianUkraine,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian (Ukraine)',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)',\n  rtl: false,\n};\n\nexport const RussianKazakhstan: Locale = {\n  country: {\n    code: CountryCode.Kazakhstan,\n    name: 'Kazakhstan',\n    native: '\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D',\n  },\n  id: LocaleCode.RussianKazakhstan,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian (Kazakhstan)',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)',\n  rtl: false,\n};\n\nexport const RussianKyrgyzstan: Locale = {\n  country: {\n    code: CountryCode.Kyrgyzstan,\n    name: 'Kyrgyzstan',\n    native: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430',\n  },\n  id: LocaleCode.RussianKyrgyzstan,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian (Kyrgyzstan)',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)',\n  rtl: false,\n};\n\nexport const Sanskrit: Locale = {\n  id: LocaleCode.Sanskrit,\n  language: {\n    code: LanguageCode.Sanskrit,\n    name: 'Sanskrit',\n    native: '\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D',\n  },\n  name: 'Sanskrit',\n  native_name: '\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D',\n  rtl: false,\n};\n\nexport const SanskritIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.SanskritIndia,\n  language: {\n    code: LanguageCode.Sanskrit,\n    name: 'Sanskrit',\n    native: '\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D',\n  },\n  name: 'Sanskrit (India)',\n  native_name: '\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Sami: Locale = {\n  id: LocaleCode.Sami,\n  language: {\n    code: LanguageCode.Sami,\n    name: 'Sami',\n    native: 'S\u00E1megiella',\n  },\n  name: 'Sami',\n  native_name: 'S\u00E1megiella',\n  rtl: false,\n};\n\nexport const SamiFinland: Locale = {\n  country: {\n    code: CountryCode.Finland,\n    name: 'Finland',\n    native: 'Suomi',\n  },\n  id: LocaleCode.SamiFinland,\n  language: {\n    code: LanguageCode.Sami,\n    name: 'Sami',\n    native: 'S\u00E1megiella',\n  },\n  name: 'Sami (Finland)',\n  native_name: 'S\u00E1megiella (Suomi)',\n  rtl: false,\n};\n\nexport const SamiNorway: Locale = {\n  country: {\n    code: CountryCode.Norway,\n    name: 'Norway',\n    native: 'Norge',\n  },\n  id: LocaleCode.SamiNorway,\n  language: {\n    code: LanguageCode.Sami,\n    name: 'Sami',\n    native: 'S\u00E1megiella',\n  },\n  name: 'Sami (Norway)',\n  native_name: 'S\u00E1megiella (Norge)',\n  rtl: false,\n};\n\nexport const SamiSweden: Locale = {\n  country: {\n    code: CountryCode.Sweden,\n    name: 'Sweden',\n    native: 'Sverige',\n  },\n  id: LocaleCode.SamiSweden,\n  language: {\n    code: LanguageCode.Sami,\n    name: 'Sami',\n    native: 'S\u00E1megiella',\n  },\n  name: 'Sami (Sweden)',\n  native_name: 'S\u00E1megiella (Sverige)',\n  rtl: false,\n};\n\nexport const Samoan: Locale = {\n  id: LocaleCode.Samoan,\n  language: {\n    code: LanguageCode.Samoan,\n    name: 'Samoan',\n    native: 'Gagana fa\u2019a S\u0101moa',\n  },\n  name: 'Samoan',\n  native_name: 'Gagana fa\u2019a S\u0101moa',\n  rtl: false,\n};\n\nexport const SamoanSamoa: Locale = {\n  country: {\n    code: CountryCode.Samoa,\n    name: 'Samoa',\n    native: 'Samoa',\n  },\n  id: LocaleCode.SamoanSamoa,\n  language: {\n    code: LanguageCode.Samoan,\n    name: 'Samoan',\n    native: 'Gagana fa\u2019a S\u0101moa',\n  },\n  name: 'Samoan (Samoa)',\n  native_name: 'Gagana fa\u2019a S\u0101moa (Samoa)',\n  rtl: false,\n};\n\nexport const Serbian: Locale = {\n  id: LocaleCode.Serbian,\n  language: {\n    code: LanguageCode.Serbian,\n    name: 'Serbian (Latin)',\n    native: 'Srpski (Latinica)',\n  },\n  name: 'Serbian (Latin)',\n  native_name: 'Srpski (Latinica)',\n  rtl: false,\n};\n\nexport const SerbianBosniaAndHerzegovina: Locale = {\n  country: {\n    code: CountryCode.BosniaAndHerzegovina,\n    name: 'Bosnia and Herzegovina',\n    native: 'Bosna i Hercegovina',\n  },\n  id: LocaleCode.SerbianBosniaAndHerzegovina,\n  language: {\n    code: LanguageCode.Serbian,\n    name: 'Serbian (Latin)',\n    native: 'Srpski (Latinica)',\n  },\n  name: 'Serbian (Latin) (Bosnia and Herzegovina)',\n  native_name: 'Srpski (Latinica) (Bosna i Hercegovina)',\n  rtl: false,\n};\n\nexport const SerbianSerbiaAndMontenegro: Locale = {\n  country: {\n    code: CountryCode.SerbiaAndMontenegro,\n    name: 'Serbia and Montenegro',\n    native: 'Srbija i Crna Gora',\n  },\n  id: LocaleCode.SerbianSerbiaAndMontenegro,\n  language: {\n    code: LanguageCode.Serbian,\n    name: 'Serbian (Latin)',\n    native: 'Srpski (Latinica)',\n  },\n  name: 'Serbian (Latin) (Serbia and Montenegro)',\n  native_name: 'Srpski (Latinica) (Srbija i Crna Gora)',\n  rtl: false,\n};\n\nexport const SerbianCyrillic: Locale = {\n  id: LocaleCode.SerbianCyrillic,\n  language: {\n    code: LanguageCode.SerbianCyrillic,\n    name: 'Serbian',\n    native: '\u0421\u0440\u043F\u0441\u043A\u0438',\n  },\n  name: 'Serbian (Cyrillic)',\n  native_name: '\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)',\n  rtl: false,\n};\n\nexport const SerbianCyrillicBosniaAndHerzegovina: Locale = {\n  country: {\n    code: CountryCode.BosniaAndHerzegovina,\n    name: 'Bosnia and Herzegovina',\n    native: '\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430',\n  },\n  id: LocaleCode.SerbianCyrillicBosniaAndHerzegovina,\n  language: {\n    code: LanguageCode.SerbianCyrillic,\n    name: 'Serbian',\n    native: '\u0421\u0440\u043F\u0441\u043A\u0438',\n  },\n  name: 'Serbian (Cyrillic, Bosnia and Herzegovina)',\n  native_name: '\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)',\n  rtl: false,\n};\n\nexport const SerbianCyrillicSerbiaAndMontenegro: Locale = {\n  country: {\n    code: CountryCode.SerbiaAndMontenegro,\n    name: 'Serbia and Montenegro',\n    native: '\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430',\n  },\n  id: LocaleCode.SerbianCyrillicSerbiaAndMontenegro,\n  language: {\n    code: LanguageCode.SerbianCyrillic,\n    name: 'Serbian',\n    native: '\u0421\u0440\u043F\u0441\u043A\u0438',\n  },\n  name: 'Serbian (Cyrillic, Serbia and Montenegro)',\n  native_name: '\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)',\n  rtl: false,\n};\n\nexport const Slovak: Locale = {\n  id: LocaleCode.Slovak,\n  language: {\n    code: LanguageCode.Slovak,\n    name: 'Slovak',\n    native: 'Sloven\u010Dina',\n  },\n  name: 'Slovak',\n  native_name: 'Sloven\u010Dina',\n  rtl: false,\n};\n\nexport const SlovakSlovakia: Locale = {\n  country: {\n    code: CountryCode.Slovakia,\n    name: 'Slovakia',\n    native: 'Slovensko',\n  },\n  id: LocaleCode.SlovakSlovakia,\n  language: {\n    code: LanguageCode.Slovak,\n    name: 'Slovak',\n    native: 'Sloven\u010Dina',\n  },\n  name: 'Slovak (Slovakia)',\n  native_name: 'Sloven\u010Dina (Slovensko)',\n  rtl: false,\n};\n\nexport const Slovenian: Locale = {\n  id: LocaleCode.Slovenian,\n  language: {\n    code: LanguageCode.Slovenian,\n    name: 'Slovenian',\n    native: 'Sloven\u0161\u010Dina',\n  },\n  name: 'Slovenian',\n  native_name: 'Sloven\u0161\u010Dina',\n  rtl: false,\n};\n\nexport const SlovenianSlovenia: Locale = {\n  country: {\n    code: CountryCode.Slovenia,\n    name: 'Slovenia',\n    native: 'Slovenija',\n  },\n  id: LocaleCode.SlovenianSlovenia,\n  language: {\n    code: LanguageCode.Slovenian,\n    name: 'Slovenian',\n    native: 'Sloven\u0161\u010Dina',\n  },\n  name: 'Slovenian (Slovenia)',\n  native_name: 'Sloven\u0161\u010Dina (Slovenija)',\n  rtl: false,\n};\n\nexport const Somali: Locale = {\n  id: LocaleCode.Somali,\n  language: {\n    code: LanguageCode.Somali,\n    name: 'Somali',\n    native: 'Soomaaliga',\n  },\n  name: 'Somali',\n  native_name: 'Soomaaliga',\n  rtl: true,\n};\n\nexport const SomaliSomalia: Locale = {\n  country: {\n    code: CountryCode.Somalia,\n    name: 'Somalia',\n    native: 'Soomaaliya',\n  },\n  id: LocaleCode.SomaliSomalia,\n  language: {\n    code: LanguageCode.Somali,\n    name: 'Somali',\n    native: 'Soomaaliga',\n  },\n  name: 'Somali (Somalia)',\n  native_name: 'Soomaaliga (Soomaaliya)',\n  rtl: true,\n};\n\nexport const Spanish: Locale = {\n  id: LocaleCode.Spanish,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish',\n  native_name: 'Espa\u00F1ol',\n  rtl: false,\n};\n\nexport const SpanishArgentina: Locale = {\n  country: {\n    code: CountryCode.Argentina,\n    name: 'Argentina',\n    native: 'Argentina',\n  },\n  id: LocaleCode.SpanishArgentina,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Argentina)',\n  native_name: 'Espa\u00F1ol (Argentina)',\n  rtl: false,\n};\n\nexport const SpanishBolivia: Locale = {\n  country: {\n    code: CountryCode.Bolivia,\n    name: 'Bolivia',\n    native: 'Bolivia',\n  },\n  id: LocaleCode.SpanishBolivia,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Bolivia)',\n  native_name: 'Espa\u00F1ol (Bolivia)',\n  rtl: false,\n};\n\nexport const SpanishChile: Locale = {\n  country: {\n    code: CountryCode.Chile,\n    name: 'Chile',\n    native: 'Chile',\n  },\n  id: LocaleCode.SpanishChile,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Chile)',\n  native_name: 'Espa\u00F1ol (Chile)',\n  rtl: false,\n};\n\nexport const SpanishColombia: Locale = {\n  country: {\n    code: CountryCode.Colombia,\n    name: 'Colombia',\n    native: 'Colombia',\n  },\n  id: LocaleCode.SpanishColombia,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Colombia)',\n  native_name: 'Espa\u00F1ol (Colombia)',\n  rtl: false,\n};\n\nexport const SpanishCostaRica: Locale = {\n  country: {\n    code: CountryCode.CostaRica,\n    name: 'Costa Rica',\n    native: 'Costa Rica',\n  },\n  id: LocaleCode.SpanishCostaRica,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Costa Rica)',\n  native_name: 'Espa\u00F1ol (Costa Rica)',\n  rtl: false,\n};\n\nexport const SpanishCuba: Locale = {\n  country: {\n    code: CountryCode.Cuba,\n    name: 'Cuba',\n    native: 'Cuba',\n  },\n  id: LocaleCode.SpanishCuba,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Cuba)',\n  native_name: 'Espa\u00F1ol (Cuba)',\n  rtl: false,\n};\n\nexport const SpanishDominicanRepublic: Locale = {\n  country: {\n    code: CountryCode.DominicanRepublic,\n    name: 'Dominican Republic',\n    native: 'Rep\u00FAblica Dominicana',\n  },\n  id: LocaleCode.SpanishDominicanRepublic,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Dominican Republic)',\n  native_name: 'Espa\u00F1ol (Rep\u00FAblica Dominicana)',\n  rtl: false,\n};\n\nexport const SpanishEcuador: Locale = {\n  country: {\n    code: CountryCode.Ecuador,\n    name: 'Ecuador',\n    native: 'Ecuador',\n  },\n  id: LocaleCode.SpanishEcuador,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Ecuador)',\n  native_name: 'Espa\u00F1ol (Ecuador)',\n  rtl: false,\n};\n\nexport const SpanishElSalvador: Locale = {\n  country: {\n    code: CountryCode.ElSalvador,\n    name: 'El Salvador',\n    native: 'El Salvador',\n  },\n  id: LocaleCode.SpanishElSalvador,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (El Salvador)',\n  native_name: 'Espa\u00F1ol (El Salvador)',\n  rtl: false,\n};\n\nexport const SpanishEquatorialGuinea: Locale = {\n  country: {\n    code: CountryCode.EquatorialGuinea,\n    name: 'Equatorial Guinea',\n    native: 'Guinea Ecuatorial',\n  },\n  id: LocaleCode.SpanishEquatorialGuinea,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Equatorial Guinea)',\n  native_name: 'Espa\u00F1ol (Guinea Ecuatorial)',\n  rtl: false,\n};\n\nexport const SpanishGuatemala: Locale = {\n  country: {\n    code: CountryCode.Guatemala,\n    name: 'Guatemala',\n    native: 'Guatemala',\n  },\n  id: LocaleCode.SpanishGuatemala,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Guatemala)',\n  native_name: 'Espa\u00F1ol (Guatemala)',\n  rtl: false,\n};\n\nexport const SpanishHonduras: Locale = {\n  country: {\n    code: CountryCode.Honduras,\n    name: 'Honduras',\n    native: 'Honduras',\n  },\n  id: LocaleCode.SpanishHonduras,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Honduras)',\n  native_name: 'Espa\u00F1ol (Honduras)',\n  rtl: false,\n};\n\nexport const SpanishMexico: Locale = {\n  country: {\n    code: CountryCode.Mexico,\n    name: 'Mexico',\n    native: 'M\u00E9xico',\n  },\n  id: LocaleCode.SpanishMexico,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Mexico)',\n  native_name: 'Espa\u00F1ol (M\u00E9xico)',\n  rtl: false,\n};\n\nexport const SpanishNicaragua: Locale = {\n  country: {\n    code: CountryCode.Nicaragua,\n    name: 'Nicaragua',\n    native: 'Nicaragua',\n  },\n  id: LocaleCode.SpanishNicaragua,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Nicaragua)',\n  native_name: 'Espa\u00F1ol (Nicaragua)',\n  rtl: false,\n};\n\nexport const SpanishPanama: Locale = {\n  country: {\n    code: CountryCode.Panama,\n    name: 'Panama',\n    native: 'Panam\u00E1',\n  },\n  id: LocaleCode.SpanishPanama,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Panama)',\n  native_name: 'Espa\u00F1ol (Panam\u00E1)',\n  rtl: false,\n};\n\nexport const SpanishParaguay: Locale = {\n  country: {\n    code: CountryCode.Paraguay,\n    name: 'Paraguay',\n    native: 'Paraguay',\n  },\n  id: LocaleCode.SpanishParaguay,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Paraguay)',\n  native_name: 'Espa\u00F1ol (Paraguay)',\n  rtl: false,\n};\n\nexport const SpanishPeru: Locale = {\n  country: {\n    code: CountryCode.Peru,\n    name: 'Peru',\n    native: 'Per\u00FA',\n  },\n  id: LocaleCode.SpanishPeru,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Peru)',\n  native_name: 'Espa\u00F1ol (Per\u00FA)',\n  rtl: false,\n};\n\nexport const SpanishPuertoRico: Locale = {\n  country: {\n    code: CountryCode.PuertoRico,\n    name: 'Puerto Rico',\n    native: 'Puerto Rico',\n  },\n  id: LocaleCode.SpanishPuertoRico,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Puerto Rico)',\n  native_name: 'Espa\u00F1ol (Puerto Rico)',\n  rtl: false,\n};\n\nexport const SpanishUruguay: Locale = {\n  country: {\n    code: CountryCode.Uruguay,\n    name: 'Uruguay',\n    native: 'Uruguay',\n  },\n  id: LocaleCode.SpanishUruguay,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Uruguay)',\n  native_name: 'Espa\u00F1ol (Uruguay)',\n  rtl: false,\n};\n\nexport const SpanishVenezuela: Locale = {\n  country: {\n    code: CountryCode.Venezuela,\n    name: 'Venezuela',\n    native: 'Venezuela',\n  },\n  id: LocaleCode.SpanishVenezuela,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Venezuela)',\n  native_name: 'Espa\u00F1ol (Venezuela)',\n  rtl: false,\n};\n\nexport const SutuSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.SutuSouthAfrica,\n  language: {\n    code: LanguageCode.Sutu,\n    name: 'Sutu',\n    native: 'Sesotho',\n  },\n  name: 'Sutu (South Africa)',\n  native_name: 'Sesotho (Afrika Borwa)',\n  rtl: false,\n};\n\nexport const Swahili: Locale = {\n  id: LocaleCode.Swahili,\n  language: {\n    code: LanguageCode.Swahili,\n    name: 'Swahili',\n    native: 'Kiswahili',\n  },\n  name: 'Swahili',\n  native_name: 'Kiswahili',\n  rtl: false,\n};\n\nexport const SwahiliKenya: Locale = {\n  country: {\n    code: CountryCode.Kenya,\n    name: 'Kenya',\n    native: 'Kenya',\n  },\n  id: LocaleCode.SwahiliKenya,\n  language: {\n    code: LanguageCode.Swahili,\n    name: 'Swahili',\n    native: 'Kiswahili',\n  },\n  name: 'Swahili (Kenya)',\n  native_name: 'Kiswahili (Kenya)',\n  rtl: false,\n};\n\nexport const Swedish: Locale = {\n  id: LocaleCode.Swedish,\n  language: {\n    code: LanguageCode.Swedish,\n    name: 'Swedish',\n    native: 'Svenska',\n  },\n  name: 'Swedish',\n  native_name: 'Svenska',\n  rtl: false,\n};\n\nexport const SwedishFinland: Locale = {\n  country: {\n    code: CountryCode.Finland,\n    name: 'Finland',\n    native: 'Suomi',\n  },\n  id: LocaleCode.SwedishFinland,\n  language: {\n    code: LanguageCode.Swedish,\n    name: 'Swedish',\n    native: 'Svenska',\n  },\n  name: 'Swedish (Finland)',\n  native_name: 'Svenska (Finland)',\n  rtl: false,\n};\n\nexport const SwedishSweden: Locale = {\n  country: {\n    code: CountryCode.Sweden,\n    name: 'Sweden',\n    native: 'Sverige',\n  },\n  id: LocaleCode.SwedishSweden,\n  language: {\n    code: LanguageCode.Swedish,\n    name: 'Swedish',\n    native: 'Svenska',\n  },\n  name: 'Swedish (Sweden)',\n  native_name: 'Svenska (Sverige)',\n  rtl: false,\n};\n\nexport const Syriac: Locale = {\n  id: LocaleCode.Syriac,\n  language: {\n    code: LanguageCode.Syriac,\n    name: 'Syriac',\n    native: '\u0723\u0718\u072A\u071D\u071D\u0710',\n  },\n  name: 'Syriac',\n  native_name: '\u0723\u0718\u072A\u071D\u071D\u0710',\n  rtl: true,\n};\n\nexport const SyriacSyria: Locale = {\n  country: {\n    code: CountryCode.Syria,\n    name: 'Syria',\n    native: '\u0633\u0648\u0631\u064A\u0627',\n  },\n  id: LocaleCode.SyriacSyria,\n  language: {\n    code: LanguageCode.Syriac,\n    name: 'Syriac',\n    native: '\u0723\u0718\u072A\u071D\u071D\u0710',\n  },\n  name: 'Syriac (Syria)',\n  native_name: '\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)',\n  rtl: true,\n};\n\nexport const Tajik: Locale = {\n  id: LocaleCode.Tajik,\n  language: {\n    code: LanguageCode.Tajik,\n    name: 'Tajik',\n    native: '\u0422\u043E\u04B7\u0438\u043A\u04E3',\n  },\n  name: 'Tajik',\n  native_name: '\u0422\u043E\u04B7\u0438\u043A\u04E3',\n  rtl: false,\n};\n\nexport const TajikTajikistan: Locale = {\n  country: {\n    code: CountryCode.Tajikistan,\n    name: 'Tajikistan',\n    native: '\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D',\n  },\n  id: LocaleCode.TajikTajikistan,\n  language: {\n    code: LanguageCode.Tajik,\n    name: 'Tajik',\n    native: '\u0422\u043E\u04B7\u0438\u043A\u04E3',\n  },\n  name: 'Tajik (Tajikistan)',\n  native_name: '\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)',\n  rtl: false,\n};\n\nexport const Tagalog: Locale = {\n  id: LocaleCode.Tagalog,\n  language: {\n    code: LanguageCode.Tagalog,\n    name: 'Tagalog',\n    native: 'Tagalog',\n  },\n  name: 'Tagalog',\n  native_name: 'Tagalog',\n  rtl: false,\n};\n\nexport const TagalogPhilippines: Locale = {\n  country: {\n    code: CountryCode.Philippines,\n    name: 'Philippines',\n    native: 'Pilipinas',\n  },\n  id: LocaleCode.TagalogPhilippines,\n  language: {\n    code: LanguageCode.Tagalog,\n    name: 'Tagalog',\n    native: 'Tagalog',\n  },\n  name: 'Tagalog (Philippines)',\n  native_name: 'Tagalog (Pilipinas)',\n  rtl: false,\n};\n\nexport const Tamil: Locale = {\n  id: LocaleCode.Tamil,\n  language: {\n    code: LanguageCode.Tamil,\n    name: 'Tamil',\n    native: '\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD',\n  },\n  name: 'Tamil',\n  native_name: '\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD',\n  rtl: false,\n};\n\nexport const TamilIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE',\n  },\n  id: LocaleCode.TamilIndia,\n  language: {\n    code: LanguageCode.Tamil,\n    name: 'Tamil',\n    native: '\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD',\n  },\n  name: 'Tamil (India)',\n  native_name: '\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)',\n  rtl: false,\n};\n\nexport const Telugu: Locale = {\n  id: LocaleCode.Telugu,\n  language: {\n    code: LanguageCode.Telugu,\n    name: 'Telugu',\n    native: '\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41',\n  },\n  name: 'Telugu',\n  native_name: '\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41',\n  rtl: false,\n};\n\nexport const TeluguIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02',\n  },\n  id: LocaleCode.TeluguIndia,\n  language: {\n    code: LanguageCode.Telugu,\n    name: 'Telugu',\n    native: '\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41',\n  },\n  name: 'Telugu (India)',\n  native_name: '\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)',\n  rtl: false,\n};\n\nexport const Thai: Locale = {\n  id: LocaleCode.Thai,\n  language: {\n    code: LanguageCode.Thai,\n    name: 'Thai',\n    native: '\u0E44\u0E17\u0E22',\n  },\n  name: 'Thai',\n  native_name: '\u0E44\u0E17\u0E22',\n  rtl: false,\n};\n\nexport const ThaiThailand: Locale = {\n  country: {\n    code: CountryCode.Thailand,\n    name: 'Thailand',\n    native: '\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22',\n  },\n  id: LocaleCode.ThaiThailand,\n  language: {\n    code: LanguageCode.Thai,\n    name: 'Thai',\n    native: '\u0E44\u0E17\u0E22',\n  },\n  name: 'Thai (Thailand)',\n  native_name: '\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)',\n  rtl: false,\n};\n\nexport const Tibetan: Locale = {\n  id: LocaleCode.Tibetan,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: 'Tibetan',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Tibetan',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  rtl: false,\n};\n\nexport const TibetanChina: Locale = {\n  country: {\n    code: CountryCode.China,\n    name: 'China',\n    native: '\u4E2D\u56FD',\n  },\n  id: LocaleCode.TibetanChina,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: 'Tibetan',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Tibetan (China)',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)',\n  rtl: false,\n};\n\nexport const TibetanBhutan: Locale = {\n  country: {\n    code: CountryCode.Bhutan,\n    name: 'Bhutan',\n    native: '\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D',\n  },\n  id: LocaleCode.TibetanBhutan,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: 'Tibetan',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Tibetan (Bhutan)',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)',\n  rtl: false,\n};\n\nexport const TibetanIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE',\n  },\n  id: LocaleCode.TibetanIndia,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: 'Tibetan',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Tibetan (India)',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)',\n  rtl: false,\n};\n\nexport const Tsonga: Locale = {\n  id: LocaleCode.Tsonga,\n  language: {\n    code: LanguageCode.Tsonga,\n    name: 'Tsonga',\n    native: 'Xitsonga',\n  },\n  name: 'Tsonga',\n  native_name: 'Xitsonga',\n  rtl: false,\n};\n\nexport const Tswana: Locale = {\n  id: LocaleCode.Tswana,\n  language: {\n    code: LanguageCode.Tswana,\n    name: 'Tswana',\n    native: 'Setswana',\n  },\n  name: 'Tswana',\n  native_name: 'Setswana',\n  rtl: false,\n};\n\nexport const TswanaSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.TswanaSouthAfrica,\n  language: {\n    code: LanguageCode.Tswana,\n    name: 'Tswana',\n    native: 'Setswana',\n  },\n  name: 'Tswana (South Africa)',\n  native_name: 'Setswana (South Africa)',\n  rtl: false,\n};\n\nexport const Turkish: Locale = {\n  id: LocaleCode.Turkish,\n  language: {\n    code: LanguageCode.Turkish,\n    name: 'Turkish',\n    native: 'T\u00FCrk\u00E7e',\n  },\n  name: 'Turkish',\n  native_name: 'T\u00FCrk\u00E7e',\n  rtl: false,\n};\n\nexport const TurkishTurkey: Locale = {\n  country: {\n    code: CountryCode.Turkey,\n    name: 'Turkey',\n    native: 'T\u00FCrkiye',\n  },\n  id: LocaleCode.TurkishTurkey,\n  language: {\n    code: LanguageCode.Turkish,\n    name: 'Turkish',\n    native: 'T\u00FCrk\u00E7e',\n  },\n  name: 'Turkish (Turkey)',\n  native_name: 'T\u00FCrk\u00E7e (T\u00FCrkiye)',\n  rtl: false,\n};\n\nexport const Ukrainian: Locale = {\n  id: LocaleCode.Ukrainian,\n  language: {\n    code: LanguageCode.Ukrainian,\n    name: 'Ukrainian',\n    native: '\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430',\n  },\n  name: 'Ukrainian',\n  native_name: '\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430',\n  rtl: false,\n};\n\nexport const UkrainianUkraine: Locale = {\n  country: {\n    code: CountryCode.Ukraine,\n    name: 'Ukraine',\n    native: '\u0423\u043A\u0440\u0430\u0457\u043D\u0430',\n  },\n  id: LocaleCode.UkrainianUkraine,\n  language: {\n    code: LanguageCode.Ukrainian,\n    name: 'Ukrainian',\n    native: '\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430',\n  },\n  name: 'Ukrainian (Ukraine)',\n  native_name: '\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)',\n  rtl: false,\n};\n\nexport const Urdu: Locale = {\n  id: LocaleCode.Urdu,\n  language: {\n    code: LanguageCode.Urdu,\n    name: 'Urdu',\n    native: '\u0627\u0631\u062F\u0648',\n  },\n  name: 'Urdu',\n  native_name: '\u0627\u0631\u062F\u0648',\n  rtl: true,\n};\n\nexport const UrduAfghanistan: Locale = {\n  country: {\n    code: CountryCode.Afghanistan,\n    name: 'Afghanistan',\n    native: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n  },\n  id: LocaleCode.UrduAfghanistan,\n  language: {\n    code: LanguageCode.Urdu,\n    name: 'Urdu',\n    native: '\u0627\u0631\u062F\u0648',\n  },\n  name: 'Urdu (Afghanistan)',\n  native_name: '\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)',\n  rtl: true,\n};\n\nexport const UrduIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.UrduIndia,\n  language: {\n    code: LanguageCode.Urdu,\n    name: 'Urdu',\n    native: '\u0627\u0631\u062F\u0648',\n  },\n  name: 'Urdu (India)',\n  native_name: '\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)',\n  rtl: true,\n};\n\nexport const UrduPakistan: Locale = {\n  country: {\n    code: CountryCode.Pakistan,\n    name: 'Pakistan',\n    native: '\u067E\u0627\u06A9\u0633\u062A\u0627\u0646',\n  },\n  id: LocaleCode.UrduPakistan,\n  language: {\n    code: LanguageCode.Urdu,\n    name: 'Urdu',\n    native: '\u0627\u0631\u062F\u0648',\n  },\n  name: 'Urdu (Pakistan)',\n  native_name: '\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)',\n  rtl: true,\n};\n\nexport const UzbekLatin: Locale = {\n  id: LocaleCode.Uzbek,\n  language: {\n    code: LanguageCode.Uzbek,\n    name: 'Uzbek',\n    native: 'O\u02BBzbekcha',\n  },\n  name: 'Uzbek',\n  native_name: 'O\u02BBzbekcha',\n  rtl: false,\n};\n\nexport const UzbekUzbekistan: Locale = {\n  country: {\n    code: CountryCode.Uzbekistan,\n    name: 'Uzbekistan',\n    native: 'O\u02BBzbekiston',\n  },\n  id: LocaleCode.UzbekUzbekistan,\n  language: {\n    code: LanguageCode.Uzbek,\n    name: 'Uzbek',\n    native: 'O\u02BBzbekcha',\n  },\n  name: 'Uzbek (Latin, Uzbekistan)',\n  native_name: 'O\u02BBzbekcha (O\u02BBzbekiston)',\n  rtl: false,\n};\n\nexport const UzbekCyrillic: Locale = {\n  country: {\n    code: CountryCode.Uzbekistan,\n    name: 'Uzbekistan',\n    native: '\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D',\n  },\n  id: LocaleCode.UzbekCyrillic,\n  language: {\n    code: LanguageCode.Uzbek,\n    name: 'Uzbek',\n    native: '\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D',\n  },\n  name: 'Uzbek (Cyrillic)',\n  native_name: '\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)',\n  rtl: false,\n};\n\nexport const Vietnamese: Locale = {\n  id: LocaleCode.Vietnamese,\n  language: {\n    code: LanguageCode.Vietnamese,\n    name: 'Vietnamese',\n    native: 'Ti\u1EBFng Vi\u1EC7t',\n  },\n  name: 'Vietnamese',\n  native_name: 'Ti\u1EBFng Vi\u1EC7t',\n  rtl: false,\n};\n\nexport const VietnameseVietnam: Locale = {\n  country: {\n    code: CountryCode.Vietnam,\n    name: 'Vietnam',\n    native: 'Vi\u1EC7t Nam',\n  },\n  id: LocaleCode.VietnameseVietnam,\n  language: {\n    code: LanguageCode.Vietnamese,\n    name: 'Vietnamese',\n    native: 'Ti\u1EBFng Vi\u1EC7t',\n  },\n  name: 'Vietnamese (Vietnam)',\n  native_name: 'Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)',\n  rtl: false,\n};\n\nexport const Welsh: Locale = {\n  id: LocaleCode.Welsh,\n  language: {\n    code: LanguageCode.Welsh,\n    name: 'Welsh',\n    native: 'Cymraeg',\n  },\n  name: 'Welsh',\n  native_name: 'Cymraeg',\n  rtl: false,\n};\n\nexport const WelshUnitedKingdom: Locale = {\n  country: {\n    code: CountryCode.UnitedKingdom,\n    name: 'United Kingdom',\n    native: 'United Kingdom',\n  },\n  id: LocaleCode.WelshUnitedKingdom,\n  language: {\n    code: LanguageCode.Welsh,\n    name: 'Welsh',\n    native: 'Cymraeg',\n  },\n  name: 'Welsh (United Kingdom)',\n  native_name: 'Cymraeg (United Kingdom)',\n  rtl: false,\n};\n\nexport const Xhosa: Locale = {\n  id: LocaleCode.Xhosa,\n  language: {\n    code: LanguageCode.Xhosa,\n    name: 'Xhosa',\n    native: 'isiXhosa',\n  },\n  name: 'Xhosa',\n  native_name: 'isiXhosa',\n  rtl: false,\n};\n\nexport const XhosaSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.XhosaSouthAfrica,\n  language: {\n    code: LanguageCode.Xhosa,\n    name: 'Xhosa',\n    native: 'isiXhosa',\n  },\n  name: 'Xhosa (South Africa)',\n  native_name: 'isiXhosa (South Africa)',\n  rtl: false,\n};\n\nexport const Yiddish: Locale = {\n  id: LocaleCode.Yiddish,\n  language: {\n    code: LanguageCode.Yiddish,\n    name: 'Yiddish',\n    native: '\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9',\n  },\n  name: 'Yiddish',\n  native_name: '\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9',\n  rtl: false,\n};\n\nexport const Yoruba: Locale = {\n  id: LocaleCode.Yoruba,\n  language: {\n    code: LanguageCode.Yoruba,\n    name: 'Yoruba',\n    native: 'Yor\u00F9b\u00E1',\n  },\n  name: 'Yoruba',\n  native_name: 'Yor\u00F9b\u00E1',\n  rtl: false,\n};\n\nexport const YorubaNigeria: Locale = {\n  country: {\n    code: CountryCode.Nigeria,\n    name: 'Nigeria',\n    native: 'Nigeria',\n  },\n  id: LocaleCode.YorubaNigeria,\n  language: {\n    code: LanguageCode.Yoruba,\n    name: 'Yoruba',\n    native: 'Yor\u00F9b\u00E1',\n  },\n  name: 'Yoruba (Nigeria)',\n  native_name: 'Yor\u00F9b\u00E1 (Nigeria)',\n  rtl: false,\n};\n\n// export const ZhuyinMandarin: Locale = {\n//   id: LocaleCode.ZhuyinMandarin,\n//   language: {\n//     code: LanguageCode.Mandarin,\n//     name: 'Mandarin',\n//     native: '\u666E\u901A\u8BDD',\n//   },\n//   name: 'Zhuyin (Mandarin)',\n//   native_name: '\u666E\u901A\u8BDD (\u666E\u901A\u8BDD)',\n//   rtl: false,\n// };\n\n// export const ZhuyinMandarinChina: Locale = {\n//   country: {\n//     code: CountryCode.China,\n//     name: 'China',\n//     native: '\u4E2D\u56FD',\n//   },\n//   id: LocaleCode.ZhuyinMandarinChina,\n//   language: {\n//     code: LanguageCode.Zhuyin,\n//     name: 'Zhuyin',\n//     native: 'Zhuyin',\n//   },\n//   name: 'Zhuyin (Mandarin, China)',\n//   native_name: 'Zhuyin (Mandarin, China)',\n//   rtl: false,\n// };\n\n// export const ZhuyinMandarinTaiwan: Locale = {\n//   country: {\n//     code: CountryCode.Taiwan,\n//     name: 'Taiwan',\n//     native: '\u81FA\u7063',\n//   },\n//   id: LocaleCode.ZhuyinMandarinTaiwan,\n//   language: {\n//     code: LanguageCode.Zhuyin,\n//     name: 'Zhuyin',\n//     native: 'Zhuyin',\n//   },\n//   name: 'Zhuyin (Mandarin, Taiwan)',\n//   native_name: 'Zhuyin (Mandarin, Taiwan)',\n//   rtl: false,\n// };\n\n// export const ZhuyinMandarinHongKong: Locale = {\n//   country: {\n//     code: CountryCode.HongKong,\n//     name: 'Hong Kong',\n//     native: '\u9999\u6E2F',\n//   },\n//   id: LocaleCode.ZhuyinMandarinHongKong,\n//   language: {\n//     code: LanguageCode.Zhuyin,\n//     name: 'Zhuyin',\n//     native: 'Zhuyin',\n//   },\n//   name: 'Zhuyin (Mandarin, Hong Kong)',\n//   native_name: 'Zhuyin (Mandarin, Hong Kong)',\n//   rtl: false,\n// };\n\n// export const ZhuyinMandarinMacau: Locale = {\n//   country: {\n//     code: CountryCode.Macau,\n//     name: 'Macau',\n//     native: '\u6FB3\u9580',\n//   },\n//   id: LocaleCode.ZhuyinMandarinMacau,\n//   language: {\n//     code: LanguageCode.Zhuyin,\n//     name: 'Zhuyin',\n//     native: 'Zhuyin',\n//   },\n//   name: 'Zhuyin (Mandarin, Macau)',\n//   native_name: 'Zhuyin (Mandarin, Macau)',\n//   rtl: false,\n// };\n\nexport const Zulu: Locale = {\n  id: LocaleCode.Zulu,\n  language: {\n    code: LanguageCode.Zulu,\n    name: 'Zulu',\n    native: 'isiZulu',\n  },\n  name: 'Zulu',\n  native_name: 'isiZulu',\n  rtl: false,\n};\n\nexport const ZuluSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.ZuluSouthAfrica,\n  language: {\n    code: LanguageCode.Zulu,\n    name: 'Zulu',\n    native: 'isiZulu',\n  },\n  name: 'Zulu (South Africa)',\n  native_name: 'isiZulu (South Africa)',\n  rtl: false,\n};\n", "import { TimezoneRegions } from './region.js';\nimport { TimezoneRegion } from './region';\nimport { TimezoneOffset } from './timezone.js';\nimport { Timezones } from './timezones.js';\n\nexport const AfricaAbidjan: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAbidjan,\n  name: 'Africa/Abidjan',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaAccra: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAccra,\n  name: 'Africa/Accra',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaAddisAbaba: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAddisAbaba,\n  name: 'Africa/Addis_Ababa',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaAlgiers: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAlgiers,\n  name: 'Africa/Algiers',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const AfricaAsmara: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAsmara,\n  name: 'Africa/Asmara',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaBamako: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBamako,\n  name: 'Africa/Bamako',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaBangui: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBangui,\n  name: 'Africa/Bangui',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaBanjul: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBanjul,\n  name: 'Africa/Banjul',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaBissau: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBissau,\n  name: 'Africa/Bissau',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaBlantyre: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBlantyre,\n  name: 'Africa/Blantyre',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaBrazzaville: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBrazzaville,\n  name: 'Africa/Brazzaville',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaBujumbura: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBujumbura,\n  name: 'Africa/Bujumbura',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaCairo: TimezoneRegion = {\n  id: TimezoneRegions.AfricaCairo,\n  name: 'Africa/Cairo',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AfricaCasablanca: TimezoneRegion = {\n  id: TimezoneRegions.AfricaCasablanca,\n  name: 'Africa/Casablanca',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WesternEuropeanTime,\n};\n\nexport const AfricaCeuta: TimezoneRegion = {\n  id: TimezoneRegions.AfricaCeuta,\n  name: 'Africa/Ceuta',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const AfricaConakry: TimezoneRegion = {\n  id: TimezoneRegions.AfricaConakry,\n  name: 'Africa/Conakry',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaDakar: TimezoneRegion = {\n  id: TimezoneRegions.AfricaDakar,\n  name: 'Africa/Dakar',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaDarEsSalaam: TimezoneRegion = {\n  id: TimezoneRegions.AfricaDarEsSalaam,\n  name: 'Africa/Dar_es_Salaam',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaDjibouti: TimezoneRegion = {\n  id: TimezoneRegions.AfricaDjibouti,\n  name: 'Africa/Djibouti',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaDouala: TimezoneRegion = {\n  id: TimezoneRegions.AfricaDouala,\n  name: 'Africa/Douala',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaElAaiun: TimezoneRegion = {\n  id: TimezoneRegions.AfricaElAaiun,\n  name: 'Africa/El_Aaiun',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaFreetown: TimezoneRegion = {\n  id: TimezoneRegions.AfricaFreetown,\n  name: 'Africa/Freetown',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaGaborone: TimezoneRegion = {\n  id: TimezoneRegions.AfricaGaborone,\n  name: 'Africa/Gaborone',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaHarare: TimezoneRegion = {\n  id: TimezoneRegions.AfricaHarare,\n  name: 'Africa/Harare',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaJohannesburg: TimezoneRegion = {\n  id: TimezoneRegions.AfricaJohannesburg,\n  name: 'Africa/Johannesburg',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.SouthAfricanStandardTime,\n};\n\nexport const AfricaJuba: TimezoneRegion = {\n  id: TimezoneRegions.AfricaJuba,\n  name: 'Africa/Juba',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaKampala: TimezoneRegion = {\n  id: TimezoneRegions.AfricaKampala,\n  name: 'Africa/Kampala',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaKhartoum: TimezoneRegion = {\n  id: TimezoneRegions.AfricaKhartoum,\n  name: 'Africa/Khartoum',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaKigali: TimezoneRegion = {\n  id: TimezoneRegions.AfricaKigali,\n  name: 'Africa/Kigali',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaKinshasa: TimezoneRegion = {\n  id: TimezoneRegions.AfricaKinshasa,\n  name: 'Africa/Kinshasa',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaLagos: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLagos,\n  name: 'Africa/Lagos',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaLibreville: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLibreville,\n  name: 'Africa/Libreville',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaLome: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLome,\n  name: 'Africa/Lome',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaLuanda: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLuanda,\n  name: 'Africa/Luanda',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaLubumbashi: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLubumbashi,\n  name: 'Africa/Lubumbashi',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaLusaka: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLusaka,\n  name: 'Africa/Lusaka',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaMalabo: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMalabo,\n  name: 'Africa/Malabo',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaMaputo: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMaputo,\n  name: 'Africa/Maputo',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaMaseru: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMaseru,\n  name: 'Africa/Maseru',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.SouthAfricanStandardTime,\n};\n\nexport const AfricaMbabane: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMbabane,\n  name: 'Africa/Mbabane',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.SouthAfricanStandardTime,\n};\n\nexport const AfricaMogadishu: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMogadishu,\n  name: 'Africa/Mogadishu',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaMonrovia: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMonrovia,\n  name: 'Africa/Monrovia',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaNairobi: TimezoneRegion = {\n  id: TimezoneRegions.AfricaNairobi,\n  name: 'Africa/Nairobi',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaNdjamena: TimezoneRegion = {\n  id: TimezoneRegions.AfricaNdjamena,\n  name: 'Africa/Ndjamena',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaNiamey: TimezoneRegion = {\n  id: TimezoneRegions.AfricaNiamey,\n  name: 'Africa/Niamey',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaNouakchott: TimezoneRegion = {\n  id: TimezoneRegions.AfricaNouakchott,\n  name: 'Africa/Nouakchott',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AfricaOuagadougou: TimezoneRegion = {\n  id: TimezoneRegions.AfricaOuagadougou,\n  name: 'Africa/Ouagadougou',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaPortoNovo: TimezoneRegion = {\n  id: TimezoneRegions.AfricaPortoNovo,\n  name: 'Africa/Porto-Novo',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaSaoTome: TimezoneRegion = {\n  id: TimezoneRegions.AfricaSaoTome,\n  name: 'Africa/SaoTome',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaTripoli: TimezoneRegion = {\n  id: TimezoneRegions.AfricaTripoli,\n  name: 'Africa/Tripoli',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaTunis: TimezoneRegion = {\n  id: TimezoneRegions.AfricaTunis,\n  name: 'Africa/Tunis',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaWindhoek: TimezoneRegion = {\n  id: TimezoneRegions.AfricaWindhoek,\n  name: 'Africa/Windhoek',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AmericaAdak: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAdak,\n  name: 'America/Adak',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime,\n};\n\nexport const AmericaAnchorage: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAnchorage,\n  name: 'America/Anchorage',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaAnguilla: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAnguilla,\n  name: 'America/Anguilla',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaAntigua: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAntigua,\n  name: 'America/Antigua',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaAraguaina: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAraguaina,\n  name: 'America/Araguaina',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaArgentinaBuenosAires: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaBuenosAires,\n  name: 'America/Argentina/Buenos_Aires',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaCatamarca: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaCatamarca,\n  name: 'America/Argentina/Catamarca',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaCordoba: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaCordoba,\n  name: 'America/Argentina/Cordoba',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaJujuy: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaJujuy,\n  name: 'America/Argentina/Jujuy',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaLaRioja: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaLaRioja,\n  name: 'America/Argentina/La_Rioja',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaMendoza: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaMendoza,\n  name: 'America/Argentina/Mendoza',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaRioGallegos: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaRioGallegos,\n  name: 'America/Argentina/Rio_Gallegos',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaSalta: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaSalta,\n  name: 'America/Argentina/Salta',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaSanJuan: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaSanJuan,\n  name: 'America/Argentina/San_Juan',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaSanLuis: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaSanLuis,\n  name: 'America/Argentina/San_Luis',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaTucuman: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaTucuman,\n  name: 'America/Argentina/Tucuman',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaUshuaia: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaUshuaia,\n  name: 'America/Argentina/Ushuaia',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaAruba: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAruba,\n  name: 'America/Aruba',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaAsuncion: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAsuncion,\n  name: 'America/Asuncion',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.ParaguayTime,\n};\n\nexport const AmericaAtikokan: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAtikokan,\n  name: 'America/Atikokan',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaAtka: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAtka,\n  name: 'America/Atka',\n  offset: TimezoneOffset.UTC_MINUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime,\n};\n\nexport const AmericaBahia: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBahia,\n  name: 'America/Bahia',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaBahiaBanderas: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBahiaBanderas,\n  name: 'America/Bahia_Banderas',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaBarbados: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBarbados,\n  name: 'America/Barbados',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaBelem: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBelem,\n  name: 'America/Belem',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaBelize: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBelize,\n  name: 'America/Belize',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaBlancSablon: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBlancSablon,\n  name: 'America/Blanc-Sablon',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaBoaVista: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBoaVista,\n  name: 'America/Boa_Vista',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaBogota: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBogota,\n  name: 'America/Bogota',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.ColombiaTime,\n};\n\nexport const AmericaBoise: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBoise,\n  name: 'America/Boise',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaCambridgeBay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCambridgeBay,\n  name: 'America/Cambridge_Bay',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaCampoGrande: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCampoGrande,\n  name: 'America/Campo_Grande',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaCancun: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCancun,\n  name: 'America/Cancun',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaCaracas: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCaracas,\n  name: 'America/Caracas',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.VenezuelaStandardTime,\n};\n\nexport const AmericaCayenne: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCayenne,\n  name: 'America/Cayenne',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.FrenchGuianaTime,\n};\n\nexport const AmericaCayman: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCayman,\n  name: 'America/Cayman',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaChicago: TimezoneRegion = {\n  id: TimezoneRegions.AmericaChicago,\n  name: 'America/Chicago',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaChihuahua: TimezoneRegion = {\n  id: TimezoneRegions.AmericaChihuahua,\n  name: 'America/Chihuahua',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaCoralHarbour: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCoralHarbour,\n  name: 'America/Coral_Harbour',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaCordoba: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCordoba,\n  name: 'America/Cordoba',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaCostaRica: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCostaRica,\n  name: 'America/Costa_Rica',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaCreston: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCreston,\n  name: 'America/Creston',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaCuiaba: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCuiaba,\n  name: 'America/Cuiaba',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaCuracao: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCuracao,\n  name: 'America/Curacao',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaDanmarkshavn: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDanmarkshavn,\n  name: 'America/Danmarkshavn',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AmericaDawson: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDawson,\n  name: 'America/Dawson',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaDawsonCreek: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDawsonCreek,\n  name: 'America/Dawson_Creek',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaDenver: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDenver,\n  name: 'America/Denver',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaDetroit: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDetroit,\n  name: 'America/Detroit',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaDominica: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDominica,\n  name: 'America/Dominica',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaEdmonton: TimezoneRegion = {\n  id: TimezoneRegions.AmericaEdmonton,\n  name: 'America/Edmonton',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaEirunepe: TimezoneRegion = {\n  id: TimezoneRegions.AmericaEirunepe,\n  name: 'America/Eirunepe',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.AcreTime,\n};\n\nexport const AmericaElSalvador: TimezoneRegion = {\n  id: TimezoneRegions.AmericaElSalvador,\n  name: 'America/El_Salvador',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaFortaleza: TimezoneRegion = {\n  id: TimezoneRegions.AmericaFortaleza,\n  name: 'America/Fortaleza',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaGlaceBay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGlaceBay,\n  name: 'America/Glace_Bay',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGodthab: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGodthab,\n  name: 'America/Godthab',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.WestGreenlandTime,\n};\n\nexport const AmericaGooseBay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGooseBay,\n  name: 'America/Goose_Bay',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGrandTurk: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGrandTurk,\n  name: 'America/Grand_Turk',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGrenada: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGrenada,\n  name: 'America/Grenada',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGuadeloupe: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGuadeloupe,\n  name: 'America/Guadeloupe',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGuatemala: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGuatemala,\n  name: 'America/Guatemala',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaGuayaquil: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGuayaquil,\n  name: 'America/Guayaquil',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EcuadorTime,\n};\n\nexport const AmericaGuyana: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGuyana,\n  name: 'America/Guyana',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaHalifax: TimezoneRegion = {\n  id: TimezoneRegions.AmericaHalifax,\n  name: 'America/Halifax',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaHavana: TimezoneRegion = {\n  id: TimezoneRegions.AmericaHavana,\n  name: 'America/Havana',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.CubaStandardTime,\n};\n\nexport const AmericaHermosillo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaHermosillo,\n  name: 'America/Hermosillo',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaIndianaIndianapolis: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaIndianapolis,\n  name: 'America/Indiana/Indianapolis',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaKnox: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaKnox,\n  name: 'America/Indiana/Knox',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaIndianaMarengo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaMarengo,\n  name: 'America/Indiana/Marengo',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaPetersburg: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaPetersburg,\n  name: 'America/Indiana/Petersburg',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaTellCity: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaTellCity,\n  name: 'America/Indiana/Tell_City',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaIndianaVevay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaVevay,\n  name: 'America/Indiana/Vevay',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaVincennes: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaVincennes,\n  name: 'America/Indiana/Vincennes',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaWinamac: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaWinamac,\n  name: 'America/Indiana/Winamac',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaInuvik: TimezoneRegion = {\n  id: TimezoneRegions.AmericaInuvik,\n  name: 'America/Inuvik',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaIqaluit: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIqaluit,\n  name: 'America/Iqaluit',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaJamaica: TimezoneRegion = {\n  id: TimezoneRegions.AmericaJamaica,\n  name: 'America/Jamaica',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaJuneau: TimezoneRegion = {\n  id: TimezoneRegions.AmericaJuneau,\n  name: 'America/Juneau',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaKentuckyLouisville: TimezoneRegion = {\n  id: TimezoneRegions.AmericaKentuckyLouisville,\n  name: 'America/Kentucky/Louisville',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaKentuckyMonticello: TimezoneRegion = {\n  id: TimezoneRegions.AmericaKentuckyMonticello,\n  name: 'America/Kentucky/Monticello',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaKralendijk: TimezoneRegion = {\n  id: TimezoneRegions.AmericaKralendijk,\n  name: 'America/Kralendijk',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaLaPaz: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLaPaz,\n  name: 'America/La_Paz',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.BoliviaTime,\n};\n\nexport const AmericaLima: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLima,\n  name: 'America/Lima',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.PeruTime,\n};\n\nexport const AmericaLosAngeles: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLosAngeles,\n  name: 'America/Los_Angeles',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaLouisville: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLouisville,\n  name: 'America/Louisville',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaLowerPrinces: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLowerPrinces,\n  name: 'America/Lower_Princes',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaMaceio: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMaceio,\n  name: 'America/Maceio',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaManagua: TimezoneRegion = {\n  id: TimezoneRegions.AmericaManagua,\n  name: 'America/Managua',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaManaus: TimezoneRegion = {\n  id: TimezoneRegions.AmericaManaus,\n  name: 'America/Manaus',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaMarigot: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMarigot,\n  name: 'America/Marigot',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaMartinique: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMartinique,\n  name: 'America/Martinique',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaMatamoros: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMatamoros,\n  name: 'America/Matamoros',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMazatlan: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMazatlan,\n  name: 'America/Mazatlan',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaMenominee: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMenominee,\n  name: 'America/Menominee',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMerida: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMerida,\n  name: 'America/Merida',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMetlakatla: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMetlakatla,\n  name: 'America/Metlakatla',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaMexicoCity: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMexicoCity,\n  name: 'America/Mexico_City',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMiquelon: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMiquelon,\n  name: 'America/Miquelon',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.SaintPierreAndMiquelonStandardTime,\n};\n\nexport const AmericaMoncton: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMoncton,\n  name: 'America/Moncton',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaMonterrey: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMonterrey,\n  name: 'America/Monterrey',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMontevideo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMontevideo,\n  name: 'America/Montevideo',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.UruguayStandardTime,\n};\n\nexport const AmericaMontreal: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMontreal,\n  name: 'America/Montreal',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaMontserrat: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMontserrat,\n  name: 'America/Montserrat',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaNassau: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNassau,\n  name: 'America/Nassau',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaNewYork: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNewYork,\n  name: 'America/New_York',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaNipigon: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNipigon,\n  name: 'America/Nipigon',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaNome: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNome,\n  name: 'America/Nome',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaNoronha: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNoronha,\n  name: 'America/Noronha',\n  offset: TimezoneOffset.UTC_MINUS_2,\n  timezone: Timezones.FernandoDeNoronhaTime,\n};\n\nexport const AmericaNorthDakotaBeulah: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNorthDakotaBeulah,\n  name: 'America/North_Dakota/Beulah',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaNorthDakotaCenter: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNorthDakotaCenter,\n  name: 'America/North_Dakota/Center',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaNorthDakotaNewSalem: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNorthDakotaNewSalem,\n  name: 'America/North_Dakota/New_Salem',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaOjinaga: TimezoneRegion = {\n  id: TimezoneRegions.AmericaOjinaga,\n  name: 'America/Ojinaga',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaPanama: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPanama,\n  name: 'America/Panama',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaPangnirtung: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPangnirtung,\n  name: 'America/Pangnirtung',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaParamaribo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaParamaribo,\n  name: 'America/Paramaribo',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.SurinameTime,\n};\n\nexport const AmericaPhoenix: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPhoenix,\n  name: 'America/Phoenix',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaPortAuPrince: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPortAuPrince,\n  name: 'America/Port-au-Prince',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaPortOfSpain: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPortOfSpain,\n  name: 'America/Port_of_Spain',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaPortoVelho: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPortoVelho,\n  name: 'America/Porto_Velho',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaPuertoRico: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPuertoRico,\n  name: 'America/Puerto_Rico',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaRainyRiver: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRainyRiver,\n  name: 'America/Rainy_River',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaRankinInlet: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRankinInlet,\n  name: 'America/Rankin_Inlet',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaRecife: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRecife,\n  name: 'America/Recife',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaRegina: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRegina,\n  name: 'America/Regina',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaResolute: TimezoneRegion = {\n  id: TimezoneRegions.AmericaResolute,\n  name: 'America/Resolute',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaRioBranco: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRioBranco,\n  name: 'America/Rio_Branco',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.AcreTime,\n};\n\nexport const AmericaSantaIsabel: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSantaIsabel,\n  name: 'America/Santa_Isabel',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaSantarem: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSantarem,\n  name: 'America/Santarem',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaSantiago: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSantiago,\n  name: 'America/Santiago',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.ChileStandardTime,\n};\n\nexport const AmericaSantoDomingo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSantoDomingo,\n  name: 'America/Santo_Domingo',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaSaoPaulo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSaoPaulo,\n  name: 'America/Sao_Paulo',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaScoresbysund: TimezoneRegion = {\n  id: TimezoneRegions.AmericaScoresbysund,\n  name: 'America/Scoresbysund',\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.EasternGreenlandTime,\n};\n\nexport const AmericaShiprock: TimezoneRegion = {\n  id: TimezoneRegions.AmericaShiprock,\n  name: 'America/Shiprock',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaSitka: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSitka,\n  name: 'America/Sitka',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaStBarthelemy: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStBarthelemy,\n  name: 'America/St_Barthelemy',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaStJohns: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStJohns,\n  name: 'America/St_Johns',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.NewfoundlandStandardTime,\n};\n\nexport const AmericaStKitts: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStKitts,\n  name: 'America/St_Kitts',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaStLucia: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStLucia,\n  name: 'America/St_Lucia',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaStThomas: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStThomas,\n  name: 'America/St_Thomas',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaStVincent: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStVincent,\n  name: 'America/St_Vincent',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaSwiftCurrent: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSwiftCurrent,\n  name: 'America/Swift_Current',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaTegucigalpa: TimezoneRegion = {\n  id: TimezoneRegions.AmericaTegucigalpa,\n  name: 'America/Tegucigalpa',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaThule: TimezoneRegion = {\n  id: TimezoneRegions.AmericaThule,\n  name: 'America/Thule',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaThunderBay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaThunderBay,\n  name: 'America/Thunder_Bay',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaTijuana: TimezoneRegion = {\n  id: TimezoneRegions.AmericaTijuana,\n  name: 'America/Tijuana',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaToronto: TimezoneRegion = {\n  id: TimezoneRegions.AmericaToronto,\n  name: 'America/Toronto',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaTortola: TimezoneRegion = {\n  id: TimezoneRegions.AmericaTortola,\n  name: 'America/Tortola',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaVancouver: TimezoneRegion = {\n  id: TimezoneRegions.AmericaVancouver,\n  name: 'America/Vancouver',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaWhitehorse: TimezoneRegion = {\n  id: TimezoneRegions.AmericaWhitehorse,\n  name: 'America/Whitehorse',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaWinnipeg: TimezoneRegion = {\n  id: TimezoneRegions.AmericaWinnipeg,\n  name: 'America/Winnipeg',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaYakutat: TimezoneRegion = {\n  id: TimezoneRegions.AmericaYakutat,\n  name: 'America/Yakutat',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaYellowknife: TimezoneRegion = {\n  id: TimezoneRegions.AmericaYellowknife,\n  name: 'America/Yellowknife',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AntarcticaCasey: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaCasey,\n  name: 'Antarctica/Casey',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.WesternStandardTime,\n};\n\nexport const AntarcticaDavis: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaDavis,\n  name: 'Antarctica/Davis',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.NewfoundlandStandardTime,\n};\n\nexport const AntarcticaDumontDUrville: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaDumontDUrville,\n  name: 'Antarctica/DumontDUrville',\n  offset: TimezoneOffset.UTC_MINUS_10,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AntarcticaMacquarie: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaMacquarie,\n  name: 'Antarctica/Macquarie',\n  offset: TimezoneOffset.UTC_MINUS_11,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AntarcticaMawson: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaMawson,\n  name: 'Antarctica/Mawson',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AntarcticaMcMurdo: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaMcMurdo,\n  name: 'Antarctica/McMurdo',\n  offset: TimezoneOffset.UTC_MINUS_12,\n  timezone: Timezones.NewZealandStandardTime,\n};\n\nexport const AntarcticaPalmer: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaPalmer,\n  name: 'Antarctica/Palmer',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.ChathamStandardTime,\n};\n\nexport const AntarcticaRothera: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaRothera,\n  name: 'Antarctica/Rothera',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.RotheraResearchStationTime,\n};\n\nexport const AntarcticaSyowa: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaSyowa,\n  name: 'Antarctica/Syowa',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ShowaStationTime,\n};\n\nexport const AntarcticaTroll: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaTroll,\n  name: 'Antarctica/Troll',\n  offset: TimezoneOffset.UTC_MINUS_2,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AntarcticaVostok: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaVostok,\n  name: 'Antarctica/Vostok',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const ArcticLongyearbyen: TimezoneRegion = {\n  id: TimezoneRegions.ArcticLongyearbyen,\n  name: 'Arctic/Longyearbyen',\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const AsiaAden: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAden,\n  name: 'Asia/Aden',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaAlmaty: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAlmaty,\n  name: 'Asia/Almaty',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.AlmaAtaTime,\n};\n\nexport const AsiaAmman: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAmman,\n  name: 'Asia/Amman',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaAnadyr: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAnadyr,\n  name: 'Asia/Anadyr',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.NewCaledoniaTime,\n};\n\nexport const AsiaAqtau: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAqtau,\n  name: 'Asia/Aqtau',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.AqtobeTime,\n};\n\nexport const AsiaAqtobe: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAqtobe,\n  name: 'Asia/Aqtobe',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.AqtobeTime,\n};\n\nexport const AsiaAshgabat: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAshgabat,\n  name: 'Asia/Ashgabat',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.TurkmenistanTime,\n};\n\nexport const AsiaBaghdad: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBaghdad,\n  name: 'Asia/Baghdad',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaBahrain: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBahrain,\n  name: 'Asia/Bahrain',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaBaku: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBaku,\n  name: 'Asia/Baku',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.AzerbaijanTime,\n};\n\nexport const AsiaBangkok: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBangkok,\n  name: 'Asia/Bangkok',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime,\n};\n\nexport const AsiaBarnaul: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBarnaul,\n  name: 'Asia/Barnaul',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.KrasnoyarskTime,\n};\n\nexport const AsiaBeirut: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBeirut,\n  name: 'Asia/Beirut',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaBishkek: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBishkek,\n  name: 'Asia/Bishkek',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.KyrgyzstanTime,\n};\n\nexport const AsiaBrunei: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBrunei,\n  name: 'Asia/Brunei',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.BruneiTime,\n};\n\nexport const AsiaChita: TimezoneRegion = {\n  id: TimezoneRegions.AsiaChita,\n  name: 'Asia/Chita',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.YakutskTime,\n};\n\nexport const AsiaChoibalsan: TimezoneRegion = {\n  id: TimezoneRegions.AsiaChoibalsan,\n  name: 'Asia/Choibalsan',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChoibalsanStandardTime,\n};\n\nexport const AsiaColombo: TimezoneRegion = {\n  id: TimezoneRegions.AsiaColombo,\n  name: 'Asia/Colombo',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.IndianStandardTime,\n};\n\nexport const AsiaDamascus: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDamascus,\n  name: 'Asia/Damascus',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaDhaka: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDhaka,\n  name: 'Asia/Dhaka',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.BangladeshStandardTime,\n};\n\nexport const AsiaDili: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDili,\n  name: 'Asia/Dili',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.JapanStandardTime,\n};\n\nexport const AsiaDubai: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDubai,\n  name: 'Asia/Dubai',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.GulfStandardTime,\n};\n\nexport const AsiaDushanbe: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDushanbe,\n  name: 'Asia/Dushanbe',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.TajikistanTime,\n};\n\nexport const AsiaFamagusta: TimezoneRegion = {\n  id: TimezoneRegions.AsiaFamagusta,\n  name: 'Asia/Famagusta',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaGaza: TimezoneRegion = {\n  id: TimezoneRegions.AsiaGaza,\n  name: 'Asia/Gaza',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaHebron: TimezoneRegion = {\n  id: TimezoneRegions.AsiaHebron,\n  name: 'Asia/Hebron',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaHoChiMinh: TimezoneRegion = {\n  id: TimezoneRegions.AsiaHoChiMinh,\n  name: 'Asia/Ho_Chi_Minh',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime,\n};\n\nexport const AsiaHongKong: TimezoneRegion = {\n  id: TimezoneRegions.AsiaHongKong,\n  name: 'Asia/Hong_Kong',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.HongKongTime,\n};\n\nexport const AsiaHovd: TimezoneRegion = {\n  id: TimezoneRegions.AsiaHovd,\n  name: 'Asia/Hovd',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.HovdTime,\n};\n\nexport const AsiaIrkutsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaIrkutsk,\n  name: 'Asia/Irkutsk',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.IrkutskTime,\n};\n\nexport const AsiaJakarta: TimezoneRegion = {\n  id: TimezoneRegions.AsiaJakarta,\n  name: 'Asia/Jakarta',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.WesternIndonesianTime,\n};\n\nexport const AsiaJayapura: TimezoneRegion = {\n  id: TimezoneRegions.AsiaJayapura,\n  name: 'Asia/Jayapura',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.JapanStandardTime,\n};\n\nexport const AsiaJerusalem: TimezoneRegion = {\n  id: TimezoneRegions.AsiaJerusalem,\n  name: 'Asia/Jerusalem',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaKabul: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKabul,\n  name: 'Asia/Kabul',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.AfghanistanTime,\n};\n\nexport const AsiaKamchatka: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKamchatka,\n  name: 'Asia/Kamchatka',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.KamchatkaTime,\n};\n\nexport const AsiaKarachi: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKarachi,\n  name: 'Asia/Karachi',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.PakistanStandardTime,\n};\n\nexport const AsiaKathmandu: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKathmandu,\n  name: 'Asia/Kathmandu',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.NepalTime,\n};\n\nexport const AsiaKhandyga: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKhandyga,\n  name: 'Asia/Khandyga',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.YakutskTime,\n};\n\nexport const AsiaKolkata: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKolkata,\n  name: 'Asia/Kolkata',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.IndianStandardTime,\n};\n\nexport const AsiaKrasnoyarsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKrasnoyarsk,\n  name: 'Asia/Krasnoyarsk',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.KrasnoyarskTime,\n};\nexport const AsiaKualaLumpur: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKualaLumpur,\n  name: 'Asia/Kuala_Lumpur',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.MalaysiaStandardTime,\n};\n\nexport const AsiaKuching: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKuching,\n  name: 'Asia/Kuching',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.MalaysiaStandardTime,\n};\n\nexport const AsiaKuwait: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKuwait,\n  name: 'Asia/Kuwait',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaMacau: TimezoneRegion = {\n  id: TimezoneRegions.AsiaMacau,\n  name: 'Asia/Macau',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime,\n};\n\nexport const AsiaMagadan: TimezoneRegion = {\n  id: TimezoneRegions.AsiaMagadan,\n  name: 'Asia/Magadan',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.MagadanTime,\n};\n\nexport const AsiaMakassar: TimezoneRegion = {\n  id: TimezoneRegions.AsiaMakassar,\n  name: 'Asia/Makassar',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.MalaysiaTime,\n};\n\nexport const AsiaManila: TimezoneRegion = {\n  id: TimezoneRegions.AsiaManila,\n  name: 'Asia/Manila',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.PhilippineTime,\n};\n\nexport const AsiaMuscat: TimezoneRegion = {\n  id: TimezoneRegions.AsiaMuscat,\n  name: 'Asia/Muscat',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.GulfStandardTime,\n};\n\nexport const AsiaNovokuznetsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaNovokuznetsk,\n  name: 'Asia/Novokuznetsk',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.NovosibirskTime,\n};\n\nexport const AsiaNovosibirsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaNovosibirsk,\n  name: 'Asia/Novosibirsk',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.NovosibirskTime,\n};\n\nexport const AsiaOmsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaOmsk,\n  name: 'Asia/Omsk',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.OmskTime,\n};\n\nexport const AsiaOral: TimezoneRegion = {\n  id: TimezoneRegions.AsiaOral,\n  name: 'Asia/Oral',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.OralTime,\n};\n\nexport const AsiaPhnomPenh: TimezoneRegion = {\n  id: TimezoneRegions.AsiaPhnomPenh,\n  name: 'Asia/Phnom_Penh',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime,\n};\n\nexport const AsiaPontianak: TimezoneRegion = {\n  id: TimezoneRegions.AsiaPontianak,\n  name: 'Asia/Pontianak',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.WesternIndonesianTime,\n};\n\nexport const AsiaPyongyang: TimezoneRegion = {\n  id: TimezoneRegions.AsiaPyongyang,\n  name: 'Asia/Pyongyang',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.KoreaStandardTime,\n};\n\nexport const AsiaQatar: TimezoneRegion = {\n  id: TimezoneRegions.AsiaQatar,\n  name: 'Asia/Qatar',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaQyzylorda: TimezoneRegion = {\n  id: TimezoneRegions.AsiaQyzylorda,\n  name: 'Asia/Qyzylorda',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.WestKazakhstanTime,\n};\n\nexport const AsiaRangoon: TimezoneRegion = {\n  id: TimezoneRegions.AsiaRangoon,\n  name: 'Asia/Rangoon',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.MyanmarStandardTime,\n};\n\nexport const AsiaRiyadh: TimezoneRegion = {\n  id: TimezoneRegions.AsiaRiyadh,\n  name: 'Asia/Riyadh',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaSakhalin: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSakhalin,\n  name: 'Asia/Sakhalin',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SakhalinIslandTime,\n};\n\nexport const AsiaSamarkand: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSamarkand,\n  name: 'Asia/Samarkand',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.UzbekistanTime,\n};\n\nexport const AsiaSeoul: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSeoul,\n  name: 'Asia/Seoul',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.KoreaStandardTime,\n};\n\nexport const AsiaShanghai: TimezoneRegion = {\n  id: TimezoneRegions.AsiaShanghai,\n  name: 'Asia/Shanghai',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime,\n};\n\nexport const AsiaSingapore: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSingapore,\n  name: 'Asia/Singapore',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.SingaporeStandardTime,\n};\n\nexport const AsiaSrednekolymsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSrednekolymsk,\n  name: 'Asia/Srednekolymsk',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SrednekolymskTime,\n};\n\nexport const AsiaTaipei: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTaipei,\n  name: 'Asia/Taipei',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime,\n};\n\nexport const AsiaTashkent: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTashkent,\n  name: 'Asia/Tashkent',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.UzbekistanTime,\n};\n\nexport const AsiaTbilisi: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTbilisi,\n  name: 'Asia/Tbilisi',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.GeorgiaStandardTime,\n};\n\nexport const AsiaTehran: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTehran,\n  name: 'Asia/Tehran',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.IranStandardTime,\n};\n\nexport const AsiaThimphu: TimezoneRegion = {\n  id: TimezoneRegions.AsiaThimphu,\n  name: 'Asia/Thimphu',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.BhutanTime,\n};\n\nexport const AsiaTokyo: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTokyo,\n  name: 'Asia/Tokyo',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.JapanStandardTime,\n};\n\nexport const AsiaTomsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTomsk,\n  name: 'Asia/Tomsk',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.KrasnoyarskTime,\n};\n\nexport const AsiaUlaanbaatar: TimezoneRegion = {\n  id: TimezoneRegions.AsiaUlaanbaatar,\n  name: 'Asia/Ulaanbaatar',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.UlaanbaatarStandardTime,\n};\n\nexport const AsiaUrumqi: TimezoneRegion = {\n  id: TimezoneRegions.AsiaUrumqi,\n  name: 'Asia/Urumqi',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime,\n};\n\nexport const AsiaUstNera: TimezoneRegion = {\n  id: TimezoneRegions.AsiaUstNera,\n  name: 'Asia/Ust-Nera',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.VladivostokTime,\n};\n\nexport const AsiaVientiane: TimezoneRegion = {\n  id: TimezoneRegions.AsiaVientiane,\n  name: 'Asia/Vientiane',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime,\n};\n\nexport const AsiaVladivostok: TimezoneRegion = {\n  id: TimezoneRegions.AsiaVladivostok,\n  name: 'Asia/Vladivostok',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.VladivostokTime,\n};\n\nexport const AsiaYakutsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaYakutsk,\n  name: 'Asia/Yakutsk',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.YakutskTime,\n};\n\nexport const AsiaYekaterinburg: TimezoneRegion = {\n  id: TimezoneRegions.AsiaYekaterinburg,\n  name: 'Asia/Yekaterinburg',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.YekaterinburgTime,\n};\n\nexport const AsiaYerevan: TimezoneRegion = {\n  id: TimezoneRegions.AsiaYerevan,\n  name: 'Asia/Yerevan',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.ArmeniaTime,\n};\n\nexport const AtlanticAzores: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticAzores,\n  name: 'Atlantic/Azores',\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.AzoresStandardTime,\n};\n\nexport const AtlanticBermuda: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticBermuda,\n  name: 'Atlantic/Bermuda',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AtlanticCanary: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticCanary,\n  name: 'Atlantic/Canary',\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.WesternEuropeanTime,\n};\n\nexport const AtlanticCapeVerde: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticCapeVerde,\n  name: 'Atlantic/Cape_Verde',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CapeVerdeTime,\n};\n\nexport const AtlanticFaroe: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticFaroe,\n  name: 'Atlantic/Faroe',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AtlanticMadeira: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticMadeira,\n  name: 'Atlantic/Madeira',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.WesternEuropeanTime,\n};\n\nexport const AtlanticReykjavik: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticReykjavik,\n  name: 'Atlantic/Reykjavik',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AtlanticSouthGeorgia: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticSouthGeorgia,\n  name: 'Atlantic/South_Georgia',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AtlanticStHelena: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticStHelena,\n  name: 'Atlantic/St_Helena',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AtlanticStanley: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticStanley,\n  name: 'Atlantic/Stanley',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.FalklandIslandsTime,\n};\n\nexport const AustraliaAdelaide: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaAdelaide,\n  name: 'Australia/Adelaide',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n  timezone: Timezones.AustralianCentralStandardTime,\n};\n\nexport const AustraliaBrisbane: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaBrisbane,\n  name: 'Australia/Brisbane',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaBrokenHill: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaBrokenHill,\n  name: 'Australia/Broken_Hill',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n  timezone: Timezones.AustralianCentralStandardTime,\n};\n\nexport const AustraliaCanberra: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaCanberra,\n  name: 'Australia/Canberra',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaCurrie: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaCurrie,\n  name: 'Australia/Currie',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaDarwin: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaDarwin,\n  name: 'Australia/Darwin',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n  timezone: Timezones.AustralianCentralStandardTime,\n};\n\nexport const AustraliaEucla: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaEucla,\n  name: 'Australia/Eucla',\n  offset: TimezoneOffset.UTC_PLUS_8_45,\n  timezone: Timezones.AustralianCentralWesternStandardTime,\n};\n\nexport const AustraliaHobart: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaHobart,\n  name: 'Australia/Hobart',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaLindeman: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaLindeman,\n  name: 'Australia/Lindeman',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaLordHowe: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaLordHowe,\n  name: 'Australia/Lord_Howe',\n  offset: TimezoneOffset.UTC_PLUS_10_30,\n  timezone: Timezones.LordHoweStandardTime,\n};\n\nexport const AustraliaMelbourne: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaMelbourne,\n  name: 'Australia/Melbourne',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaPerth: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaPerth,\n  name: 'Australia/Perth',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.AustralianWesternStandardTime,\n};\n\nexport const AustraliaSydney: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaSydney,\n  name: 'Australia/Sydney',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const EuropeAmsterdam: TimezoneRegion = {\n  id: TimezoneRegions.EuropeAmsterdam,\n  name: 'Europe/Amsterdam',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeAndorra: TimezoneRegion = {\n  id: TimezoneRegions.EuropeAndorra,\n  name: 'Europe/Andorra',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeAthens: TimezoneRegion = {\n  id: TimezoneRegions.EuropeAthens,\n  name: 'Europe/Athens',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeBelgrade: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBelgrade,\n  name: 'Europe/Belgrade',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBerlin: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBerlin,\n  name: 'Europe/Berlin',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBratislava: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBratislava,\n  name: 'Europe/Bratislava',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBrussels: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBrussels,\n  name: 'Europe/Brussels',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBucharest: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBucharest,\n  name: 'Europe/Bucharest',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeBudapest: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBudapest,\n  name: 'Europe/Budapest',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBusingen: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBusingen,\n  name: 'Europe/Busingen',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeChisinau: TimezoneRegion = {\n  id: TimezoneRegions.EuropeChisinau,\n  name: 'Europe/Chisinau',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeCopenhagen: TimezoneRegion = {\n  id: TimezoneRegions.EuropeCopenhagen,\n  name: 'Europe/Copenhagen',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeDublin: TimezoneRegion = {\n  id: TimezoneRegions.EuropeDublin,\n  name: 'Europe/Dublin',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const EuropeGibraltar: TimezoneRegion = {\n  id: TimezoneRegions.EuropeGibraltar,\n  name: 'Europe/Gibraltar',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeGuernsey: TimezoneRegion = {\n  id: TimezoneRegions.EuropeGuernsey,\n  name: 'Europe/Guernsey',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeHelsinki: TimezoneRegion = {\n  id: TimezoneRegions.EuropeHelsinki,\n  name: 'Europe/Helsinki',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeIsleOfMan: TimezoneRegion = {\n  id: TimezoneRegions.EuropeIsleOfMan,\n  name: 'Europe/Isle_of_Man',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const EuropeIstanbul: TimezoneRegion = {\n  id: TimezoneRegions.EuropeIstanbul,\n  name: 'Europe/Istanbul',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeJersey: TimezoneRegion = {\n  id: TimezoneRegions.EuropeJersey,\n  name: 'Europe/Jersey',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeKaliningrad: TimezoneRegion = {\n  id: TimezoneRegions.EuropeKaliningrad,\n  name: 'Europe/Kaliningrad',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeKiev: TimezoneRegion = {\n  id: TimezoneRegions.EuropeKiev,\n  name: 'Europe/Kiev',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeLisbon: TimezoneRegion = {\n  id: TimezoneRegions.EuropeLisbon,\n  name: 'Europe/Lisbon',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const EuropeLjubljana: TimezoneRegion = {\n  id: TimezoneRegions.EuropeLjubljana,\n  name: 'Europe/Ljubljana',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeLondon: TimezoneRegion = {\n  id: TimezoneRegions.EuropeLondon,\n  name: 'Europe/London',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const EuropeLuxembourg: TimezoneRegion = {\n  id: TimezoneRegions.EuropeLuxembourg,\n  name: 'Europe/Luxembourg',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeMadrid: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMadrid,\n  name: 'Europe/Madrid',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeMalta: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMalta,\n  name: 'Europe/Malta',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeMariehamn: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMariehamn,\n  name: 'Europe/Mariehamn',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeMinsk: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMinsk,\n  name: 'Europe/Minsk',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeMonaco: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMonaco,\n  name: 'Europe/Monaco',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeMoscow: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMoscow,\n  name: 'Europe/Moscow',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeOslo: TimezoneRegion = {\n  id: TimezoneRegions.EuropeOslo,\n  name: 'Europe/Oslo',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeParis: TimezoneRegion = {\n  id: TimezoneRegions.EuropeParis,\n  name: 'Europe/Paris',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropePodgorica: TimezoneRegion = {\n  id: TimezoneRegions.EuropePodgorica,\n  name: 'Europe/Podgorica',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropePrague: TimezoneRegion = {\n  id: TimezoneRegions.EuropePrague,\n  name: 'Europe/Prague',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeRiga: TimezoneRegion = {\n  id: TimezoneRegions.EuropeRiga,\n  name: 'Europe/Riga',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeRome: TimezoneRegion = {\n  id: TimezoneRegions.EuropeRome,\n  name: 'Europe/Rome',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeSamara: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSamara,\n  name: 'Europe/Samara',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeSanMarino: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSanMarino,\n  name: 'Europe/San_Marino',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeSarajevo: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSarajevo,\n  name: 'Europe/Sarajevo',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeSimferopol: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSimferopol,\n  name: 'Europe/Simferopol',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeSkopje: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSkopje,\n  name: 'Europe/Skopje',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeSofia: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSofia,\n  name: 'Europe/Sofia',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeStockholm: TimezoneRegion = {\n  id: TimezoneRegions.EuropeStockholm,\n  name: 'Europe/Stockholm',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeTallinn: TimezoneRegion = {\n  id: TimezoneRegions.EuropeTallinn,\n  name: 'Europe/Tallinn',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeTirane: TimezoneRegion = {\n  id: TimezoneRegions.EuropeTirane,\n  name: 'Europe/Tirane',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeUzhgorod: TimezoneRegion = {\n  id: TimezoneRegions.EuropeUzhgorod,\n  name: 'Europe/Uzhgorod',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeVaduz: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVaduz,\n  name: 'Europe/Vaduz',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeVatican: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVatican,\n  name: 'Europe/Vatican',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeVienna: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVienna,\n  name: 'Europe/Vienna',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeVilnius: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVilnius,\n  name: 'Europe/Vilnius',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeVolgograd: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVolgograd,\n  name: 'Europe/Volgograd',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeWarsaw: TimezoneRegion = {\n  id: TimezoneRegions.EuropeWarsaw,\n  name: 'Europe/Warsaw',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeZagreb: TimezoneRegion = {\n  id: TimezoneRegions.EuropeZagreb,\n  name: 'Europe/Zagreb',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeZaporozhye: TimezoneRegion = {\n  id: TimezoneRegions.EuropeZaporozhye,\n  name: 'Europe/Zaporozhye',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeZurich: TimezoneRegion = {\n  id: TimezoneRegions.EuropeZurich,\n  name: 'Europe/Zurich',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const IndianAntananarivo: TimezoneRegion = {\n  id: TimezoneRegions.IndianAntananarivo,\n  name: 'Indian/Antananarivo',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const IndianChagos: TimezoneRegion = {\n  id: TimezoneRegions.IndianChagos,\n  name: 'Indian/Chagos',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.IndianOceanTime,\n};\n\nexport const IndianChristmas: TimezoneRegion = {\n  id: TimezoneRegions.IndianChristmas,\n  name: 'Indian/Christmas',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.ChristmasIslandTime,\n};\n\nexport const IndianCocos: TimezoneRegion = {\n  id: TimezoneRegions.IndianCocos,\n  name: 'Indian/Cocos',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.CocosIslandsTime,\n};\n\nexport const IndianComoro: TimezoneRegion = {\n  id: TimezoneRegions.IndianComoro,\n  name: 'Indian/Comoro',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const IndianKerguelen: TimezoneRegion = {\n  id: TimezoneRegions.IndianKerguelen,\n  name: 'Indian/Kerguelen',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.FrenchSouthernAndAntarcticTime,\n};\n\nexport const IndianMahe: TimezoneRegion = {\n  id: TimezoneRegions.IndianMahe,\n  name: 'Indian/Mahe',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.SeychellesTime,\n};\n\nexport const IndianMaldives: TimezoneRegion = {\n  id: TimezoneRegions.IndianMaldives,\n  name: 'Indian/Maldives',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.MaldivesTime,\n};\n\nexport const IndianMauritius: TimezoneRegion = {\n  id: TimezoneRegions.IndianMauritius,\n  name: 'Indian/Mauritius',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.MauritiusTime,\n};\n\nexport const IndianMayotte: TimezoneRegion = {\n  id: TimezoneRegions.IndianMayotte,\n  name: 'Indian/Mayotte',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const IndianReunion: TimezoneRegion = {\n  id: TimezoneRegions.IndianReunion,\n  name: 'Indian/Reunion',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.ReunionTime,\n};\n\nexport const PacificApia: TimezoneRegion = {\n  id: TimezoneRegions.PacificApia,\n  name: 'Pacific/Apia',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.SamoaStandardTime,\n};\n\nexport const PacificAuckland: TimezoneRegion = {\n  id: TimezoneRegions.PacificAuckland,\n  name: 'Pacific/Auckland',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.NewZealandStandardTime,\n};\n\nexport const PacificChatham: TimezoneRegion = {\n  id: TimezoneRegions.PacificChatham,\n  name: 'Pacific/Chatham',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.ChathamStandardTime,\n};\n\nexport const PacificEaster: TimezoneRegion = {\n  id: TimezoneRegions.PacificEaster,\n  name: 'Pacific/Easter',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.EasterIslandStandardTime,\n};\n\nexport const PacificEfate: TimezoneRegion = {\n  id: TimezoneRegions.PacificEfate,\n  name: 'Pacific/Efate',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.VanuatuTime,\n};\n\nexport const PacificEnderbury: TimezoneRegion = {\n  id: TimezoneRegions.PacificEnderbury,\n  name: 'Pacific/Enderbury',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.TongaTime,\n};\n\nexport const PacificFakaofo: TimezoneRegion = {\n  id: TimezoneRegions.PacificFakaofo,\n  name: 'Pacific/Fakaofo',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.TongaTime,\n};\n\nexport const PacificFiji: TimezoneRegion = {\n  id: TimezoneRegions.PacificFiji,\n  name: 'Pacific/Fiji',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.FijiTime,\n};\n\nexport const PacificFunafuti: TimezoneRegion = {\n  id: TimezoneRegions.PacificFunafuti,\n  name: 'Pacific/Funafuti',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.TuvaluTime,\n};\n\nexport const PacificGalapagos: TimezoneRegion = {\n  id: TimezoneRegions.PacificGalapagos,\n  name: 'Pacific/Galapagos',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.GalapagosTime,\n};\n\nexport const PacificGambier: TimezoneRegion = {\n  id: TimezoneRegions.PacificGambier,\n  name: 'Pacific/Gambier',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.GambierIslandTime,\n};\n\nexport const PacificGuadalcanal: TimezoneRegion = {\n  id: TimezoneRegions.PacificGuadalcanal,\n  name: 'Pacific/Guadalcanal',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SolomonIslandsTime,\n};\n\nexport const PacificGuam: TimezoneRegion = {\n  id: TimezoneRegions.PacificGuam,\n  name: 'Pacific/Guam',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChamorroStandardTime,\n};\n\nexport const PacificHonolulu: TimezoneRegion = {\n  id: TimezoneRegions.PacificHonolulu,\n  name: 'Pacific/Honolulu',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime,\n};\n\nexport const PacificJohnston: TimezoneRegion = {\n  id: TimezoneRegions.PacificJohnston,\n  name: 'Pacific/Johnston',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime,\n};\n\nexport const PacificKiritimati: TimezoneRegion = {\n  id: TimezoneRegions.PacificKiritimati,\n  name: 'Pacific/Kiritimati',\n  offset: TimezoneOffset.UTC_PLUS_14,\n  timezone: Timezones.LineIslandsTime,\n};\n\nexport const PacificKosrae: TimezoneRegion = {\n  id: TimezoneRegions.PacificKosrae,\n  name: 'Pacific/Kosrae',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.KosraeTime,\n};\n\nexport const PacificKwajalein: TimezoneRegion = {\n  id: TimezoneRegions.PacificKwajalein,\n  name: 'Pacific/Kwajalein',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.MarshallIslandsTime,\n};\n\nexport const PacificMajuro: TimezoneRegion = {\n  id: TimezoneRegions.PacificMajuro,\n  name: 'Pacific/Majuro',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.MarshallIslandsTime,\n};\n\nexport const PacificMarquesas: TimezoneRegion = {\n  id: TimezoneRegions.PacificMarquesas,\n  name: 'Pacific/Marquesas',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.MarquesasIslandsTime,\n};\n\nexport const PacificMidway: TimezoneRegion = {\n  id: TimezoneRegions.PacificMidway,\n  name: 'Pacific/Midway',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SamoaStandardTime,\n};\n\nexport const PacificNauru: TimezoneRegion = {\n  id: TimezoneRegions.PacificNauru,\n  name: 'Pacific/Nauru',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.NauruTime,\n};\n\nexport const PacificNiue: TimezoneRegion = {\n  id: TimezoneRegions.PacificNiue,\n  name: 'Pacific/Niue',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.NiueTime,\n};\n\nexport const PacificNorfolk: TimezoneRegion = {\n  id: TimezoneRegions.PacificNorfolk,\n  name: 'Pacific/Norfolk',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.NorfolkIslandTime,\n};\n\nexport const PacificNoumea: TimezoneRegion = {\n  id: TimezoneRegions.PacificNoumea,\n  name: 'Pacific/Noumea',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.NewCaledoniaTime,\n};\n\nexport const PacificPagoPago: TimezoneRegion = {\n  id: TimezoneRegions.PacificPagoPago,\n  name: 'Pacific/Pago_Pago',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SamoaStandardTime,\n};\n\nexport const PacificPalau: TimezoneRegion = {\n  id: TimezoneRegions.PacificPalau,\n  name: 'Pacific/Palau',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.PalauTime,\n};\n\nexport const PacificPitcairn: TimezoneRegion = {\n  id: TimezoneRegions.PacificPitcairn,\n  name: 'Pacific/Pitcairn',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.PitcairnTime,\n};\n\nexport const PacificPonape: TimezoneRegion = {\n  id: TimezoneRegions.PacificPonape,\n  name: 'Pacific/Ponape',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.PohnpeiStandardTime,\n};\n\nexport const PacificPortMoresby: TimezoneRegion = {\n  id: TimezoneRegions.PacificPortMoresby,\n  name: 'Pacific/Port_Moresby',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.PapuaNewGuineaTime,\n};\n\nexport const PacificRarotonga: TimezoneRegion = {\n  id: TimezoneRegions.PacificRarotonga,\n  name: 'Pacific/Rarotonga',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.CookIslandTime,\n};\n\nexport const PacificSaipan: TimezoneRegion = {\n  id: TimezoneRegions.PacificSaipan,\n  name: 'Pacific/Saipan',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChamorroStandardTime,\n};\n\nexport const PacificTahiti: TimezoneRegion = {\n  id: TimezoneRegions.PacificTahiti,\n  name: 'Pacific/Tahiti',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.TahitiTime,\n};\n\nexport const PacificTarawa: TimezoneRegion = {\n  id: TimezoneRegions.PacificTarawa,\n  name: 'Pacific/Tarawa',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.GilbertIslandTime,\n};\n\nexport const PacificTongatapu: TimezoneRegion = {\n  id: TimezoneRegions.PacificTongatapu,\n  name: 'Pacific/Tongatapu',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.TongaTime,\n};\n\nexport const PacificChuuk: TimezoneRegion = {\n  id: TimezoneRegions.PacificChuuk,\n  name: 'Pacific/Chuuk',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChuukTime,\n};\n\nexport const PacificPohnpei: TimezoneRegion = {\n  id: TimezoneRegions.PacificPohnpei,\n  name: 'Pacific/Pohnpei',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.PohnpeiStandardTime,\n};\n\nexport const PacificYap: TimezoneRegion = {\n  id: TimezoneRegions.PacificYap,\n  name: 'Pacific/Yap',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChuukTime,\n};\n", "import { DateTime } from 'luxon';\n\nexport enum Analytics {\n  Business = 'business',\n  Engineering = 'engineering',\n  Exception = 'exception',\n  LogMessage = 'log-message',\n  Marketing = 'marketing',\n  PageLeave = 'page-leave',\n  PageView = 'page-view',\n  Product = 'product',\n  QualityManagement = 'quality-management',\n  UserAccess = 'user-access',\n  UserLogin = 'user-login',\n  UserLogout = 'user-logout',\n  UserSignup = 'user-signup',\n  UserPreferencesChanged = 'user-preferences-changed',\n  WebsiteVisit = 'website-visit',\n}\n\nexport type AnalyticsEvent<T = {}> = {\n  created: DateTime;\n  data?: Record<string, unknown>;\n  id?: string;\n  message?: string;\n  name: Analytics;\n} & T;\n", "import { UserAccessDevice } from '../../user/access';\nimport { Analytics, AnalyticsEvent } from '..';\n\nexport enum PageLeaveMethod {\n  CloseTab = 'close-tab',\n  ExternalLink = 'external-link',\n  NavigateAway = 'navigate-away',\n  Unknown = 'unknown',\n}\n\nexport type PageViewEvent = AnalyticsEvent<{\n  data: {\n    device: UserAccessDevice;\n    referrer_url?: string;\n  };\n  description: 'Occurs when a person views a page in a Website or application.';\n  id: string;\n  name: Analytics.PageView;\n}>;\n\nexport type PageLeaveEvent = AnalyticsEvent<{\n  data: {\n    device: UserAccessDevice;\n    leave_method: PageLeaveMethod;\n  };\n  description: 'Occurs when a person leaves a page.';\n  id: string;\n  name: Analytics.PageLeave;\n}>;\n\nexport type WebsiteVisitEvent = AnalyticsEvent<{\n  device: UserAccessDevice;\n  description: 'Occurs when a person a website.';\n  id: string;\n  name: Analytics.WebsiteVisit;\n}>;\n", "export enum BuildFormat {\n  CJS = 'cjs',\n  ESM = 'esm',\n  IIFE = 'iife',\n  UMD = 'umd',\n}\n\nexport interface BundleOptions {\n  readonly css?: boolean;\n  readonly exclude?: readonly string[];\n}\n\nexport enum BuildTarget {\n  ES5 = 'es5',\n  ES6 = 'es6',\n  ES2015 = 'es2015',\n  ES2016 = 'es2016',\n  ES2017 = 'es2017',\n  ES2018 = 'es2018',\n  ES2019 = 'es2019',\n  ES2020 = 'es2020',\n  ES2021 = 'es2021',\n  ES2022 = 'es2022',\n  ESNext = 'esnext',\n  Latest = 'latest',\n}\n\nexport enum BuildTool {\n  ESBuild = 'esbuild',\n  Vite = 'vite',\n}\n\nexport enum BuildPlatform {\n  Browser = 'browser',\n  Node = 'node',\n}\n\nexport type BuildOptions = {\n  readonly assets?: {\n    readonly directory?: string;\n    readonly public?: boolean;\n  };\n  readonly bundle?: boolean | BundleOptions;\n  readonly configPath?: string;\n  readonly format?: BuildFormat;\n  readonly formats?: readonly BuildFormat[];\n  readonly input?: {\n    readonly directory: string;\n    readonly file?: string;\n    readonly files?: readonly string[];\n  };\n  readonly library?:\n    | boolean\n    | {\n        readonly name: string;\n      };\n  readonly manifest?: boolean;\n  readonly minify?: boolean;\n  readonly output?: {\n    readonly clean?: boolean;\n    readonly directory: string;\n    readonly file?: string;\n  };\n  readonly platform?: BuildPlatform;\n  readonly rootDir?: string;\n  readonly sourcemap?: boolean;\n  readonly splitting?: boolean;\n  readonly target?: BuildTarget;\n  readonly tool: BuildTool;\n  readonly treeShaking?: boolean;\n  readonly types?:\n    | boolean\n    | {\n        readonly configPath?: string;\n      };\n  readonly webApp?: {\n    readonly react?: boolean;\n    readonly ssr?: boolean;\n  };\n};\n\nexport interface ESBuildOptions extends Omit<BuildOptions, 'formats' | 'tool'> {\n  readonly format?: BuildFormat.CJS | BuildFormat.ESM | BuildFormat.IIFE;\n}\n\nexport interface ViteBuildOptions\n  extends Omit<BuildOptions, 'format' | 'splitting' | 'tool' | 'treeShaking'> {\n  readonly format?:\n    | BuildFormat.CJS\n    | BuildFormat.ESM\n    | BuildFormat.IIFE\n    | BuildFormat.UMD;\n  readonly optimize?: {\n    readonly exclude?: string[];\n    readonly include?: string[];\n  };\n}\n", "import { CurrencyCode } from '../../../i18n/currency';\nimport { Person } from '../../../people/person';\n\nexport enum DataPointMetric {\n  AccountBalance = 'AccountBalance',\n  UserAssets = 'UserAssets',\n  UserCreditCardDebt = 'UserCreditCardDebt',\n  UserCreditLimit = 'UserCreditLimit',\n  UserCreditUtilization = 'UserCreditUtilization',\n  UserDebt = 'UserDebt',\n  UserInvestments = 'UserInvestments',\n  UserRetirement = 'UserRetirement',\n  UserSavings = 'UserSavings',\n}\n\nexport type DataPoint = {\n  id: string;\n  date: Date;\n  currency_code?: CurrencyCode;\n  metric: DataPointMetric;\n  value: number;\n  person_id: Person['id'];\n};\n", "export enum DefaultValue {\n  DateTime = 'date_time',\n  True = 'true',\n  False = 'false',\n  UniqueId = 'unique_id',\n}\n", "import { DateTime } from 'luxon';\n\nimport { ModelField } from './field';\nimport { Relationship } from './relationship';\n\nexport enum ModelType {\n  DomainModel = 'domain_entity',\n  GenericModel = 'generic_entity',\n}\n\nexport type ModelProps<T = {}> = {\n  created?: DateTime;\n  description?: string;\n  fields: Record<string, ModelField>;\n  id?: string; // This won't be optional when entities are stored in a database instead of a file.\n  name: string;\n  relationships?: Relationship;\n  updated?: DateTime;\n} & T;\n\nexport class Model implements ModelProps {\n  created?: DateTime;\n  description?: string;\n  fields: Record<string, ModelField>;\n  id?: string; // This won't be optional when entities are stored in a database instead of a file.\n  name: string;\n  relationships?: Relationship;\n  updated?: DateTime;\n\n  constructor(props: ModelProps) {\n    const { created, description, fields, name, id, relationships, updated } =\n      props;\n\n    this.created = created;\n    this.description = description;\n    this.fields = fields;\n    this.id = id;\n    this.name = name;\n    this.relationships = relationships;\n    this.updated = updated;\n  }\n}\n", "import { CurrencyCode } from '../../../i18n/currency';\nimport { CountryCode } from '../../../i18n/locale/country';\nimport { ISO8601String } from '../../../i18n/date';\nimport { LanguageCode } from '../../../i18n/language';\nimport { TimezoneRegions } from '../../../i18n/time/region';\n\nexport type MenuItem = {\n  label: string;\n  value: string | number | boolean;\n};\n\nexport type AirportCode = string;\nexport type BankIDCode = string;\nexport type BitcoinAddress = string;\nexport type Boolean = boolean;\nexport type City = string;\nexport type Color = string;\nexport type CreditCard = string;\nexport type CurrencyAmount = number;\nexport type DataURI = string;\nexport type Date = ISO8601String;\nexport type DateRange = ISO8601String[];\nexport type DateTime = ISO8601String;\nexport type DayOfMonth = string;\nexport type DomainName = string;\nexport type EmailAddress = string;\nexport type EthereumAddress = string;\nexport type EAN = string;\nexport type EIN = string;\nexport type Float = number;\nexport type GeographicCoordinate = number;\nexport type GeographicCoordinates = number[];\nexport type GitRepositoryURL = string;\nexport type HSLColor = string;\nexport type HexColor = string;\nexport type Hexadecimal = string;\nexport type IBAN = string;\nexport type IMEI = number;\nexport type IPAddress = string;\nexport type IPAddressRange = string[];\nexport type ISBN = string;\nexport type ISIN = string;\nexport type ISMN = string;\nexport type ISSN = string;\nexport type ISO8601 = string;\nexport type ISO31661Alpha2 = string;\nexport type ISO31661Alpha3 = string;\nexport type ISO4217 = CurrencyCode;\nexport type Image = {\n  description?: string;\n  format?: string;\n  path?: string;\n  url?: string;\n};\nexport type Integer = number;\nexport type JSONObject = Record<string, unknown>;\nexport type LicensePlateNumber = string;\nexport type LongText = string;\nexport type MD5 = string;\nexport type MACAddress = string;\nexport type MagnetURI = string;\nexport type Markdown = string;\nexport type Menu = {\n  defaultValue?: MenuItem['value'];\n  items: MenuItem[];\n};\nexport type MimeType = string;\nexport type Month = string;\nexport type Number = number;\nexport type Password = string;\nexport type PassportNumber = string;\nexport type Percent = number;\nexport type PhoneNumber = string;\nexport type Port = number;\nexport type PostalCode = string;\nexport type Province = string;\nexport type RFC3339 = string;\nexport type RGBColor = string;\nexport type SemanticVersion = string;\nexport type SSN = number;\nexport type State = string;\nexport type StreetAddress = string;\nexport type String = string;\nexport type Tags = MenuItem[];\nexport type TaxIDNumber = string;\nexport type Time = string;\nexport type TimeRange = string[];\nexport type TimeOfDay = string;\nexport type Timezone = TimezoneRegions;\nexport type URL = string;\nexport type URLPath = string;\nexport type UUID = string;\nexport type VATIDNumber = string;\nexport type VerificationCode = string;\nexport type Video = {\n  description?: string;\n  format?: string;\n  url?: string;\n  path?: string;\n};\nexport type Weekday = string;\nexport type Year = number;\n\nexport type Primitive =\n  | AirportCode\n  | BankIDCode\n  | BitcoinAddress\n  | boolean\n  | City\n  | Color\n  | CountryCode\n  | CreditCard\n  | CurrencyAmount\n  | CurrencyCode\n  | DataURI\n  | Date\n  | DateRange\n  | DateTime\n  | DayOfMonth\n  | DomainName\n  | EmailAddress\n  | EthereumAddress\n  | EAN\n  | EIN\n  | Float\n  | GeographicCoordinate\n  | GeographicCoordinates\n  | GitRepositoryURL\n  | HSLColor\n  | HexColor\n  | Hexadecimal\n  | IBAN\n  | IMEI\n  | IPAddress\n  | IPAddressRange\n  | ISBN\n  | ISIN\n  | ISMN\n  | ISSN\n  | ISO8601\n  | ISO31661Alpha2\n  | ISO31661Alpha3\n  | ISO4217\n  | Image\n  | Integer\n  | JSONObject\n  | LanguageCode\n  | LicensePlateNumber\n  | LongText\n  | MD5\n  | Markdown\n  | Menu\n  | number\n  | MACAddress\n  | MagnetURI\n  | MimeType\n  | Month\n  | Password\n  | PassportNumber\n  | Percent\n  | PhoneNumber\n  | Port\n  | PostalCode\n  | Province\n  | RFC3339\n  | RGBColor\n  | SemanticVersion\n  | SSN\n  | State\n  | StreetAddress\n  | string\n  | Tags\n  | TaxIDNumber\n  | Time\n  | TimeRange\n  | TimeOfDay\n  | Timezone\n  | URL\n  | URLPath\n  | UUID\n  | VATIDNumber\n  | Video\n  | VerificationCode\n  | Weekday\n  | Year;\n\n// export enum Primitives {\n//   AirportCode = AirportCode,\n//   BankIDCode = BankIDCode,\n//   BitcoinAddress = BitcoinAddress,\n//   Boolean = Boolean,\n//   City = City,\n//   Color = Color,\n//   CountryCode = CountryCode,\n//   CreditCard = CreditCard,\n//   CurrencyAmount = CurrencyAmount,\n//   CurrencyCode =CurrencyCode,\n//   DataURI = 'data-uri',\n//   Date = 'date',\n//   DateRange = 'date-range',\n//   DateTime = 'date-time',\n//   DayOfMonth = 'day-of-month',\n//   DomainName = 'domain-name',\n//   EmailAddress = 'email-address',\n//   EthereumAddress = 'ethereum-address',\n//   EAN = 'european-article-number',\n//   EIN = 'employer-identification-number',\n//   Float = 'float',\n//   GeographicCoordinate = 'geographic-coordinate',\n//   GeographicCoordinates = 'geographic-coordinates',\n//   GitRepositoryURL = 'git-repository-url',\n//   HSLColor = 'hsl-color',\n//   HexColor = 'hex-color',\n//   Hexadecimal = 'hexadecimal',\n//   IBAN = 'international-bank-account-number',\n//   IMEI = 'international-mobile-equipment-identifier',\n//   IPAddress = 'ip-address',\n//   IPAddressRange = 'ip-address-range',\n//   ISBN = 'international-standard-book-number',\n//   ISIN = 'international-stock-number',\n//   ISMN = 'international-standard-music-number',\n//   ISSN = 'international-standard-serial-number',\n//   ISO8601 = 'iso-8601',\n//   ISO31661Alpha2 = 'iso-31661-alpha-2',\n//   ISO31661Alpha3 = 'iso-31661-alpha-3',\n//   ISO4217 = 'iso-4217',\n//   Image = 'image',\n//   Integer = 'integer',\n//   JSON = 'json',\n//   LanguageCode = 'language-code',\n//   LicensePlateNumber = 'license-plate-number',\n//   LongText = 'long-text',\n//   MD5 = 'md5',\n//   Markdown = 'markdown',\n//   Menu = 'menu',\n//   Number = 'number',\n//   MACAddress = 'mac-address',\n//   MagnetURI = 'magnet-uri',\n//   MimeType = 'mime-type',\n//   Month = 'month',\n//   Password = 'password',\n//   PassportNumber = 'passport-number',\n//   Percent = 'percent',\n//   PhoneNumber = 'phone-number',\n//   Port = 'port',\n//   PostalCode = 'postal-code',\n//   Province = 'province',\n//   RFC3339 = 'rfc-3339',\n//   RGBColor = 'rgb-color',\n//   SemanticVersion = 'semantic-version',\n//   SSN = 'social-security-number',\n//   State = 'state',\n//   StreetAddress = 'street-address',\n//   String = 'string',\n//   Tags = 'tags',\n//   TaxIDNumber = 'tax-id-number',\n//   Time = 'time',\n//   TimeOfDay = 'time-of-day',\n//   TimeRange = 'time-range',\n//   TimezoneRegion = 'timezone-region',\n//   URL = 'url',\n//   URLPath = 'url-path',\n//   UUID = 'uuid',\n//   VATIDNumber = 'value-added-tax-id-number',\n//   VerificationCode = 'verification-code',\n//   Video = 'video',\n//   Weekday = 'weekday',\n//   Year = 'year',\n// }\n\nexport enum Primitives {\n  AirportCode = 'airport-code',\n  BankIDCode = 'bank-id-code',\n  BitcoinAddress = 'bitcoin-address',\n  Boolean = 'boolean',\n  City = 'city',\n  Color = 'color',\n  CountryCode = 'country-code',\n  CreditCard = 'credit-card',\n  CurrencyAmount = 'currency-amount',\n  CurrencyCode = 'currency-code',\n  DataURI = 'data-uri',\n  Date = 'date',\n  DateRange = 'date-range',\n  DateTime = 'date-time',\n  DayOfMonth = 'day-of-month',\n  DomainName = 'domain-name',\n  EmailAddress = 'email-address',\n  EthereumAddress = 'ethereum-address',\n  EAN = 'european-article-number',\n  EIN = 'employer-identification-number',\n  Float = 'float',\n  GeographicCoordinate = 'geographic-coordinate',\n  GeographicCoordinates = 'geographic-coordinates',\n  GitRepositoryURL = 'git-repository-url',\n  HSLColor = 'hsl-color',\n  HexColor = 'hex-color',\n  Hexadecimal = 'hexadecimal',\n  IBAN = 'international-bank-account-number',\n  IMEI = 'international-mobile-equipment-identifier',\n  IPAddress = 'ip-address',\n  IPAddressRange = 'ip-address-range',\n  ISBN = 'international-standard-book-number',\n  ISIN = 'international-stock-number',\n  ISMN = 'international-standard-music-number',\n  ISSN = 'international-standard-serial-number',\n  ISO8601 = 'iso-8601',\n  ISO31661Alpha2 = 'iso-31661-alpha-2',\n  ISO31661Alpha3 = 'iso-31661-alpha-3',\n  ISO4217 = 'iso-4217',\n  Image = 'image',\n  Integer = 'integer',\n  JSON = 'json',\n  LanguageCode = 'language-code',\n  LicensePlateNumber = 'license-plate-number',\n  LongText = 'long-text',\n  MD5 = 'md5',\n  Markdown = 'markdown',\n  Menu = 'menu',\n  Number = 'number',\n  MACAddress = 'mac-address',\n  MagnetURI = 'magnet-uri',\n  MimeType = 'mime-type',\n  Month = 'month',\n  Password = 'password',\n  PassportNumber = 'passport-number',\n  Percent = 'percent',\n  PhoneNumber = 'phone-number',\n  Port = 'port',\n  PostalCode = 'postal-code',\n  Province = 'province',\n  RFC3339 = 'rfc-3339',\n  RGBColor = 'rgb-color',\n  SemanticVersion = 'semantic-version',\n  SSN = 'social-security-number',\n  State = 'state',\n  StreetAddress = 'street-address',\n  String = 'string',\n  Tags = 'tags',\n  TaxIDNumber = 'tax-id-number',\n  Time = 'time',\n  TimeOfDay = 'time-of-day',\n  TimeRange = 'time-range',\n  TimezoneRegion = 'timezone-region',\n  URL = 'url',\n  URLPath = 'url-path',\n  UUID = 'uuid',\n  VATIDNumber = 'value-added-tax-id-number',\n  VerificationCode = 'verification-code',\n  Video = 'video',\n  Weekday = 'weekday',\n  Year = 'year',\n}\n", "import { InfrastructureOptions } from './infrastructure';\n\nexport enum DeploymentStrategy {\n  BlueGreen = 'blue-green',\n  Canary = 'canary',\n  Rolling = 'rolling',\n}\n\nexport type Deployment = {\n  readonly infrastructure?: InfrastructureOptions;\n  readonly strategy?: DeploymentStrategy;\n};\n\n// export type Deployment = {\n//   readonly id: string;\n//   readonly status: DeploymentStatus;\n//   readonly target: DeploymentTarget;\n//   readonly ApplicationId: Application['id'];\n//   readonly EnvironmentId: Environment['id'];\n//   readonly CreatedDate: DateTime;\n//   readonly PipelineWorkflowId: PipelineWorkflow['id'];\n// };\n", "import { Deployment } from './deployment';\nimport { DNSConfig } from './infrastructure';\n\nexport enum EnvironmentType {\n  Development = 'Development',\n  NonProduction = 'NonProduction',\n  Production = 'Production',\n}\n\nexport type Environment = DNSConfig & {\n  readonly id: string;\n  readonly type: EnvironmentType;\n  readonly name: string;\n  readonly description: string;\n};\n\nexport type RemoteEnvironment = Environment & {\n  readonly deployment?: Deployment;\n};\n\nexport type DevelopmentEnvironment = Environment;\n\nexport type PreviewEnvironment = RemoteEnvironment & {\n  readonly branches?: {\n    readonly [key: string]: RemoteEnvironment & {\n      readonly ssr?: boolean;\n    };\n  };\n};\n\nexport type ProductionEnvironment = RemoteEnvironment;\n\nexport type QAEnvironment = RemoteEnvironment & {\n  readonly e2e?: boolean;\n  readonly integration?: boolean;\n  readonly lint?: boolean;\n  readonly unit?: boolean;\n};\n\nexport interface EnvironmentOptions {\n  readonly development?: DevelopmentEnvironment;\n  readonly preview?: PreviewEnvironment;\n  readonly qa?: QAEnvironment;\n  readonly production?: ProductionEnvironment;\n}\n", "export enum CloudProviders {\n  AWS = 'aws',\n}\n\nexport enum InfrastuctureClass {\n  Smallest = 'smallest',\n  Small = 'small',\n  Medium = 'medium',\n  Large = 'large',\n  Largest = 'largest',\n}\n\nexport type DNSConfig = {\n  readonly https?: boolean;\n  readonly host?: string;\n  readonly port?: string;\n  readonly path?: string;\n};\n\nexport type InfrastructureOptions = {\n  readonly class?: InfrastuctureClass;\n  readonly dns?: DNSConfig;\n  readonly provider?: CloudProviders;\n};\n", "export enum OnboardingStatus {\n  Completed = 'completed',\n  Started = 'started',\n  Uncompleted = 'uncompleted',\n}\n\nexport type OnboardingStep = {\n  description: string;\n  id: string;\n  guide_id: OnboardingGuide;\n  name: string;\n};\n\nexport type OnboardingGuide = {\n  id: string;\n  name: string;\n  description: string;\n  steps: OnboardingStep['id'][];\n};\n", "export enum PipelineStatus {\n  Finished = 'Finished',\n  Queued = 'Queued',\n  Running = 'Running',\n  Started = 'Started',\n}\n\nexport enum PipelineWorkflowStatus {\n  Canceled = 'Canceled',\n  Completed = 'Completed',\n  Failed = 'Failed',\n  Running = 'Running',\n  Queued = 'Queued',\n  Waiting = 'Waiting',\n}\n\nexport enum PipelineStepStatus {\n  Canceled = 'Canceled',\n  Completed = 'Completed',\n  Failed = 'Failed',\n  Running = 'Running',\n  Queued = 'Queued',\n  Waiting = 'Waiting',\n}\n\nexport type PipelineStepOutputLine = {\n  readonly id: string;\n  readonly text: string;\n  readonly PipelineStepOutputId: PipelineStepOutput['id'];\n};\n\nexport type PipelineStepOutput = {\n  readonly id: string;\n  readonly PipeWorkflowStepId: PipelineWorkflowStep['id'];\n};\n\nexport type PipelineWorkflowStep = {\n  readonly enabled: boolean;\n  readonly id: string;\n  readonly status: PipelineStepStatus;\n  readonly PipeWorkflowId: PipelineWorkflow['id'];\n};\n\nexport type PipelineWorkflow = {\n  readonly description: string;\n  readonly enabled: boolean;\n  readonly id: string;\n  readonly name: string;\n  readonly ActivePipelineId: Pipeline['id'];\n};\n\nexport type Pipeline = {\n  readonly id: string;\n  readonly name: string;\n  readonly description: string;\n  readonly status: PipelineStatus;\n};\n", "export enum Platform {\n  Desktop = 'desktop',\n  Mobile = 'mobile',\n  NodeJS = 'nodejs',\n  TV = 'tv',\n  Watch = 'watch',\n  Web = 'web',\n}\n", "export enum ProblemSeverity {\n  Low = 'low',\n  Medium = 'medium',\n  High = 'high',\n  Emergency = 'emergency',\n}\n\nexport enum ProblemType {\n  Bug = 'bug',\n}\n\nexport interface Problem {\n  readonly severity: ProblemSeverity;\n  readonly type: ProblemType;\n}\n", "import { BuildOptions } from './build';\nimport { ChangesetOptions } from './changeset';\nimport { EnvironmentOptions } from './environment';\nimport { ReleaseOptions } from './release';\n\nexport enum ProjectType {\n  DesktopApplication = 'desktop-application',\n  MobileApplication = 'mobile-application',\n  WebApplication = 'web-application',\n  CLIApplication = 'cli-application',\n  Library = 'library',\n  WebService = 'web-service',\n}\n\nexport type Project = {\n  readonly id?: string;\n  readonly name: string;\n  readonly description: string;\n  readonly type: ProjectType;\n  readonly build?: BuildOptions | readonly BuildOptions[];\n  readonly changesets?: ChangesetOptions;\n  readonly environments?: EnvironmentOptions;\n  readonly release?: ReleaseOptions;\n};\n", "import { DateTime } from 'luxon';\n\nexport enum TaskStatus {\n  'Canceled' = 'Canceled',\n  'Completed' = 'Completed',\n  'Created' = 'Created',\n  'Faulted' = 'Faulted',\n  'Queued' = 'Queued',\n  'Running' = 'Running',\n  'Waiting' = 'Waiting',\n}\n\nexport type Task = {\n  readonly created?: DateTime;\n  readonly data: Record<string, string> | ReadonlyMap<string, string>;\n  readonly name: string;\n  readonly id?: string;\n  readonly status?: TaskStatus;\n};\n\nexport type Queue = {\n  readonly id: string;\n  readonly name: string;\n  readonly queued: readonly Task['id'][];\n  readonly running: readonly Task['id'][];\n  readonly finished: readonly Task['id'][];\n};\n\nexport type QueueInitializationResult = {\n  readonly error: boolean | Error;\n};\n", "import { ElementType } from 'react';\n\nexport enum RouteRole {\n  ForgotPassword = 'forgot_password',\n  Index = 'index',\n  Login = 'login',\n  PageNotFound = '404',\n  Signup = 'signup',\n  VerifyCode = 'verify_code',\n}\n\nexport type Route = {\n  readonly loginRequired?: boolean;\n  readonly path?: string;\n  readonly component: ElementType;\n  readonly role?: RouteRole;\n};\n", "export enum Condition {\n  Contains = 'contains',\n  HasCharacterCount = 'has-character-count',\n  HasNumberCount = 'has-number-count',\n  HasLetterCount = 'has-letter-count',\n  HasLowercaseCount = 'has-lowercase-count',\n  HasSpacesCount = 'has-spaces-count',\n  HasSymbolCount = 'has-symbol-count',\n  HasUppercaseCount = 'has-uppercase-count',\n  IsAfter = 'is-after',\n  IsAfterOrEqual = 'is-after-or-equal',\n  IsAirport = 'is-airport',\n  IsAlpha = 'is-alpha',\n  IsAlphanumeric = 'is-alphanumeric',\n  IsAlgorithmHash = 'is-algorithm-hash',\n  IsAscii = 'is-ascii',\n  IsBase64 = 'is-base-64',\n  IsBefore = 'is-before',\n  IsBeforeOrAfter = 'is-before-or-after',\n  IsBeforeOrEqual = 'is-before-or-equal',\n  IsBetween = 'is-between',\n  IsBIC = 'is-bic',\n  IsBitcoinAddress = 'is-bitcoin-address',\n  IsBoolean = 'is-boolean',\n  IsColor = 'is-color',\n  IsComplexEnough = 'is-complex-enough',\n  IsCountry = 'is-country',\n  IsCreditCard = 'is-credit-card',\n  IsCurrency = 'is-currency',\n  IsDataURI = 'is-data-uri',\n  IsDate = 'is-date',\n  IsDateRange = 'is-date-range',\n  IsDateTime = 'is-date-time',\n  IsDayOfMonth = 'is-day-of-month',\n  IsDecimal = 'is-decimal',\n  IsDivisibleBy = 'is-divisible-by',\n  IsDomainName = 'is-domain-name',\n  IsEmailAddress = 'is-email-address',\n  IsEthereumAddress = 'is-ethereum-address',\n  IsEAN = 'is-ean',\n  IsEIN = 'is-ein',\n  IsEqual = 'is-equal',\n  IsEvenNumber = 'is-even-number',\n  IsFloat = 'is-float',\n  IsIBAN = 'is-iban',\n  IsGreaterThan = 'greater-than',\n  IsGreaterThanOrEqual = 'greater-than-or-equal',\n  IsHSLColor = 'is-hsl-color',\n  IsHexColor = 'is-hex-color',\n  IsHexadecimal = 'is-hexadecimal',\n  IsIdentityCardCode = 'is-identity-card-code',\n  IsIMEI = 'is-imei',\n  IsInIPAddressRange = 'is-in-ip-address-range',\n  IsInList = 'is-in-list',\n  IsInTheLast = 'is-in-the-last',\n  IsInteger = 'is-integer',\n  IsIPAddress = 'is-ip-address',\n  IsIPAddressRange = 'is-ip-address-range',\n  IsISBN = 'is-isbn',\n  IsISIN = 'is-isin',\n  IsISMN = 'is-ismn',\n  IsISRC = 'is-isrc',\n  IsISSN = 'is-issn',\n  IsISO4217 = 'is-iso-4217',\n  IsISO8601 = 'is-iso-8601',\n  IsISO31661Alpha2 = 'is-iso-31661-alpha-2',\n  IsISO31661Alpha3 = 'is-iso-31661-alpha-3',\n  IsJSON = 'is-json',\n  IsLanguage = 'is-language',\n  IsLatitude = 'is-latitude',\n  IsLongitude = 'is-longitude',\n  IsLengthEqual = 'is-length-equal',\n  IsLengthGreaterThan = 'is-length-greater-than',\n  IsLengthGreaterThanOrEqual = 'is-length-great-than-or-equal',\n  IsLengthLessThan = 'is-length-less-than',\n  IsLengthLessThanOrEqual = 'is-length-less-than-or-equal',\n  IsLessThan = 'less-than',\n  IsLessThanOrEqual = 'less-than-or-equal',\n  IsLicensePlateNumber = 'is-license-plate-number',\n  IsLowercase = 'is-lowercase',\n  IsOctal = 'is-octal',\n  IsMACAddress = 'is-mac-address',\n  IsMD5 = 'is-md5',\n  IsMagnetURI = 'is-magnet-uri',\n  IsMarkdown = 'is-markdown',\n  IsMimeType = 'is-mime-type',\n  IsMonth = 'is-month',\n  IsNegativeNumber = 'is-negative-number',\n  IsNotDate = 'is-not-date',\n  IsNotEqual = 'is-not-equal',\n  IsNotInIPAddressRange = 'is-not-in-ip-address-range',\n  IsNotInList = 'is-not-in-list',\n  IsNotNull = 'is-not-null',\n  IsNotRegexMatch = 'is-not-regex-match',\n  IsNotToday = 'is-not-today',\n  IsNumber = 'is-number',\n  IsNumeric = 'is-numeric',\n  IsOddNumber = 'is-odd-number',\n  IsPassportNumber = 'is-passport-number',\n  IsPhoneNumber = 'is-phone-number',\n  IsPort = 'is-port',\n  IsPositiveNumber = 'is-positive-number',\n  IsPostalCode = 'is-postal-code',\n  IsProvince = 'is-province',\n  IsRGBColor = 'is-rgb-color',\n  IsRegexMatch = 'is-regex-match',\n  IsRequired = 'is-required',\n  IsSemanticVersion = 'is-semantic-version',\n  IsSlug = 'is-slug',\n  IsSSN = 'is-ssn',\n  IsState = 'is-state',\n  IsStreetAddress = 'is-street-address',\n  IsString = 'is-string',\n  IsStrongPassword = 'is-strong-password',\n  IsTags = 'is-tags',\n  IsTaxIDNumber = 'is-tax-id-number',\n  IsThisMonth = 'is-this-month',\n  IsThisQuarter = 'is-this-quarter',\n  IsThisWeek = 'is-this-week',\n  IsThisWeekend = 'is-this-weekend',\n  IsThisYear = 'is-this-year',\n  IsTime = 'is-time',\n  IsTimeOfDay = 'is-time-of-day',\n  IsTimeRange = 'is-time-range',\n  IsToday = 'is-today',\n  IsURL = 'is-url',\n  IsUUID = 'is-uuid',\n  IsUppercase = 'is-uppercase',\n  IsUsernameAvailable = 'is-username-available',\n  IsValidStreetAddress = 'is-valid-street-address',\n  IsVATIDNumber = 'is-vat-id-number',\n  IsWeekday = 'is-weekday',\n  IsWeekend = 'is-weekend',\n  IsYear = 'is-year',\n}\n\nexport enum AuthenticationCondition {\n  IsAuthenticated = 'is-authenticated',\n  IsNotAuthenticated = 'is-not-authenticated',\n  IsUsernameAvailable = 'is-username-available',\n  PasswordMismatch = 'password-mismatch',\n}\n\nexport type RuleCondition = {\n  condition: Condition | AuthenticationCondition;\n  description: string;\n  name: string;\n  subject: string;\n  value: any;\n};\n", "import { Condition } from '../../index';\n\nexport enum ColorCondition {\n  IsHSLColor = Condition.IsHSLColor,\n  IsHexColor = Condition.IsHexColor,\n  IsNotNull = Condition.IsNotNull,\n  IsRGBColor = Condition.IsRGBColor,\n  IsString = Condition.IsString,\n}\n", "import { Condition } from '../index';\n\nexport enum AlgorithmHashCondition {\n  IsAlgorithmHash = Condition.IsAlgorithmHash,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum SemanticVersionCondition {\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsSemanticVersion = Condition.IsSemanticVersion,\n  IsString = Condition.IsString,\n}\n\nexport enum UUIDCondition {\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsUUID = Condition.IsUUID,\n}\n\nexport enum MD5Condition {\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsMD5 = Condition.IsMD5,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n", "import { Condition } from '../index';\n\nexport enum BooleanCondition {\n  IsBoolean = Condition.IsBoolean,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n", "import { Condition } from '../index';\n\nexport enum DateCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsDate = Condition.IsDate,\n  IsEqual = Condition.IsEqual,\n  IsNotDate = Condition.IsNotDate,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNotToday = Condition.IsNotToday,\n  IsThisWeek = Condition.IsThisWeek,\n  IsThisMonth = Condition.IsThisMonth,\n  IsThisQuarter = Condition.IsThisQuarter,\n  IsThisYear = Condition.IsThisYear,\n  IsToday = Condition.IsToday,\n  IsWeekend = Condition.IsWeekend,\n}\n\nexport enum DateRangeCondition {\n  IsAfter = Condition.IsAfter,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrAfter = Condition.IsBeforeOrAfter,\n  IsBetween = Condition.IsBetween,\n  IsDate = Condition.IsDate,\n  IsDateRange = Condition.IsDateRange,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum DateTimeCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsDate = Condition.IsDate,\n  IsEqual = Condition.IsEqual,\n  IsNotDate = Condition.IsNotDate,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNotToday = Condition.IsNotToday,\n  IsThisWeek = Condition.IsThisWeek,\n  IsThisMonth = Condition.IsThisMonth,\n  IsThisQuarter = Condition.IsThisQuarter,\n  IsThisYear = Condition.IsThisYear,\n  IsToday = Condition.IsToday,\n  IsWeekend = Condition.IsWeekend,\n}\n\nexport enum DayOfMonthCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsDayOfMonth = Condition.IsDayOfMonth,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsToday = Condition.IsToday,\n  IsWeekday = Condition.IsWeekday,\n  IsWeekend = Condition.IsWeekend,\n}\n\nexport enum MonthCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsMonth = Condition.IsMonth,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsThisMonth = Condition.IsThisMonth,\n}\n\nexport enum TimeCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsTime = Condition.IsTime,\n}\n\nexport enum TimeRangeCondition {\n  IsAfter = Condition.IsAfter,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrAfter = Condition.IsBeforeOrAfter,\n  IsBetween = Condition.IsBetween,\n  IsTime = Condition.IsTime,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsTimeRange = Condition.IsTimeRange,\n}\n\nexport enum TimeOfDayCondition {\n  IsAfter = Condition.IsAfter,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrAfter = Condition.IsBeforeOrAfter,\n  IsBetween = Condition.IsBetween,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsTimeOfDay = Condition.IsTimeOfDay,\n  IsTimeRange = Condition.IsTimeRange,\n}\n\nexport enum WeekdayCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsWeekday = Condition.IsWeekday,\n  IsWeekend = Condition.IsWeekend,\n}\n\nexport enum YearCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsThisYear = Condition.IsThisYear,\n  IsYear = Condition.IsYear,\n}\n", "import { Condition } from '../index';\n\nexport enum HexadecimalCondition {\n  IsEqual = Condition.IsEqual,\n  IsHexadecimal = Condition.IsHexadecimal,\n  IsLengthEqual = Condition.IsLengthEqual,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum JSONCondition {\n  IsEqual = Condition.IsEqual,\n  IsJSON = Condition.IsJSON,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum MarkdownCondition {\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsMarkdown = Condition.IsMarkdown,\n  IsString = Condition.IsString,\n}\n", "import { Condition } from '../../index';\n\nexport enum CurrencyCondition {\n  IsBetween = Condition.IsBetween,\n  IsCurrency = Condition.IsCurrency,\n  IsDecimal = Condition.IsDecimal,\n  IsDivisibleBy = Condition.IsDivisibleBy,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsFloat = Condition.IsFloat,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsISO8601 = Condition.IsISO8601,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNegativeNumber = Condition.IsNegativeNumber,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsPositiveNumber = Condition.IsPositiveNumber,\n}\n\nexport enum BitcoinAddressCondition {\n  IsBitcoinAddress = Condition.IsBitcoinAddress,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum EthereumAddressCondition {\n  IsEthereumAddress = Condition.IsEthereumAddress,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n", "import { Condition } from '../../index';\n\nexport enum LanguageCondition {\n  IsEqual = Condition.IsEqual,\n  IsJSON = Condition.IsJSON,\n  IsLanguage = Condition.IsLanguage,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n", "import { Condition } from '../../index';\n\nexport enum CityCondition {\n  IsAlpha = Condition.IsAlpha,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum CountryCondition {\n  IsAlpha = Condition.IsAlpha,\n  IsCountry = Condition.IsCountry,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum LatitudeCondition {\n  IsEqual = Condition.IsEqual,\n  IsFloat = Condition.IsFloat,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumeric = Condition.IsNumeric,\n}\n\nexport enum LongitudeCondition {\n  IsEqual = Condition.IsEqual,\n  IsFloat = Condition.IsFloat,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumeric = Condition.IsNumeric,\n}\n\nexport enum PostalCodeCondition {\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsPostalCode = Condition.IsPostalCode,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum ProvinceCondition {\n  IsAlpha = Condition.IsAlpha,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsProvince = Condition.IsProvince,\n  IsString = Condition.IsString,\n}\n\nexport enum StateCondition {\n  IsAlpha = Condition.IsAlpha,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsState = Condition.IsState,\n  IsString = Condition.IsString,\n}\n\nexport enum StreetAddressCondition {\n  IsAlphanumeric = Condition.IsAlphanumeric,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n\n  IsString = Condition.IsString,\n  IsStreetAddress = Condition.IsStreetAddress,\n}\n", "import { Condition } from '../index';\n\nexport enum MenuCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum TagsCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n", "import { Condition } from '../index';\n\nexport enum DataURICondition {\n  Contains = Condition.Contains,\n  IsDataURI = Condition.IsDataURI,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum DomainNameCondition {\n  Contains = Condition.Contains,\n  IsDomainName = Condition.IsDomainName,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum EmailCondition {\n  Contains = Condition.Contains,\n  IsEmailAddress = Condition.IsEmailAddress,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum IPAddressCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsIPAddress = Condition.IsIPAddress,\n  IsInIPAddressRange = Condition.IsInIPAddressRange,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotInIPAddressRange = Condition.IsNotInIPAddressRange,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum IPAddressRangeCondition {\n  IsEqual = Condition.IsEqual,\n  IsIPAddressRange = Condition.IsIPAddressRange,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotInIPAddressRange = Condition.IsNotInIPAddressRange,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum PortCondition {\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum MACAddressCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsMACAddress = Condition.IsMACAddress,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum MagnetURICondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsMagnetURI = Condition.IsMagnetURI,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum MimeTypeCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsMimeType = Condition.IsMimeType,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum SlugCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsSlug = Condition.IsSlug,\n}\n\nexport enum URLCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsURL = Condition.IsURL,\n}\n", "import { Condition } from '../index';\n\nexport enum NumberCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsDecimal = Condition.IsDecimal,\n  IsDivisibleBy = Condition.IsDivisibleBy,\n  IsEAN = Condition.IsEAN,\n  IsEIN = Condition.IsEIN,\n  IsEqual = Condition.IsEqual,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsFloat = Condition.IsFloat,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInt = Condition.IsInteger,\n  IsISBN = Condition.IsISBN,\n  IsISMN = Condition.IsISMN,\n  IsISSN = Condition.IsISSN,\n  IsLatitude = Condition.IsLatitude,\n  IsLongitude = Condition.IsLongitude,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsMACAddress = Condition.IsMACAddress,\n  IsNumber = Condition.IsNumber,\n  IsNegativeNumber = Condition.IsNegativeNumber,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsOddNumber = Condition.IsOddNumber,\n  IsPassportNumber = Condition.IsPassportNumber,\n  IsPhoneNumber = Condition.IsPhoneNumber,\n  IsPort = Condition.IsPort,\n  IsPositiveNumber = Condition.IsPositiveNumber,\n  IsPostalCode = Condition.IsPostalCode,\n  IsSemanticVersion = Condition.IsSemanticVersion,\n  IsSSN = Condition.IsSSN,\n  IsTaxIDNumber = Condition.IsTaxIDNumber,\n  IsUUID = Condition.IsUUID,\n  IsVATIDNumber = Condition.IsVATIDNumber,\n}\n\nexport enum FloatCondition {\n  IsEqual = Condition.IsEqual,\n  IsFloat = Condition.IsFloat,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsNumeric = Condition.IsNumeric,\n}\n\nexport enum IntegerCondition {\n  IsEqual = Condition.IsEqual,\n  IsInteger = Condition.IsInteger,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsNumeric = Condition.IsNumeric,\n}\n", "import { Condition } from '../index';\n\nexport enum CreditCardCondition {\n  IsCreditCard = Condition.IsCreditCard,\n  IsEqual = Condition.IsEqual,\n  IsLengthEqual = Condition.IsLengthEqual,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsRegexMatch = Condition.IsRegexMatch,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n}\n\nexport enum EmailAddressCondition {\n  isEmailAddress = Condition.IsEmailAddress,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsLengthEqual = Condition.IsLengthEqual,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsRegexMatch = Condition.IsRegexMatch,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n}\n\nexport enum LicensePlateNumber {\n  IsLicensePlateNumber = Condition.IsLicensePlateNumber,\n  IsNotNull = Condition.IsNotNull,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n  IsString = Condition.IsString,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\nexport enum PassportNumberCondition {\n  IsNotNull = Condition.IsNotNull,\n  IsPassportNumber = Condition.IsPassportNumber,\n  IsString = Condition.IsString,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\n\nexport enum PasswordCondition {\n  IsComplexEnough = Condition.IsComplexEnough,\n  IsInList = Condition.IsInList,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsStrongPassword = Condition.IsStrongPassword,\n  IsString = Condition.IsString,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\n\nexport enum PhoneNumberCondition {\n  IsNotNull = Condition.IsNotNull,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n  IsNumber = Condition.IsNumber,\n  IsPhoneNumber = Condition.IsPhoneNumber,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\n\nexport enum SocialSecurityNumberCondition {\n  IsNotNull = Condition.IsNotNull,\n  IsSSN = Condition.IsSSN,\n  IsString = Condition.IsString,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\n", "import { Condition } from '../../../index';\n\nexport enum AirportCondition {\n  IsAirport = Condition.IsAirport,\n  IsAlpha = Condition.IsAlpha,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n", "import { Condition } from '../index';\n\n/**\n * Bank Identification Code\n *\n * @remarks\n * BIC means Bank Identification Code, or Bank Identifier Code.\n * It is an 8 to 11-character code that is used to identify a\n * specific bank when you make an international transaction.\n * */\nexport enum BICCondition {\n  Contains = Condition.Contains,\n  IsBIC = Condition.IsBIC,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * European Article Number\n *\n * @remarks\n * The International Article Number (also known as European\n * Article Number or EAN) is a standard describing a barcode\n * symbology and numbering system used in global trade to identify\n * a specific retail product type, in a specific packaging\n * configuration, from a specific manufacturer.\n *\n * The most commonly used EAN standard is the thirteen-digit EAN-13\n * */\nexport enum EANCondition {\n  Contains = Condition.Contains,\n  IsEAN = Condition.IsEAN,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * Employer Identification Number\n *\n * @remarks\n *\n * The Employer Identification Number (EIN), also known as the Federal\n * Employer Identification Number (FEIN) or the Federal Tax Identification\n * Number, is a unique nine-digit number assigned by the Internal Revenue\n * Service (IRS) to business entities operating in the United States for the\n * purposes of identification.\n */\nexport enum EINCondition {\n  Contains = Condition.Contains,\n  IsEIN = Condition.IsEIN,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Bank Account Number\n *\n * @remarks\n *\n * An IBAN, or international bank account number, is a standard\n * international numbering system developed to identify an overseas\n * bank account. The number starts with a two-digit country code, then\n * two numbers, followed by several more alphanumeric characters.\n */\nexport enum IBANCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsIBAN = Condition.IsIBAN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Standard Book Number\n *\n * @remarks\n *\n * ISBN is the acronym for International Standard Book Number. This\n * 10 or 13-digit number identifies a specific book, an edition of a\n * book, or a book-like product (such as an audiobook). Since 1970 each\n * published book has a unique ISBN. In 2007, assigned ISBNs changed\n * from 10 digits to 13.\n */\nexport enum ISBNCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsISBN = Condition.IsISBN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Securities Identification Number\n *\n * @remarks\n * An ISIN is a 12-digit alphanumeric code that uniquely identifies a\n * specific security. The numbers are allocated by a country's respective\n * national numbering agency (NNA). An ISIN is not the same as the ticker\n * symbol, which identifies the stock at the exchange level.\n */\nexport enum ISINCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsISIN = Condition.IsISIN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Standard Music Number\n *\n * @remarks\n * The International Standard Music Number or ISMN (ISO 10957) is a\n * thirteen-character alphanumeric identifier for printed music developed\n * by ISO.\n */\nexport enum ISMNCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsISMN = Condition.IsISMN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Standard Serial Number\n *\n * @remarks\n * An International Standard Serial Number (ISSN) is an eight-digit\n * serial number used to uniquely identify a serial publication,\n * such as a magazine. The ISSN is especially helpful in distinguishing\n * between serials with the same title.\n */\nexport enum ISSNCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsISSN = Condition.IsISSN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * Tax Identification Number\n *\n * @remarks\n * A Tax Identification Number (TIN) is a nine-digit number used as a\n * tracking number by the Internal Revenue Service (IRS)\n */\nexport enum TaxIDNumberCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsTaxIDNumber = Condition.IsTaxIDNumber,\n}\n\n/**\n * Value Added Tax (VAT) Registration Number\n *\n * @remarks\n * A VAT registration number is a nine-digit number used to identify\n * a business or person in the European Union.\n */\nexport enum VATCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsVATIDNumber = Condition.IsVATIDNumber,\n}\n", "import { Condition } from '../index';\n\n// TODO: Example the number of conditions a string can support\nexport enum StringCondition {\n  Contains = Condition.Contains,\n  HasNumberCount = Condition.HasNumberCount,\n  HasLowercaseCount = Condition.HasLowercaseCount,\n  HasLetterCount = Condition.HasLetterCount,\n  HasSpacesCount = Condition.HasSpacesCount,\n  HasSymbolCount = Condition.HasSymbolCount,\n  HasUppercaseCount = Condition.HasUppercaseCount,\n  IsAlpha = Condition.IsAlpha,\n  IsAlphanumeric = Condition.IsAlphanumeric,\n  IsAscii = Condition.IsAscii,\n  IsBase64 = Condition.IsBase64,\n  IsColor = Condition.IsColor,\n  IsComplexEnough = Condition.IsComplexEnough,\n  IsCreditCard = Condition.IsCreditCard,\n  IsDataURI = Condition.IsDataURI,\n  IsDomainName = Condition.IsDomainName,\n  IsEmailAddress = Condition.IsEmailAddress,\n  IsEthereumAddress = Condition.IsEthereumAddress,\n  IsEAN = Condition.IsEAN,\n  IsEIN = Condition.IsEIN,\n  IsEqual = Condition.IsEqual,\n  IsIBAN = Condition.IsIBAN,\n  IsHSLColor = Condition.IsHSLColor,\n  IsHexColor = Condition.IsHexColor,\n  IsHexadecimal = Condition.IsHexadecimal,\n  IsIdentityCardCode = Condition.IsIdentityCardCode,\n  IsIMEI = Condition.IsIMEI,\n  IsInList = Condition.IsInList,\n  IsIPAddress = Condition.IsIPAddress,\n  IsInIPAddressRange = Condition.IsInIPAddressRange,\n  IsISBN = Condition.IsISBN,\n  IsISIN = Condition.IsISIN,\n  IsISMN = Condition.IsISMN,\n  IsISRC = Condition.IsISRC,\n  IsISSN = Condition.IsISSN,\n  IsLanguage = Condition.IsLanguage,\n  IsLatitude = Condition.IsLatitude,\n  IsLongitude = Condition.IsLongitude,\n  IsLengthEqual = Condition.IsLengthEqual,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsLicensePlateNumber = Condition.IsLicensePlateNumber,\n  IsLowercase = Condition.IsLowercase,\n  IsOctal = Condition.IsOctal,\n  IsMACAddress = Condition.IsMACAddress,\n  IsMD5 = Condition.IsMD5,\n  IsMagnetURI = Condition.IsMagnetURI,\n  IsMarkdown = Condition.IsMarkdown,\n  IsMimeType = Condition.IsMimeType,\n  IsMonth = Condition.IsMonth,\n  IsNotInIPAddressRange = Condition.IsNotInIPAddressRange,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n  IsNumber = Condition.IsNumber,\n  IsNumeric = Condition.IsNumeric,\n  IsPassportNumber = Condition.IsPassportNumber,\n  IsPhoneNumber = Condition.IsPhoneNumber,\n  IsPort = Condition.IsPort,\n  IsPostalCode = Condition.IsPostalCode,\n  IsProvince = Condition.IsProvince,\n  IsRegexMatch = Condition.IsRegexMatch,\n  IsSemanticVersion = Condition.IsSemanticVersion,\n  IsSlug = Condition.IsSlug,\n  IsSSN = Condition.IsSSN,\n  IsState = Condition.IsState,\n  IsStreetAddress = Condition.IsStreetAddress,\n  IsString = Condition.IsString,\n  IsTaxIDNumber = Condition.IsTaxIDNumber,\n  IsURL = Condition.IsURL,\n  IsUUID = Condition.IsUUID,\n  IsUppercase = Condition.IsUppercase,\n  IsVATIDNumber = Condition.IsVATIDNumber,\n  IsWeekday = Condition.IsWeekday,\n  IsWeekend = Condition.IsWeekend,\n  IsYear = Condition.IsYear,\n}\n\nexport enum LongTextCondition {\n  Contains = Condition.Contains,\n  IsAlpha = Condition.IsAlpha,\n  IsAlphanumeric = Condition.IsAlphanumeric,\n  IsInList = Condition.IsInList,\n  IsMarkdown = Condition.IsMarkdown,\n  IsNotInList = Condition.IsNotInList,\n  IsNumeric = Condition.IsNumeric,\n  IsLowercase = Condition.IsLowercase,\n  IsString = Condition.IsString,\n  IsUppercase = Condition.IsUppercase,\n}\n", "import { Action } from './action';\nimport { Condition } from './condition/index';\n\nexport type Allowed = 'allowed';\nexport type Blocked = 'blocked';\n\nexport enum Privilege {\n  Allowed,\n  Blocked,\n}\n\nexport type Create = Privilege;\nexport type Delete = Privilege;\nexport type Edit = Privilege;\nexport type View = Privilege;\n\nexport type Rule<T = {}> = {\n  actions?: Action[];\n  conditions: Condition[];\n  description: string;\n  name: string;\n} & T;\n", "export enum FormValidationProblem {\n  InvalidCharacters = 'invalid-characters',\n  InvalidPattern = 'invalid-pattern',\n  NotComplexEnough = 'not-complex-enough',\n  NotUnique = 'not-unique',\n  NotValidEmail = 'not-valid-email',\n  TooLong = 'too-long',\n  TooShort = 'too-short',\n  Required = 'required',\n}\n", "import { CommunicationMedium } from '../../../communications/medium';\n\n/**\n * @enum AuthenticationStatus\n * @property Archived - User is no longer active.\n * @property Compromised - User is disabled due to a potential security threat.\n * @property Confirmed - User has been confirmed.\n * @property ForcePasswordChange - The user is confirmed and the user can sign in\n * using a temporary password, but on first sign-in, the user must change his\n * or her password to a new value before doing anything else.\n * @property ResetRequired - User is confirmed, but the user must request a\n * code and reset his or her password before he or she can sign in.\n * @property Unconfirmed - User has been created but not confirmed.\n * @property Unknown - User status is not known.\n */\nexport enum UserVerificationStatus {\n  Archived = 'ARCHIVED',\n  Compromised = 'COMPROMISED',\n  Confirmed = 'CONFIRMED',\n  ForcePasswordChange = 'FORCE_CHANGE_PASSWORD',\n  ResetRequired = 'RESET_REQUIRED',\n  Unconfirmed = 'UNCONFIRMED',\n  Unknown = 'UNKNOWN',\n}\n\nexport enum UserAuthenticationVerificationType {\n  Code = 'code',\n  Link = 'link',\n}\n\nexport type UserVerificationDetails = {\n  status: UserVerificationStatus;\n  delivery: {\n    medium: CommunicationMedium.Email;\n    destination: string;\n  };\n};\n", "export enum UserRole {\n  Owner = 'Owner',\n  Admin = 'Admin',\n  User = 'User',\n  Visitor = 'Visitor',\n}\n", "import { BuildFormat } from '@srclaunch/types';\n\nexport function getFormatFileExtension(format: BuildFormat) {\n  switch (format) {\n    case BuildFormat.CJS:\n      return '.cjs';\n    case BuildFormat.ESM:\n      return '.mjs';\n    case BuildFormat.IIFE:\n      return '.iife.js';\n    case BuildFormat.UMD:\n      return '.umd.js';\n    default:\n      return '.js';\n  }\n}\n\nexport function getViteFormatFileExtension(\n  format:\n    | 'amd'\n    | 'cjs'\n    | 'es'\n    | 'iife'\n    | 'system'\n    | 'umd'\n    | 'commonjs'\n    | 'esm'\n    | 'module'\n    | 'systemjs',\n) {\n  switch (format) {\n    case 'cjs':\n    case 'commonjs':\n      return '.cjs';\n    case 'es':\n    case 'esm':\n    case 'module':\n      return '.mjs';\n    case 'iife':\n      return '.iife.js';\n    case 'umd':\n      return '.umd.js';\n    default:\n      return `unknown-${format}.js`;\n  }\n}\n", "import fs, { emptyDir } from 'fs-extra';\nimport path from 'node:path';\n\nexport async function emptyDirectory(directory: string): Promise<void> {\n  if (!directory) {\n    throw new Error('Directory must be provided');\n  }\n\n  if (directory === '/') {\n    throw new Error('Cannot empty root directory');\n  }\n\n  try {\n    await emptyDir(directory);\n  } catch (err) {\n    throw new Error(`Could not empty directory: ${directory}`);\n  }\n}\n\nexport async function readFile(filePath: string) {\n  if (!filePath) {\n    throw new Error('File path must be provided');\n  }\n\n  try {\n    path.join(path.resolve(), '.srclaunch', 'config.json');\n\n    return await fs.readFile(filePath);\n  } catch (err) {\n    throw new Error(`Could not read file: ${filePath}`);\n  }\n}\n", "import { build as buildCommand } from 'vite';\nimport react from '@vitejs/plugin-react';\nimport { build as buildTypes } from './types.js';\nimport path from 'node:path';\nimport {\n  BuildFormat,\n  BuildPlatform,\n  BuildTarget,\n  ViteBuildOptions,\n} from '@srclaunch/types';\nimport { getViteFormatFileExtension } from './formats.js';\n\nexport async function build({\n  assets,\n  bundle,\n  format = BuildFormat.ESM,\n  formats,\n  input,\n  library = false,\n  optimize,\n  manifest = true,\n  minify = true,\n  output,\n  platform = BuildPlatform.Browser,\n  rootDir,\n  sourcemap = true,\n  target = BuildTarget.ESNext,\n  types = true,\n  webApp,\n}: ViteBuildOptions) {\n  try {\n    console.info(\n      `Compiling and bundling to ${\n        formats && formats.length > 0\n          ? `${formats.join(', ').toLocaleUpperCase()} formats...`\n          : `${format.toLocaleUpperCase()} format...`\n      }`,\n    );\n\n    const viteFormats = (\n      formats && formats.length > 0\n        ? formats?.map(f => (f === BuildFormat.ESM ? 'es' : f))\n        : [format === BuildFormat.ESM ? 'es' : format]\n    ) as ('cjs' | 'es' | 'iife' | 'umd')[];\n\n    await buildCommand({\n      build: {\n        assetsDir: assets?.directory\n          ? path.join(path.resolve(), assets?.directory)\n          : undefined,\n        emptyOutDir: output?.clean ?? true,\n        outDir: output?.directory ?? 'dist',\n        lib: Boolean(library)\n          ? {\n              entry: path.join(\n                path.resolve(),\n                input?.directory ?? 'src',\n                input?.file ?? 'index.ts',\n              ),\n              formats: viteFormats,\n              name:\n                library && typeof library === 'object'\n                  ? library?.name\n                  : undefined,\n              fileName: format =>\n                `${output?.file ?? 'index'}${getViteFormatFileExtension(\n                  format,\n                )}`,\n            }\n          : false,\n        manifest,\n        minify,\n        rollupOptions: {\n          external: (typeof bundle === 'object'\n            ? bundle.exclude ?? []\n            : []) as string[],\n        },\n        sourcemap,\n        ssrManifest: manifest && webApp?.ssr,\n        target,\n      },\n      configFile: false,\n      envPrefix: 'SRCLAUNCH_',\n      optimizeDeps: {\n        exclude: (optimize?.exclude ?? []) as string[],\n        include: (optimize?.include ?? []) as string[],\n      },\n      plugins: webApp?.react ? [react()] : [],\n      root: rootDir ?? path.resolve(),\n    });\n\n    // console.log('result', result);\n\n    // if (Array.isArray(result) && result.length > 0 && result[0]) {\n    //   for (const output of result) {\n    //     if (Array.isArray(output) && output.length > 0) {\n    //       for (const line of output) {\n    //         if (line.output) {\n    //           for (const line of output.output) {\n    //             if (line.type === 'asset') {\n    //               `Wrote asset ${line.fileName}...`;\n    //             } else {\n    //               console.log(\n    //                 `Wrote chunk ${line.fileName}... ${\n    //                   line.code.length / 1024\n    //                 } kb`,\n    //               );\n    //             }\n    //           }\n    //         }\n    //       }\n    //     }\n    //     //  else if (typeof output === 'object') {\n    //     //   if (output.output) {\n    //     //     for (const line of output.output) {\n    //     //       console.log(line);\n    //     //     }\n    //     //   }\n    //     // }\n    //   }\n    // }\n\n    if (types) {\n      console.info('Building types...');\n      await buildTypes({ input, types, output });\n    }\n\n    // if (result.errors) {\n    //   result.errors.forEach(error => {\n    //     console.error(error.text);\n    //   });\n    // }\n\n    console.info(\n      `Finished building to ${\n        formats && formats.length > 0\n          ? `${formats.join(', ').toLocaleUpperCase()} formats.`\n          : `${format.toLocaleUpperCase()} format.`\n      }`,\n    );\n  } catch (err: any) {\n    console.error(`Error occurred while building: ${err.name}`, err);\n  }\n}\n", "import { Command, CommandType } from '../lib/command.js';\nimport { build as esbuild } from '../lib/build/esbuild.js';\nimport { build as vite } from '../lib/build/vite.js';\nimport {\n  BuildFormat,\n  BuildOptions,\n  BuildTool,\n  ESBuildOptions,\n  Project,\n  ProjectType,\n  ViteBuildOptions,\n} from '@srclaunch/types';\nimport { TypedFlags } from 'meow';\n\nexport default new Command({\n  name: 'build',\n  description: 'Commands for building various types of projects',\n  run: async ({\n    config,\n    flags,\n  }: {\n    config: Project;\n    flags: TypedFlags<{\n      clean?: {\n        type: 'boolean';\n        default: true;\n      };\n    }>;\n  }) => {\n    const buildOptions = config.build as BuildOptions | BuildOptions[];\n\n    if (!buildOptions) {\n      throw new Error('Missing build configuration');\n    }\n\n    let run = 0;\n    if (typeof buildOptions === 'object' && !Array.isArray(buildOptions)) {\n      switch (buildOptions.tool) {\n        case BuildTool.Vite:\n          await vite({\n            ...buildOptions,\n            library:\n              config.type === ProjectType.Library ||\n              config.type === ProjectType.CLIApplication\n                ? {\n                    name: config.name,\n                  }\n                : false,\n          } as ViteBuildOptions);\n          return;\n        case BuildTool.ESBuild:\n        default:\n          const formats = buildOptions.formats ?? [\n            buildOptions.format ?? BuildFormat.ESM,\n          ];\n\n          for (const format of formats) {\n            const clean = buildOptions.output?.clean ?? run === 0;\n            const types = buildOptions.types ?? run === 0;\n\n            await esbuild({\n              ...buildOptions,\n              output: {\n                ...buildOptions.output,\n                clean,\n              },\n              format: format,\n              types,\n            } as ESBuildOptions);\n\n            run = run + 1;\n          }\n      }\n    } else if (Array.isArray(buildOptions)) {\n      for (const build of buildOptions) {\n        switch (build.tool) {\n          case BuildTool.Vite:\n            await vite({\n              ...build,\n              library:\n                config.type === ProjectType.Library ||\n                config.type === ProjectType.CLIApplication\n                  ? {\n                      name: config.name,\n                    }\n                  : false,\n            } as ViteBuildOptions);\n            break;\n          case BuildTool.ESBuild:\n          default:\n            const formats = build?.formats ?? [build.format ?? BuildFormat.ESM];\n\n            for (const format of formats) {\n              const clean = build.output?.clean ?? run === 0;\n              const types = build.types ?? run === 0;\n\n              await esbuild({\n                ...build,\n                output: {\n                  ...build.output,\n                  clean,\n                },\n                format,\n                types,\n              } as ESBuildOptions);\n              run = run + 1;\n            }\n        }\n      }\n    }\n  },\n  commands: [\n    new Command<Project>({\n      name: 'esbuild',\n      description: 'Compiles and optionally bundles a package using esbuild',\n      run: async ({\n        config,\n        flags,\n      }: {\n        config: Project;\n        flags: TypedFlags<{\n          clean?: {\n            type: 'boolean';\n            default: true;\n          };\n        }>;\n      }) => {\n        const buildOptions = config.build as BuildOptions | BuildOptions[];\n\n        if (!buildOptions) {\n          throw new Error('Missing build configuration');\n        }\n\n        let run = 0;\n        if (typeof buildOptions === 'object' && !Array.isArray(buildOptions)) {\n          if (buildOptions.formats && buildOptions.formats?.length > 0) {\n            for (const format of buildOptions.formats) {\n              const clean = buildOptions.output?.clean ?? run === 0;\n              const types = buildOptions.types ?? run === 0;\n\n              await esbuild({\n                ...buildOptions,\n                output: {\n                  ...buildOptions.output,\n                  clean,\n                },\n                format,\n                types,\n              } as ESBuildOptions);\n\n              run = run = 1;\n            }\n          } else {\n            await esbuild(buildOptions as ESBuildOptions);\n          }\n        } else if (Array.isArray(buildOptions)) {\n          if (buildOptions) {\n            for (const build of buildOptions) {\n              if (build.formats && build.formats?.length > 0) {\n                for (const format of build.formats) {\n                  const clean = build.output?.clean ?? run === 0;\n                  const types = build.types ?? run === 0;\n\n                  await esbuild({\n                    ...build,\n                    output: {\n                      directory: 'dist',\n                      file: 'index',\n                      ...build.output,\n                      clean,\n                    },\n                    format,\n                    types,\n                  } as ESBuildOptions);\n\n                  run = run = 1;\n                }\n              } else {\n                const clean =\n                  (build.output?.clean || Boolean(flags.clean)) && run === 0;\n                const types = build.types ?? run === 0;\n\n                await esbuild({\n                  ...build,\n                  output: {\n                    directory: 'dist',\n                    file: 'index',\n                    ...build.output,\n                    clean,\n                  },\n                  types,\n                } as ESBuildOptions);\n              }\n            }\n          }\n        }\n      },\n    }),\n    new Command<Project>({\n      name: 'vite',\n      description: 'Compiles and bundles a package using Vite',\n      run: async ({ config, flags }) => {\n        const buildOptions = config.build;\n\n        if (!buildOptions) {\n          throw new Error('Missing build configuration');\n        }\n\n        if (typeof buildOptions === 'object' && !Array.isArray(buildOptions)) {\n          await vite({\n            ...buildOptions,\n            library:\n              config.type === ProjectType.Library ||\n              config.type === ProjectType.CLIApplication\n                ? {\n                    name: config.name,\n                  }\n                : false,\n          } as ViteBuildOptions);\n        } else if (Array.isArray(buildOptions)) {\n          if (buildOptions) {\n            for (const build of buildOptions) {\n              await vite({\n                ...build,\n                library:\n                  config.type === ProjectType.Library ||\n                  config.type === ProjectType.CLIApplication\n                    ? {\n                        name: config.name,\n                      }\n                    : false,\n              } as ViteBuildOptions);\n            }\n          }\n        }\n      },\n      type: CommandType.Project,\n    }),\n    new Command({\n      name: 'types',\n      description: 'Builds Typescript definitions',\n      run: async ({ config, flags }) => {},\n    }),\n    new Command({\n      name: 'help',\n      description: 'Shows help for build commands',\n      run: async () => {\n        console.info(\n          'Available build commands are: lib, web-app, web-service, types, and help',\n        );\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { Project } from '@srclaunch/types';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'changesets',\n  description: 'Manage changesets',\n  commands: [\n    new Command<Project>({\n      name: 'create',\n      description: 'Create a changeset',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'list',\n      description: 'List changesets',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'help',\n      description: 'Show help for changesets',\n      run: async () => {\n        console.info('Available changesets commands are: create, list');\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { Project } from '@srclaunch/types';\n// import { render } from 'ink';\n// import { AppContainer } from '../components/AppContainer.js';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'dev',\n  description: 'Development environment commands',\n  commands: [\n    new Command<Project>({\n      name: 'start',\n      description: 'Launches the local development environment.',\n      run: async ({ cli, flags }) => {\n        // const { waitUntilExit } = render(\n        //   <AppContainer cliVersion={cli.pkg.version} flags={flags} />,\n        // );\n        // await waitUntilExit();\n      },\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'help',\n      description: 'Shows help for dev commands',\n      run: async () => {\n        console.info('Available dev commands are: start, help');\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { Command } from '../lib/command.js';\n\nexport default new Command({\n  name: 'help',\n  description: 'Shows help for commands',\n  run: async ({ cli }) => {\n    cli.showHelp();\n  },\n});\n", "import { Workspace } from '@srclaunch/types';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'infrastructure',\n  description: 'Manage infrastructure',\n  commands: [\n    new Command<Workspace>({\n      name: 'deploy',\n      description: 'Deploy infrastructure',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'help',\n      description: 'Shows help for infrastructure commands',\n      run: async () => {\n        console.info('Available infrastructure commands are: deploy, help');\n      },\n      type: CommandType.Workspace,\n    }),\n  ],\n});\n", "import fs from 'fs-extra';\nimport path from 'node:path';\n\nimport { constructModelExportIndexScript } from '../exports.js';\n\nexport async function buildSrcLaunchModels(\n  modelsPath: string,\n  projectPath: string,\n): Promise<void> {\n  try {\n    const BUILD_PATH = path.join(path.resolve(), projectPath, 'src');\n\n    await fs.emptyDir(BUILD_PATH);\n\n    const files = await fs.readdir(modelsPath);\n\n    for (const file of files) {\n      const fileContents = await fs.readFile(\n        path.join(modelsPath, file),\n        'utf8',\n      );\n\n      const fieldsPropertyExists = fileContents.includes('fields: {');\n\n      if (!fieldsPropertyExists) {\n        throw new Error(`${file} is missing the fields property.`);\n      }\n\n      let entityFields = `\n    created_date: {\n      label: 'Created Date',\n      required: false,\n      type: Primitives.DateTime,\n    },\n    updated_date: {\n      label: 'Updated Date',\n      required: false,\n      type: Primitives.DateTime,\n    },\n  `;\n\n      const relationshipsStart = fileContents.indexOf('relationships:') + 15;\n      const relationshipsEnd =\n        fileContents.indexOf('}', relationshipsStart) + 1;\n      const relationships = fileContents.slice(\n        relationshipsStart,\n        relationshipsEnd,\n      );\n\n      if (relationships) {\n        const belongsToStart = relationships.indexOf('belongsTo:') + 10;\n        const belongsToEnd = relationships.indexOf(']', belongsToStart) + 1;\n        const belongsTo = relationships.slice(belongsToStart, belongsToEnd);\n\n        if (belongsTo) {\n          const transformed = belongsTo\n            .replace(/'/g, '\"')\n            .replace(/ {2}|\\r\\n|\\n|\\r/g, '')\n            .replace(/\\s/g, '')\n            .replace(',]', ']');\n\n          const belongsToFields = JSON.parse(transformed);\n\n          for (const relationship of belongsToFields) {\n            entityFields += `\n        ${relationship}Id: {\n          label: '${relationship}',\n          required: false,\n          type: Primitives.UUID\n        },\n        `;\n          }\n        }\n      }\n\n      const updatedFileContents = fileContents.replace(\n        'fields: {',\n        `fields: {\n        ${entityFields}`,\n      );\n\n      // logger.info(`Writing ${file} model`);\n\n      await fs.writeFile(\n        path.join(BUILD_PATH, file),\n        updatedFileContents,\n        'utf8',\n      );\n    }\n\n    // logger.info(`Writing ${BUILD_PATH}/index.ts`);\n\n    const buildModels = await fs.readdir(BUILD_PATH);\n    const models = buildModels.filter(file => {\n      return file.slice(-3) === '.ts' && file.split('.ts')[0] !== 'index';\n    });\n\n    const indexFileContent = constructModelExportIndexScript(\n      models,\n      'srclaunch',\n    );\n\n    await fs.writeFile(\n      path.join(BUILD_PATH, 'index.ts'),\n      indexFileContent,\n      'utf8',\n    );\n  } catch (error: any) {\n    console.error(error);\n    throw error;\n  }\n}\n", "export function constructModelExportIndexScript(\n  models: string[],\n  modelFormat: 'sequelize' | 'json' | 'srclaunch' | 'ts' = 'srclaunch',\n): string | void {\n  try {\n    let indexFileExports = '';\n    let indexFileImports = '';\n    let sequelizeDefaultExports = 'export default {';\n\n    const fileExtension = `.${\n      modelFormat === 'srclaunch' || modelFormat === 'sequelize' ? 'ts' : 'json'\n    }`;\n\n    for (const model of models) {\n      const modelName = model.split(fileExtension)[0];\n\n      if (modelFormat === 'json') {\n        indexFileImports += `import ${modelName} from './${modelName}.json';\\n`;\n      } else if (modelFormat === 'sequelize') {\n        indexFileImports += `import ${modelName}Init, { ${modelName} } from './${modelName}';\\n`;\n        sequelizeDefaultExports += `${modelName}: ${modelName}Init,`;\n      } else {\n        indexFileImports += `import { ${modelName} } from './${modelName}.js';\\n`;\n      }\n\n      indexFileExports += `  ${modelName},\\n`;\n    }\n\n    if (modelFormat === 'sequelize') {\n      sequelizeDefaultExports += '};';\n    }\n\n    return `${indexFileImports}\\nexport {\\n${indexFileExports}};\\n${\n      modelFormat === 'sequelize' ? sequelizeDefaultExports : ''\n    }\\n`;\n  } catch (err: any) {\n    console.error(err);\n  }\n}\n\nexport async function constructAppLabModelExports() {\n  return `import { Model } from '@srclaunch/types';\nexport * from \"./srclaunch/index\";\n\nimport * as Models from \"./srclaunch/index\";\n\nexport function getModels(): Record<string, Model> {\n  return Models as Record<string, Model>;\n}`;\n}\n", "import fs from 'fs-extra';\nimport path from 'node:path';\n\nimport { constructAppLabModelExports } from '../exports.js';\nimport {\n  getDocumentModel,\n  getInvoiceModel,\n  getMessageModel,\n  getOrganizationModel,\n  getPaymentMethodModel,\n  getPaymentModel,\n  getPersonModel,\n  getSubscriptionModel,\n  getTeamModel,\n  getUserGroupModel,\n  getUserModel,\n  getUserRoleModel,\n} from './models.js';\n\nexport async function copyStubModels() {\n  try {\n    const BUILD_PATH = path.join(path.resolve(), '.applab/dependencies/models');\n\n    const applabModelPath = path.join(BUILD_PATH, 'src');\n\n    // await fs.writeFile(\n    //   path.join(applabModelPath, 'Message.ts'),\n    //   getMessageModel(),\n    //   'utf8',\n    // );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Organization.ts'),\n      getOrganizationModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Team.ts'),\n      getTeamModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Document.ts'),\n      getDocumentModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Payment.ts'),\n      getPaymentModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Invoice.ts'),\n      getInvoiceModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'PaymentMethod.ts'),\n      getPaymentMethodModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Person.ts'),\n      getPersonModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Subscription.ts'),\n      getSubscriptionModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'User.ts'),\n      getUserModel(),\n      'utf8',\n    );\n    await fs.writeFile(\n      path.join(applabModelPath, 'UserGroup.ts'),\n      getUserGroupModel(),\n      'utf8',\n    );\n    await fs.writeFile(\n      path.join(applabModelPath, 'UserRole.ts'),\n      getUserRoleModel(),\n      'utf8',\n    );\n\n    // const modelExportsIndexFile = await constructAppLabModelExports();\n    // await fs.writeFile(\n    //   path.join(BUILD_PATH, 'src', 'index.ts'),\n    //   modelExportsIndexFile,\n    //   'utf8',\n    // );\n  } catch (error: any) {\n    console.error(error);\n  }\n}\n", "export function getDocumentModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\n  export const Document: ModelProps = {\n    fields: {\n      name: {\n        label: \"Name\",\n        type: Primitives.String,\n        required: true,\n      },\n      description: {\n        label: \"Description\",\n        type: Primitives.String,\n        required: true,\n      }\n    },\n    name: \"Document\",\n    relationships: {\n      belongsTo: [\"Organization\", \"Invoice\", \"User\"],\n    },\n  };\n  `;\n}\n\nexport function getMessageModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\n  export const Message: ModelProps = {\n    fields: {\n      message: {\n        label: \"Message\",\n        type: Primitives.String,\n        required: true,\n      },\n      recipient: {\n        label: \"Recipient\",\n        type: Primitives.String,\n        required: false,\n      }\n    },\n    name: \"Message\",\n    relationships: {\n      belongsTo: [\"Organization\", \"User\"],\n    },\n  };`;\n}\n\nexport function getInvoiceModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\n  export const Invoice: ModelProps = {\n    fields: {\n      amount: {\n        label: \"Amount\",\n        type: Primitives.Number,\n        required: true,\n      },\n      currency: {\n        label: \"Currency\",\n        type: Primitives.CurrencyCode,\n        required: true,\n      },\n      date: {\n        label: \"Date\",\n        type: Primitives.Date,\n        required: true,\n      },\n      due_date: {\n        label: \"Due Date\",\n        type: Primitives.Date,\n        required: true,\n      },\n      notes: {\n        label: \"Notes\",\n        type: Primitives.String,\n      },\n      status: {\n        label: \"Status\",\n        type: Primitives.String,\n        required: true,\n      },\n    },\n    name: \"Invoice\",\n    relationships: {\n      belongsTo: [\"Organization\", \"Payment\", \"User\"],\n    },\n  };`;\n}\n\nexport function getOrganizationModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const Organization: ModelProps = {\n  fields: {\n    description: {\n      label: \"Description\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n  },\n  name: \"Organization\",\n  relationships: {},\n};`;\n}\n\nexport function getPaymentModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\n  export const Payment: ModelProps = {\n    fields: {\n      amount: {\n        label: \"Amount\",\n        type: Primitives.Number,\n        required: true,\n      },\n      currency: {\n        label: \"Currency\",\n        type: Primitives.CurrencyCode,\n        required: true,\n      },\n      date: {\n        label: \"Date\",\n        type: Primitives.Date,\n        required: true,\n      },\n      failure_reason: {\n        label: \"Failure Reason\",\n        type: Primitives.Menu,\n        menu: [\n          {\n            label: 'Insufficient Funds',\n            value: 'insufficient-funds',\n          },\n          {\n            label: 'Invalid Amount',\n            value: 'invalid-amount',\n          },\n          {\n            label: 'Invalid Currency',\n            value: 'invalid-currency',\n          },\n          {\n            label: 'Invalid Card',\n            value: 'invalid-card',\n          },\n          {\n            label: 'Invalid Card Expiry',\n            value: 'invalid-card-expiry',\n          },\n          {\n            label: 'Invalid Card Number',\n            value: 'invalid-card-number',\n          },\n          {\n            label: 'Invalid Card Security Code',\n            value: 'invalid-card-security-code',\n          },\n          {\n            label: 'Invalid Card Holder',\n            value: 'invalid-card-holder',\n          },\n          {\n            label: 'Invalid Card Address',\n            value: 'invalid-card-address',\n          },\n        ]\n      },\n      notes: {\n        label: \"Notes\",\n        type: Primitives.String,\n        required: true,\n      },\n      status: {\n        label: \"Status\",\n        type: Primitives.Menu,\n        required: true,\n        menu: [\n          {\n            label: \"Paid\",\n            value: \"paid\",\n          },\n          {\n            label: \"Failure\",\n            value: \"failure\",\n          },\n          {\n            label: \"Pending\",\n            value: \"pending\",\n          },\n        ],\n      }\n    },\n    name: \"Payment\",\n    relationships: {\n      belongsTo: [\"Organization\", \"User\"],\n    },\n  };`;\n}\n\nexport function getPaymentMethodModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const PaymentMethod: ModelProps = {\n  fields: {\n    default: {\n      label: \"Default\",\n      type: Primitives.Boolean,\n    },\n    masked_number: {\n      label: \"Number\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n    type: {\n      label: \"Type\",\n      menu: [\n        {\n          label: \"Bank Transfer\",\n          value: \"bank-transfer\",\n        },\n        {\n          label: \"Credit Card\",\n          value: \"credit-card\",\n        },\n        {\n          label: \"Crypto\",\n          value: \"crypto\",\n        },\n      ],\n      type: Primitives.Menu,\n    },\n  },\n  name: \"PaymentMethod\",\n  relationships: {\n    belongsTo: [\"Organization\", \"Payment\", \"Team\", \"User\"],\n  },\n};`;\n}\n\nexport function getPersonModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const Person: ModelProps = {\n  fields: {\n    analytics: {\n      label: \"Analytics\",\n      type: Primitives.JSON,\n    },\n    billing: {\n      label: \"Billing Details\",\n      type: Primitives.JSON,\n    },\n  },\n  name: \"Person\",\n  relationships: {\n    hasMany: [\"Event\"],\n    hasOne: [\"User\"],\n  },\n};`;\n}\n\nexport function getSubscriptionModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const Subscription: ModelProps = {\n  fields: {\n    status: {\n      label: \"Status\",\n      menu: [\n        {\n          label: \"Active\",\n          value: \"active\",\n        },\n        {\n          label: \"Expired\",\n          value: \"expired\",\n        },\n        {\n          label: \"Canceled\",\n          value: \"canceled\",\n        },\n      ],\n      type: Primitives.Menu,\n    },\n    cancel_date: {\n      label: \"Cancel date\",\n      type: Primitives.DateTime,\n    },\n    expiration_date: {\n      label: \"Expiration date\",\n      type: Primitives.DateTime,\n    },\n    renewal_date: {\n      label: \"Renewal date\",\n      type: Primitives.DateTime,\n    },\n    start_date: {\n      label: \"Start date\",\n      type: Primitives.DateTime,\n    },\n  },\n  name: \"Subscription\",\n  relationships: {\n    belongsTo: [\"Organization\", \"Product\", \"Team\", \"User\"],\n  },\n};`;\n}\n\n\nexport function getTeamModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const Team: ModelProps = {\n  fields: {\n    description: {\n      label: \"Description\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n  },\n  name: \"Team\",\n  relationships: {\n    belongsTo: [\"Organization\"],\n  },\n};`;\n}\n\nexport function getUserModel() {\n  return `import {\n  CurrencyCode,\n  LanguageCode,\n  LocaleCode,\n  ModelProps,\n  Primitives,\n} from \"@srclaunch/types\";\n\nexport const User: ModelProps = {\n  description: \"A user that signs into the application\",\n  fields: {\n    access: {\n      label: \"Access Details\",\n      type: Primitives.JSON,\n    },\n    cognito_id: {\n      label: \"Cognito ID\",\n      type: Primitives.String,\n    },\n    membership: {\n      label: \"Membership\",\n      type: Primitives.JSON,\n    },\n    onboarding: {\n      label: \"Onboarding\",\n      type: Primitives.JSON,\n    },\n    preferences: {\n      defaultValue: {\n        accessibility: {\n          outlines: false,\n        },\n        localization: {\n          currency: CurrencyCode.UnitedStatesDollar,\n          language: LanguageCode.English,\n          locale: LocaleCode.EnglishUnitedStates,\n        },\n        look_and_feel: {\n          theme: \"light\",\n        },\n      },\n      label: \"Preferences\",\n      type: Primitives.JSON,\n    },\n  },\n  name: \"User\",\n  relationships: {\n    belongsTo: [\"Person\", \"Team\"]\n  },\n};`;\n}\n\nexport function getUserGroupModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const UserGroup: ModelProps = {\n  fields: {\n    description: {\n      label: \"Description\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n  },\n  name: \"UserGroup\",\n  relationships: {\n    belongsTo: [\"Organization\", \"Team\"],\n  },\n};`;\n}\n\nexport function getUserRoleModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const UserRole: ModelProps = {\n  fields: {\n    description: {\n      label: \"Description\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n  },\n  name: \"UserRole\",\n  relationships: {\n    belongsTo: [\"Organization\", \"Team\"],\n  },\n};`;\n}\n", "// import fs from 'fs-extra';\n// import path from 'node:path';\n// import { Exception } from '@srclaunch/exceptions';\nimport { BuildFormat, Workspace } from '@srclaunch/types';\nimport { build as esbuild } from '../../build/esbuild.js';\n// import { build as vite, ViteBuildOptions } from '../../build/vite';\n// import { build as buildTypes, TypesBuildOptions } from '../../build/types';\n// import { cleanModels } from './clean';\nimport { buildSrcLaunchModels } from './outputs/srclaunch.js';\n// import { buildHttpClient } from './outputs/http-client';\n// // import { buildJSONModels } from './outputs/json';\n// import { buildReduxSlices } from './outputs/redux';\n// import { buildSequelizeModels } from './outputs/sequelize';\n// import { buildModelTypes } from './outputs/types';\nimport { copyStubModels } from './stubs/index.js';\n\nexport type ModelsBuildOptions = {\n  paths: {\n    dependencies: Workspace['dependencies'];\n  };\n};\n\nexport async function buildModels(\n  path: string,\n  { dependencies }: { dependencies: Workspace['dependencies'] },\n) {\n  console.info('Building Core Object dependencies...');\n\n  console.info('Adding out of box Core Objects...');\n  await copyStubModels();\n\n  console.info('Building SrcLaunch models...');\n  await buildSrcLaunchModels(path, dependencies.models.path);\n  await esbuild({\n    format: BuildFormat.ESM,\n    rootDir: dependencies.models.path,\n  });\n\n  // console.info('Creating model type definitions...');\n  // await buildModelTypes(projectConfig.dependencies.types.path);\n  // await buildTypes(projectConfig.dependencies.types.path);\n\n  // console.info('Creating Sequelize models...');\n  // await buildSequelizeModels(\n  //   projectConfig.dependencies['sequelize-models'].path,\n  // );\n  // await buildProject(projectConfig.dependencies['sequelize-models'].path);\n\n  // console.info('Building HTTP client...');\n  // await buildHttpClient({\n  //   httpClientProjectName: projectConfig.dependencies['http-client'].repo,\n  //   modelsPath: projectConfig.dependencies.models.path,\n  //   path: projectConfig.dependencies['http-client'].path,\n  //   typesProjectName: projectConfig.dependencies.types.repo,\n  // });\n  // await buildProject(projectConfig.dependencies['http-client'].path);\n\n  // console.info('Building Redux state...');\n  // await buildReduxSlices({\n  //   httpClientProjectName: projectConfig.dependencies['http-client'].repo,\n  //   projectPath: projectConfig.dependencies['redux-state'].path,\n  //   typesProjectName: projectConfig.dependencies.types.repo,\n  // });\n  // await buildProject(projectConfig.dependencies['redux-state'].path);\n}\n", "import fs from 'fs-extra';\nimport path from 'path';\n\nexport async function listModels() {\n  const modelsPath = path.join('models');\n\n  const files = fs.readdirSync(modelsPath).filter(file => {\n    return file.slice(-3) === '.ts' && file.split('.ts')[0] !== 'index';\n  });\n\n  console.info(files.map(file => file.split('.ts')[0]).toString());\n}\n", "import fs from 'fs-extra';\nimport path from 'node:path';\n\nexport async function cleanModels() {\n  try {\n    const MODEL_DEPS_PATH = path.join(path.resolve(), 'dependencies/models');\n\n    await fs.emptyDir(path.join(MODEL_DEPS_PATH, 'src'));\n\n    // const TYPES_DEPS_PATH = path.join(\n    //   path.resolve(),\n    //   APPLAB_DIRECTORY,\n    //   'dependencies/types',\n    // );\n    // const SEQUELIZE_DEPS_PATH = path.join(\n    //   path.resolve(),\n    //   APPLAB_DIRECTORY,\n    //   'dependencies/sequelize-models',\n    // );\n\n    // await fs.emptyDir(path.join(MODEL_DEPS_PATH, 'src', 'applab'));\n    // await fs.emptyDir(path.join(MODEL_DEPS_PATH, 'src', 'json'));\n    // await fs.emptyDir(path.join(TYPES_DEPS_PATH, 'src'));\n    // await fs.emptyDir(path.join(SEQUELIZE_DEPS_PATH, 'src'));\n  } catch (error: any) {\n    console.error(error);\n  }\n}\n", "import { Command, CommandType } from '../lib/command.js';\n\nimport { buildModels } from '../lib/models/build/index.js';\nimport { listModels } from '../lib/models/list.js';\nimport { cleanModels } from '../lib/models/build/clean.js';\nimport { Project, Workspace } from '@srclaunch/types';\nimport path from 'path';\n\nexport default new Command({\n  name: '',\n  description: '',\n  commands: [\n    new Command<Workspace>({\n      name: 'clean',\n      description: '',\n      run: async ({ config, flags }) => {\n        await cleanModels();\n      },\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'create',\n      description: '',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'build',\n      description: '',\n      run: async ({ config, flags }) => {\n        await buildModels(\n          path.join(path.resolve(), config.models?.path ?? 'models'),\n          {\n            dependencies: config.dependencies,\n          },\n        );\n      },\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'list',\n      description: '',\n      run: async ({ config, flags }) => {\n        await listModels();\n      },\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'help',\n      description: 'Shows help for model commands',\n      run: async () => {\n        console.info(\n          'Available model commands are: clean, build, list, and help.',\n        );\n      },\n      type: CommandType.Workspace,\n    }),\n  ],\n});\n", "import { Project } from '@srclaunch/types';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'preview',\n  description:\n    'Creates a preview of the production build with currently pending changesets',\n  commands: [\n    new Command<Project>({\n      name: 'start',\n      description:\n        'Builds a preview of the production build, and serves locally on the port provided in the project configuration file',\n      run: async () => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'help',\n      description: 'Shows help for preview commands',\n      run: async () => {\n        console.info('Available preview commands are: help');\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { Workspace } from '@srclaunch/types';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'projects',\n  description: 'Manage projects',\n  commands: [\n    new Command<Workspace>({\n      name: 'create',\n      description: 'Create a new SrcLaunch project',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'help',\n      description: 'Shows help for projects commands',\n      run: async () => {\n        console.info('Available projects commands are: create, help');\n      },\n      type: CommandType.Workspace,\n    }),\n  ],\n});\n", "import { Project } from '@srclaunch/types';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'release',\n  description: 'Manage releases',\n  commands: [\n    new Command<Project>({\n      name: 'create',\n      description: 'Create a release',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'help',\n      description: 'Shows help for release commands',\n      run: async () => {\n        console.info('Available release commands are: create, help');\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { Project } from '@srclaunch/types';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command<Project>({\n  name: 'serve',\n  description: 'Commands for serving an application or service',\n  run: async ({ config, flags }) => {},\n  type: CommandType.Project,\n  commands: [\n    new Command<Project>({\n      name: 'web-app',\n      description: 'Serves a Web application project',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'web-service',\n      description: 'Serves a Web service project',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'help',\n      description: 'Shows help for serve commands',\n      run: async () => {\n        console.info(\n          'Available serve commands are: web-app, web-service, help',\n        );\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { readFile } from './file-system';\nimport path from 'node:path';\n\nexport async function getSrcLaunchConfig() {\n  try {\n    // const configFormats = ['js', 'json', 'ts'];\n\n    try {\n      const configPath = path.join(path.resolve(), './.srclaunch/config.js');\n      const config = await import(configPath);\n\n      console.info(`Loaded config from ${configPath}`);\n      return config.default;\n    } catch (jsImportError: any) {\n      const configPath = path.join(path.resolve(), '.srclaunch', 'config.json');\n\n      try {\n        const config = await readFile(configPath);\n\n        console.info(`Loaded config from ${configPath}`);\n\n        return await JSON.parse(config.toString());\n      } catch (jsonReadError: any) {\n        throw new Error(\n          `Could not read config file: ${configPath}. ${jsonReadError.message}`,\n        );\n      }\n    }\n  } catch (err) {\n    throw new Error(\n      'Please run this command from a SrcLaunch project or workspace directory.',\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
